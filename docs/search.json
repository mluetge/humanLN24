[
  {
    "objectID": "analysis/runSpatalkDecomp_s4.html",
    "href": "analysis/runSpatalkDecomp_s4.html",
    "title": "Run spatalk decomposition - s4 batch1",
    "section": "",
    "text": "library(tidyverse)\nlibrary(SpatialExperiment)\nlibrary(here)\nlibrary(ggspavis)\nlibrary(scater)\nlibrary(ggsci)\nlibrary(scran)\nlibrary(pheatmap)\nlibrary(SpaTalk)\nlibrary(Matrix)\nlibrary(Seurat)\nlibrary(igraph)\nlibrary(biomaRt)"
  },
  {
    "objectID": "analysis/runSpatalkDecomp_s4.html#sample-4",
    "href": "analysis/runSpatalkDecomp_s4.html#sample-4",
    "title": "Run spatalk decomposition - s4 batch1",
    "section": "Sample 4",
    "text": "Sample 4\n\nLoad reference and spe object\n\nbasedir <- here()\n\n\nrefSeurat <- readRDS(paste0(basedir, \"/data/refSeurat_allCelltypesIntImm.rds\"))\n\nspeAll <- readRDS(paste0(basedir, \"/data/speAllLN.rds\"))\n\ngenes <- data.frame(geneLong=rownames(refSeurat)) %>%\n  mutate(EnsID=gsub(\"\\\\..*\", \"\", geneLong)) %>% \n  mutate(symbol=substr(geneLong, start=17, stop=nchar(geneLong)))\n\n\n\nset color palettes\n\ncolLEC <- c(\"#79AF97FF\",\"#B24745FF\",\"#DF8F44FF\")\nnames(colLEC) <- c(\"SCScLEC\", \"SCSfLEC\", \"MedSinusLEC\")\n\ncolBEC <- c(\"#48557e\", \"#e3a616\",\"#9a3038\")\nnames(colBEC) <- c(\"venBEC\", \"capBEC\", \"artBEC\")\n\n\ncolFRC <- c(\"#800000FF\", \"#FFA319FF\",\"#8A9045FF\", \"#155F83FF\",\n            \"#C16622FF\", \"#6692a3\", \"#3b7f60\")\nnames(colFRC) <- c(\"medRCIFRC\", \"TRC\", \"ACTA2+PRC\", \"VSMC\", \"PI16+RC\", \"PRC1\",\n                   \"BRC\")\n\n\ncolImm <- c(\"#0b6647\", \"#54907e\", \"#94c78a\", \"#6f9568\", \n            \"#8f2810\", \"#d0ac21\",\"#9e9f0b\", \"#486584\",\n            \"#4b5397\", \"#8873d3\", \"#6e3e7a\")\n            \nnames(colImm) <- c(\"naiveB\", \"GCB\", \"MBC\", \"plasmaCell\",\n                   \"CD4T\", \"CD8Tcm\", \"CTL/NKcell\", \"ILC3\", \"pDC\", \"Mph/DC-1\",\n                   \"Mph/DC-2\")\n\ncolAll <- c(colFRC, colBEC, colLEC, colImm) \n\ncolPal <- c(\"#F0027F\", \"#377EB8\", \"#4DAF4A\", \"#984EA3\", \"#FFD700\",\n            \"#FF7F00\", \"#1A1A1A\", \"#666666\", pal_futurama()(10))\n\n\n\nformat sc reference data\n\n## downsample\ndim(refSeurat)\n\n[1]  39642 122538\n\ntable(refSeurat$label)\n\n\n  ACTA2+PRC      artBEC         BRC      capBEC        CD4T      CD8Tcm \n       1560        1048         390        1091       39380        4006 \n CTL/NKcell         GCB        ILC3         MBC   medRCIFRC MedSinusLEC \n      10339         869        1819       17174       10129          42 \n   Mph/DC-1    Mph/DC-2      naiveB         pDC     PI16+RC  plasmaCell \n       2952         980       14118        6750         986         326 \n       PRC1     SCScLEC     SCSfLEC         TRC      venBEC        VSMC \n        760         332         129        3773        2861         724 \n\n#refSeurat$pat_plus_label <- paste0(refSeurat$patient, \"_\", refSeurat$label)\n#table(refSeurat$pat_plus_label)\n#Idents(refSeurat) <- refSeurat$pat_plus_label\nIdents(refSeurat) <- refSeurat$label\nrefSeurat <- subset(x = refSeurat, downsample = 500)\ndim(refSeurat)\n\n[1] 39642 10719\n\n#table(refSeurat$pat_plus_label)\ntable(refSeurat$label)\n\n\n  ACTA2+PRC      artBEC         BRC      capBEC        CD4T      CD8Tcm \n        500         500         390         500         500         500 \n CTL/NKcell         GCB        ILC3         MBC   medRCIFRC MedSinusLEC \n        500         500         500         500         500          42 \n   Mph/DC-1    Mph/DC-2      naiveB         pDC     PI16+RC  plasmaCell \n        500         500         500         500         500         326 \n       PRC1     SCScLEC     SCSfLEC         TRC      venBEC        VSMC \n        500         332         129         500         500         500 \n\n## counts\nsc_data <- refSeurat@assays$RNA@counts\nrownames(sc_data) <- substr(rownames(sc_data), start=17,\n                            stop=nchar(rownames(sc_data)))\n\n## celltypes\nsc_celltype <- refSeurat$label\n\n## remove CC marker\nCCmarker <- c(cc.genes.updated.2019$s.genes, cc.genes.updated.2019$g2m.genes)\ndim(sc_data)\n\n[1] 39642 10719\n\nsc_data <- sc_data[-which(rownames(sc_data) %in% CCmarker),]\ndim(sc_data)\n\n[1] 39545 10719\n\n## remove Mito and Ribosomal genes from reference\nmito.genes <- grep(pattern = \"^MT-\", x = rownames(sc_data), value = TRUE)\nRPS.genes <- grep(pattern = \"^RPS\", x = rownames(sc_data), value = TRUE)\nRPL.genes <- grep(pattern = \"^RPL\", x = rownames(sc_data), value = TRUE)\n\ndim(sc_data)\n\n[1] 39545 10719\n\nsc_data <- sc_data[-which(rownames(sc_data) %in% c(mito.genes, RPS.genes,\n                                                   RPL.genes)),]\ndim(sc_data)\n\n[1] 38478 10719\n\n\n\n\nvis input data\n\nref data\n\nIdents(refSeurat) <- refSeurat$label\nDimPlot(refSeurat, reduction = \"umap\", cols = colAll, raster = F, shuffle = T)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nremove(refSeurat)\n\n\n\nST data\n\ni <- 4\nsid <- names(speAll[i])\nspe <- speAll[[i]]\n\nplotSpots(spe, annotate = \"label\", \n          palette = colPal, size = 0.8) + \n    ggtitle(sid)\n\n\n\nremove(speAll)\n\n\n\n\nformat spatial data\n\n## counts\nst_data <- spe@assays@data$counts\n\n## transform gene names\ngenesST <- data.frame(EnsID=rownames(st_data)) %>%\n  left_join(., genes, by=\"EnsID\") \n\nmart <- useDataset(\"hsapiens_gene_ensembl\", useMart(\"ensembl\"))\ngene_IDs <- getBM(filters= \"ensembl_gene_id\", attributes= c(\"ensembl_gene_id\",\"hgnc_symbol\"),\n              values = genesST$EnsID, mart= mart, useCache = F)\ncolnames(gene_IDs) <- c(\"EnsID\", \"symbolMart\")\ngene_IDs <- gene_IDs[-which(duplicated(gene_IDs$EnsID)),]\n\ngenesST <- genesST %>% left_join(., gene_IDs, by=\"EnsID\") %>% \n  mutate(symbolFin=ifelse(is.na(symbol),ifelse(symbolMart ==\"\", EnsID, symbolMart),symbol))\nrownames(st_data) <- genesST$symbolFin\n\nst_data <- rev_gene(data = st_data,\n                         data_type = \"count\",\n                         species = \"Human\",\n                         geneinfo = geneinfo)\n## coords\nst_meta <- data.frame(spot=colnames(spe),\n                      x=spe@int_colData@listData$spatialCoords[,\"pxl_col_in_fullres\"],\n                     y=-1*(spe@int_colData@listData$spatialCoords[,\"pxl_row_in_fullres\"]))\n\nobj <- createSpaTalk(st_data = as.matrix(st_data),\n                     st_meta = st_meta,\n                     species = \"Human\",\n                     if_st_is_sc = F,\n                     spot_max_cell = 30)\n\n\n\nsave object to run CT on server\n\n\ncelltype decomposition\n\nremove(st_data)\nremove(st_meta)\nremove(mart)\n\nobj <- dec_celltype(object = obj,\n                    sc_data = sc_data,\n                    sc_celltype = sc_celltype,\n                    if_use_hvg = T,\n                    use_n_cores = 6,\n                    iter_num = 100,\n                    if_use_normalize_data = F)\n\n\nsaveRDS(obj, file=paste0(basedir, \"/data/ST/spatalk/spatalkDecomp_s4.rds\"))\n\n\n\nvis predicted celltypes\n\n\nInfer cell-cell communications"
  },
  {
    "objectID": "analysis/runSpatalkDecomp_s4.html#vis-top-int",
    "href": "analysis/runSpatalkDecomp_s4.html#vis-top-int",
    "title": "Run spatalk decomposition - s4 batch1",
    "section": "vis top int",
    "text": "vis top int\n\nPRC to lec\n\n\nlec to PRC\n\n\nPRC to bec\n\n\nbec to PRC\n\n\nPRC to imm\n\n\nimm to PRC"
  },
  {
    "objectID": "analysis/runSpatalkDecomp_s4.html#session-info",
    "href": "analysis/runSpatalkDecomp_s4.html#session-info",
    "title": "Run spatalk decomposition - s4 batch1",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] parallel  stats4    stats     graphics  grDevices utils     datasets \n[8] methods   base     \n\nother attached packages:\n [1] biomaRt_2.56.1              igraph_2.0.2               \n [3] Seurat_5.0.2                SeuratObject_5.0.1         \n [5] sp_2.1-3                    Matrix_1.6-5               \n [7] SpaTalk_1.0                 doParallel_1.0.17          \n [9] iterators_1.0.14            foreach_1.5.2              \n[11] ggalluvial_0.12.5           pheatmap_1.0.12            \n[13] scran_1.28.2                ggsci_3.0.1                \n[15] scater_1.28.0               scuttle_1.10.3             \n[17] ggspavis_1.6.0              here_1.0.1                 \n[19] SpatialExperiment_1.10.0    SingleCellExperiment_1.22.0\n[21] SummarizedExperiment_1.30.2 Biobase_2.60.0             \n[23] GenomicRanges_1.52.1        GenomeInfoDb_1.36.4        \n[25] IRanges_2.36.0              S4Vectors_0.40.1           \n[27] BiocGenerics_0.48.0         MatrixGenerics_1.12.3      \n[29] matrixStats_1.2.0           lubridate_1.9.3            \n[31] forcats_1.0.0               stringr_1.5.1              \n[33] dplyr_1.1.4                 purrr_1.0.2                \n[35] readr_2.1.5                 tidyr_1.3.1                \n[37] tibble_3.2.1                ggplot2_3.5.0              \n[39] tidyverse_2.0.0            \n\nloaded via a namespace (and not attached):\n  [1] spatstat.sparse_3.0-3     bitops_1.0-7             \n  [3] httr_1.4.7                RColorBrewer_1.1-3       \n  [5] backports_1.4.1           tools_4.3.0              \n  [7] sctransform_0.4.1         utf8_1.2.4               \n  [9] R6_2.5.1                  HDF5Array_1.28.1         \n [11] lazyeval_0.2.2            uwot_0.1.16              \n [13] rhdf5filters_1.12.1       withr_3.0.0              \n [15] prettyunits_1.2.0         gridExtra_2.3            \n [17] progressr_0.14.0          cli_3.6.2                \n [19] spatstat.explore_3.2-6    fastDummies_1.7.3        \n [21] scatterpie_0.2.1          labeling_0.4.3           \n [23] spatstat.data_3.0-4       ggridges_0.5.6           \n [25] pbapply_1.7-2             R.utils_2.12.3           \n [27] parallelly_1.37.1         limma_3.56.2             \n [29] RSQLite_2.3.5             rstudioapi_0.15.0        \n [31] generics_0.1.3            ica_1.0-3                \n [33] spatstat.random_3.2-3     car_3.1-2                \n [35] ggbeeswarm_0.7.2          fansi_1.0.6              \n [37] abind_1.4-5               R.methodsS3_1.8.2        \n [39] lifecycle_1.0.4           yaml_2.3.8               \n [41] edgeR_3.42.4              carData_3.0-5            \n [43] BiocFileCache_2.8.0       rhdf5_2.44.0             \n [45] Rtsne_0.17                blob_1.2.4               \n [47] grid_4.3.0                promises_1.2.1           \n [49] dqrng_0.3.2               crayon_1.5.2             \n [51] miniUI_0.1.1.1            lattice_0.22-5           \n [53] beachmat_2.16.0           cowplot_1.1.3            \n [55] KEGGREST_1.40.1           magick_2.8.3             \n [57] pillar_1.9.0              knitr_1.45               \n [59] metapod_1.8.0             rjson_0.2.21             \n [61] future.apply_1.11.1       codetools_0.2-19         \n [63] leiden_0.4.3.1            glue_1.7.0               \n [65] ggfun_0.1.4               data.table_1.15.2        \n [67] vctrs_0.6.5               png_0.1-8                \n [69] spam_2.10-0               gtable_0.3.4             \n [71] cachem_1.0.8              xfun_0.42                \n [73] S4Arrays_1.0.6            mime_0.12                \n [75] DropletUtils_1.20.0       NNLM_0.4.4               \n [77] ggside_0.3.1              survival_3.5-8           \n [79] statmod_1.5.0             bluster_1.10.0           \n [81] ellipsis_0.3.2            fitdistrplus_1.1-11      \n [83] ROCR_1.0-11               nlme_3.1-164             \n [85] bit64_4.0.5               filelock_1.0.3           \n [87] progress_1.2.3            RcppAnnoy_0.0.22         \n [89] rprojroot_2.0.4           irlba_2.3.5.1            \n [91] vipor_0.4.7               KernSmooth_2.23-22       \n [93] DBI_1.2.2                 colorspace_2.1-0         \n [95] tidyselect_1.2.0          curl_5.2.1               \n [97] bit_4.0.5                 compiler_4.3.0           \n [99] BiocNeighbors_1.18.0      xml2_1.3.6               \n[101] DelayedArray_0.26.7       plotly_4.10.4            \n[103] scales_1.3.0              lmtest_0.9-40            \n[105] rappdirs_0.3.3            digest_0.6.34            \n[107] goftest_1.2-3             spatstat.utils_3.0-4     \n[109] rmarkdown_2.26            XVector_0.40.0           \n[111] htmltools_0.5.7           pkgconfig_2.0.3          \n[113] sparseMatrixStats_1.12.2  dbplyr_2.4.0             \n[115] fastmap_1.1.1             rlang_1.1.3              \n[117] htmlwidgets_1.6.4         shiny_1.8.0              \n[119] DelayedMatrixStats_1.22.6 farver_2.1.1             \n[121] zoo_1.8-12                jsonlite_1.8.8           \n[123] BiocParallel_1.34.2       R.oo_1.26.0              \n[125] BiocSingular_1.16.0       RCurl_1.98-1.14          \n[127] magrittr_2.0.3            GenomeInfoDbData_1.2.10  \n[129] dotCall64_1.1-1           patchwork_1.2.0          \n[131] Rhdf5lib_1.22.1           munsell_0.5.0            \n[133] Rcpp_1.0.12               viridis_0.6.5            \n[135] reticulate_1.35.0         stringi_1.8.3            \n[137] zlibbioc_1.46.0           MASS_7.3-60.0.1          \n[139] plyr_1.8.9                listenv_0.9.1            \n[141] ggrepel_0.9.5             deldir_2.0-4             \n[143] Biostrings_2.68.1         splines_4.3.0            \n[145] tensor_1.5                hms_1.1.3                \n[147] locfit_1.5-9.9            ggpubr_0.6.0             \n[149] spatstat.geom_3.2-9       ggsignif_0.6.4           \n[151] RcppHNSW_0.6.0            reshape2_1.4.4           \n[153] ScaledMatrix_1.8.1        XML_3.99-0.16.1          \n[155] evaluate_0.23             tzdb_0.4.0               \n[157] tweenr_2.0.3              httpuv_1.6.14            \n[159] RANN_2.6.1                polyclip_1.10-6          \n[161] future_1.33.1             scattermore_1.2          \n[163] ggforce_0.4.2             ggExtra_0.10.1           \n[165] rsvd_1.0.5                broom_1.0.5              \n[167] xtable_1.8-4              RSpectra_0.16-1          \n[169] rstatix_0.7.2             later_1.3.2              \n[171] viridisLite_0.4.2         memoise_2.0.1            \n[173] AnnotationDbi_1.62.2      beeswarm_0.4.0           \n[175] cluster_2.1.6             timechange_0.3.0         \n[177] globals_0.16.2           \n\ndate()\n\n[1] \"Wed Mar 13 18:44:45 2024\""
  },
  {
    "objectID": "analysis/clusterMarkerFRCrestingLNonly.html#load-packages",
    "href": "analysis/clusterMarkerFRCrestingLNonly.html#load-packages",
    "title": "Correlation analysis gene expression FRCs",
    "section": "Load packages",
    "text": "Load packages\n\n## load packages \nsuppressPackageStartupMessages({\n  library(dplyr)\n  library(reshape2)\n  library(ggplot2)\n  library(cowplot)\n  library(purrr)\n  library(Seurat)\n  library(tidyverse)\n  library(ggpubr)\n  library(runSeurat3)\n  library(here)\n  library(ggsci)\n  library(pheatmap)\n  library(scater)\n  library(scran)\n  library(corrplot)\n  library(RColorBrewer)\n})"
  },
  {
    "objectID": "analysis/clusterMarkerFRCrestingLNonly.html#load-seurat-object",
    "href": "analysis/clusterMarkerFRCrestingLNonly.html#load-seurat-object",
    "title": "Correlation analysis gene expression FRCs",
    "section": "load seurat object",
    "text": "load seurat object\n\nbasedir <- here()\n\nseurat <- readRDS(file= paste0(basedir,\n                               \"/data/AllPatWithoutCM_FRConly_intOrig_seurat.rds\"))\n\nDefaultAssay(object = seurat) <- \"RNA\"\n\n## set col palettes\ncolPal <- c(pal_uchicago()(6), \"#6692a3\", \"#3b7f60\")\nnames(colPal) <- c(\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\")\ncolPat <- c(pal_nejm()(7),pal_futurama()(12))[1:length(unique(seurat$patient))]\nnames(colPat) <- unique(seurat$patient)\ncolCond2 <- c(\"#6692a3\",\"#971c1c\",\"#d17d67\")\nnames(colCond2) <- unique(seurat$cond)\ncolGrp <- pal_uchicago()(length(unique(seurat$grp)))\nnames(colGrp) <- unique(seurat$grp)\ncolOri <- pal_npg()(length(unique(seurat$origin)))\nnames(colOri) <- unique(seurat$origin)\n\n## all activated in one grp\nseurat$cond2 <- seurat$cond\nseurat$cond[which(seurat$cond %in% c(\"chronic\", \"acute\"))] <- \"activated\"\ncolCond <- c(\"#6692a3\",\"#971c1c\")\nnames(colCond) <- c(\"resting\", \"activated\")"
  },
  {
    "objectID": "analysis/clusterMarkerFRCrestingLNonly.html#subset-only-resting",
    "href": "analysis/clusterMarkerFRCrestingLNonly.html#subset-only-resting",
    "title": "Correlation analysis gene expression FRCs",
    "section": "subset only resting",
    "text": "subset only resting\n\nseurat <- subset(seurat, cond==\"resting\")"
  },
  {
    "objectID": "analysis/clusterMarkerFRCrestingLNonly.html#visualize-data",
    "href": "analysis/clusterMarkerFRCrestingLNonly.html#visualize-data",
    "title": "Correlation analysis gene expression FRCs",
    "section": "visualize data",
    "text": "visualize data\n\nclustering\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPal)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colPal, pt.size=1)+\n  theme_void()\n\n\n\n\n\n\npatient\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\",\n        pt.size=0.5, shuffle = T)+\n  theme_void()\n\n\n\n\n\n\ncond\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colCond, group.by = \"cond\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colCond, group.by = \"cond\",\n        pt.size=0.5, shuffle = T)+\n  theme_void()\n\n\n\n\n\n\ngrp\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colGrp, group.by = \"grp\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\norigin\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colOri, group.by = \"origin\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")"
  },
  {
    "objectID": "analysis/clusterMarkerFRCrestingLNonly.html#generating-pseudobulks-for-each-cluster-across-hvgs",
    "href": "analysis/clusterMarkerFRCrestingLNonly.html#generating-pseudobulks-for-each-cluster-across-hvgs",
    "title": "Correlation analysis gene expression FRCs",
    "section": "generating pseudobulks for each cluster across hvgs",
    "text": "generating pseudobulks for each cluster across hvgs\n\nIdents(seurat) <- seurat$intCluster\nsce <- as.SingleCellExperiment(seurat)\n#sce.hvg <- modelGeneVar(sce)\n#sce.hvg.var <- getTopHVGs(sce.hvg, n=1000)\nsummed <- aggregateAcrossCells(sce, \n    id=colData(sce)[,c(\"intCluster\")])\n#summed <- summed[sce.hvg.var,]\nhvg.mat <- as.matrix(summed@assays@data$counts)\n\ncor.mat <- cor(hvg.mat)\ncorrplot(cor.mat, type=\"full\", order=\"hclust\",\n         col=colorRampPalette(c(\"#050473\",\"#242389\",\"#39388a\",\"#F7F7F7\", \"#B2182B\"))(50),\n         is.corr = FALSE,\n         method = \"color\")\n\n\n\ncorrplot(cor.mat, type=\"full\", order=\"hclust\",\n         col=colorRampPalette(c(\"#050473\",\"#39388a\",\"#F7F7F7\", \"#B2182B\"))(50),\n         is.corr = FALSE,\n         method = \"color\")\n\n\n\ncorrplot(cor.mat, type=\"full\", order=\"hclust\",\n         col=colorRampPalette(c(\"#39388a\",\"#F7F7F7\", \"#B2182B\"))(50),\n         is.corr = FALSE,\n         method = \"color\")\n\n\n\ncorrplot(cor.mat, type=\"full\", order=\"hclust\",\n         col=colorRampPalette(c(\"#F7F7F7\", \"#ead5d5\", \"#B2182B\"))(50),\n         is.corr = FALSE,\n         method = \"color\")\n\n\n\ncorrplot(cor.mat, type=\"full\", order=\"hclust\",\n         col=colorRampPalette(c(\"#ead5d5\", \"#ead5d5\", \"#B2182B\"))(50),\n         is.corr = FALSE,\n         method = \"color\")\n\n\n\nsce.hvg <- modelGeneVar(sce)\nsce.hvg.var <- getTopHVGs(sce.hvg, n=1000)\nsummed <- aggregateAcrossCells(sce, \n    id=colData(sce)[,c(\"intCluster\")])\nsummed <- summed[sce.hvg.var,]\nhvg.mat <- as.matrix(summed@assays@data$counts)\n\ncor.mat <- cor(hvg.mat)\ncorrplot(cor.mat, type=\"full\", order=\"hclust\",\n         col=colorRampPalette(c(\"#ead5d5\", \"#ead5d5\", \"#B2182B\"))(50),\n         is.corr = FALSE,\n         method = \"color\")"
  },
  {
    "objectID": "analysis/clusterMarkerFRCrestingLNonly.html#session-info",
    "href": "analysis/clusterMarkerFRCrestingLNonly.html#session-info",
    "title": "Correlation analysis gene expression FRCs",
    "section": "session info",
    "text": "session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] Matrix_1.6-5                RColorBrewer_1.1-3          corrplot_0.92              \n [4] scran_1.28.2                scater_1.28.0               scuttle_1.10.3             \n [7] SingleCellExperiment_1.22.0 SummarizedExperiment_1.30.2 Biobase_2.60.0             \n[10] GenomicRanges_1.52.1        GenomeInfoDb_1.36.4         IRanges_2.36.0             \n[13] S4Vectors_0.40.1            BiocGenerics_0.48.0         MatrixGenerics_1.12.3      \n[16] matrixStats_1.2.0           pheatmap_1.0.12             ggsci_3.0.1                \n[19] here_1.0.1                  runSeurat3_0.1.0            ggpubr_0.6.0               \n[22] lubridate_1.9.3             forcats_1.0.0               stringr_1.5.1              \n[25] readr_2.1.5                 tidyr_1.3.1                 tibble_3.2.1               \n[28] tidyverse_2.0.0             Seurat_5.0.2                SeuratObject_5.0.1         \n[31] sp_2.1-3                    purrr_1.0.2                 cowplot_1.1.3              \n[34] ggplot2_3.5.0               reshape2_1.4.4              dplyr_1.1.4                \n\nloaded via a namespace (and not attached):\n  [1] RcppAnnoy_0.0.22          splines_4.3.0             later_1.3.2              \n  [4] bitops_1.0-7              polyclip_1.10-6           fastDummies_1.7.3        \n  [7] lifecycle_1.0.4           rstatix_0.7.2             edgeR_3.42.4             \n [10] rprojroot_2.0.4           globals_0.16.2            lattice_0.22-5           \n [13] MASS_7.3-60.0.1           backports_1.4.1           magrittr_2.0.3           \n [16] limma_3.56.2              plotly_4.10.4             rmarkdown_2.26           \n [19] yaml_2.3.8                metapod_1.8.0             httpuv_1.6.14            \n [22] sctransform_0.4.1         spam_2.10-0               spatstat.sparse_3.0-3    \n [25] reticulate_1.35.0         pbapply_1.7-2             abind_1.4-5              \n [28] zlibbioc_1.46.0           Rtsne_0.17                RCurl_1.98-1.14          \n [31] GenomeInfoDbData_1.2.10   ggrepel_0.9.5             irlba_2.3.5.1            \n [34] listenv_0.9.1             spatstat.utils_3.0-4      goftest_1.2-3            \n [37] RSpectra_0.16-1           dqrng_0.3.2               spatstat.random_3.2-3    \n [40] fitdistrplus_1.1-11       parallelly_1.37.1         DelayedMatrixStats_1.22.6\n [43] leiden_0.4.3.1            codetools_0.2-19          DelayedArray_0.26.7      \n [46] tidyselect_1.2.0          farver_2.1.1              viridis_0.6.5            \n [49] ScaledMatrix_1.8.1        spatstat.explore_3.2-6    jsonlite_1.8.8           \n [52] BiocNeighbors_1.18.0      ellipsis_0.3.2            progressr_0.14.0         \n [55] ggridges_0.5.6            survival_3.5-8            tools_4.3.0              \n [58] ica_1.0-3                 Rcpp_1.0.12               glue_1.7.0               \n [61] gridExtra_2.3             xfun_0.42                 withr_3.0.0              \n [64] fastmap_1.1.1             bluster_1.10.0            fansi_1.0.6              \n [67] rsvd_1.0.5                digest_0.6.34             timechange_0.3.0         \n [70] R6_2.5.1                  mime_0.12                 colorspace_2.1-0         \n [73] scattermore_1.2           tensor_1.5                spatstat.data_3.0-4      \n [76] utf8_1.2.4                generics_0.1.3            data.table_1.15.2        \n [79] httr_1.4.7                htmlwidgets_1.6.4         S4Arrays_1.0.6           \n [82] uwot_0.1.16               pkgconfig_2.0.3           gtable_0.3.4             \n [85] lmtest_0.9-40             XVector_0.40.0            htmltools_0.5.7          \n [88] carData_3.0-5             dotCall64_1.1-1           scales_1.3.0             \n [91] png_0.1-8                 knitr_1.45                rstudioapi_0.15.0        \n [94] tzdb_0.4.0                nlme_3.1-164              zoo_1.8-12               \n [97] KernSmooth_2.23-22        vipor_0.4.7               parallel_4.3.0           \n[100] miniUI_0.1.1.1            pillar_1.9.0              grid_4.3.0               \n[103] vctrs_0.6.5               RANN_2.6.1                promises_1.2.1           \n[106] BiocSingular_1.16.0       car_3.1-2                 beachmat_2.16.0          \n[109] xtable_1.8-4              cluster_2.1.6             beeswarm_0.4.0           \n[112] evaluate_0.23             locfit_1.5-9.9            cli_3.6.2                \n[115] compiler_4.3.0            rlang_1.1.3               crayon_1.5.2             \n[118] future.apply_1.11.1       ggsignif_0.6.4            labeling_0.4.3           \n[121] ggbeeswarm_0.7.2          plyr_1.8.9                stringi_1.8.3            \n[124] BiocParallel_1.34.2       viridisLite_0.4.2         deldir_2.0-4             \n[127] munsell_0.5.0             lazyeval_0.2.2            spatstat.geom_3.2-9      \n[130] RcppHNSW_0.6.0            hms_1.1.3                 patchwork_1.2.0          \n[133] sparseMatrixStats_1.12.2  future_1.33.1             statmod_1.5.0            \n[136] shiny_1.8.0               ROCR_1.0-11               igraph_2.0.2             \n[139] broom_1.0.5              \n\ndate()\n\n[1] \"Wed Mar 13 18:45:43 2024\""
  },
  {
    "objectID": "analysis/visRestingLNonly.html#load-packages",
    "href": "analysis/visRestingLNonly.html#load-packages",
    "title": "visualize marker genes FRCs - resting LN only",
    "section": "Load packages",
    "text": "Load packages\n\n## load packages \nsuppressPackageStartupMessages({\n  library(dplyr)\n  library(reshape2)\n  library(ggplot2)\n  library(cowplot)\n  library(purrr)\n  library(Seurat)\n  library(tidyverse)\n  library(ggpubr)\n  library(runSeurat3)\n  library(here)\n  library(ggsci)\n  library(pheatmap)\n  library(scater)\n  library(clusterProfiler)\n  library(org.Hs.eg.db)\n  library(DOSE)\n  library(enrichplot)\n})"
  },
  {
    "objectID": "analysis/visRestingLNonly.html#load-seurat-object",
    "href": "analysis/visRestingLNonly.html#load-seurat-object",
    "title": "visualize marker genes FRCs - resting LN only",
    "section": "load seurat object",
    "text": "load seurat object\n\nbasedir <- here()\n\nseurat <- readRDS(file= paste0(basedir,\n                               \"/data/AllPatWithoutCM_FRConly_intOrig_seurat.rds\"))\n\nDefaultAssay(object = seurat) <- \"RNA\"\n\n## set col palettes\ncolPal <- c(pal_uchicago()(6), \"#6692a3\", \"#3b7f60\")\nnames(colPal) <- c(\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\")\ncolPat <- c(pal_nejm()(7),pal_futurama()(12))[1:length(unique(seurat$patient))]\nnames(colPat) <- unique(seurat$patient)\ncolCond2 <- c(\"#6692a3\",\"#971c1c\",\"#d17d67\")\nnames(colCond2) <- unique(seurat$cond)\ncolGrp <- pal_uchicago()(length(unique(seurat$grp)))\nnames(colGrp) <- unique(seurat$grp)\ncolOri <- pal_npg()(length(unique(seurat$origin)))\nnames(colOri) <- unique(seurat$origin)\n\n## all activated in one grp\nseurat$cond2 <- seurat$cond\nseurat$cond[which(seurat$cond %in% c(\"chronic\", \"acute\"))] <- \"activated\"\ncolCond <- c(\"#6692a3\",\"#971c1c\")\nnames(colCond) <- c(\"resting\", \"activated\")"
  },
  {
    "objectID": "analysis/visRestingLNonly.html#subset-only-resting",
    "href": "analysis/visRestingLNonly.html#subset-only-resting",
    "title": "visualize marker genes FRCs - resting LN only",
    "section": "subset only resting",
    "text": "subset only resting\n\nseurat <- subset(seurat, cond==\"resting\")"
  },
  {
    "objectID": "analysis/visRestingLNonly.html#visualize-data",
    "href": "analysis/visRestingLNonly.html#visualize-data",
    "title": "visualize marker genes FRCs - resting LN only",
    "section": "visualize data",
    "text": "visualize data\n\nclustering\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPal)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colPal, pt.size=1)+\n  theme_void()\n\n\n\n\n\n\npatient\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\",\n        pt.size=0.5, shuffle = T)+\n  theme_void()\n\n\n\n\n\n\ncond\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colCond, group.by = \"cond\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colCond, group.by = \"cond\",\n        pt.size=0.5, shuffle = T)+\n  theme_void()\n\n\n\n\n\n\ngrp\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colGrp, group.by = \"grp\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\norigin\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colOri, group.by = \"origin\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")"
  },
  {
    "objectID": "analysis/visRestingLNonly.html#vis-selected-stroma-marker",
    "href": "analysis/visRestingLNonly.html#vis-selected-stroma-marker",
    "title": "visualize marker genes FRCs - resting LN only",
    "section": "vis selected stroma marker",
    "text": "vis selected stroma marker\n\nIdents(seurat) <- seurat$intCluster\ncluster <- levels(seurat)\n\ngenes <- data.frame(gene=rownames(seurat)) %>% \n    mutate(geneID=gsub(\"^.*\\\\.\", \"\", gene)) \n\nselGenesAll <- read_tsv(file = paste0(basedir,\n                                      \"/data/overallFRCMarker.txt\")) %>% \n  left_join(., genes, by = \"geneID\") %>% \n  filter(!gene == \"ENSG00000232995.RGS5\")\n\nseurat$intCluster <- factor(seurat$intCluster, levels = c(\"7\", \"2\",\"0\",\"1\",\n                                                          \"5\", \"6\", \"3\", \"4\"))\nIdents(seurat) <- seurat$intCluster\npOut <- avgHeatmap(seurat = seurat, selGenes = selGenesAll,\n                  colVecIdent = colPal, \n                  ordVec=levels(seurat),\n                  gapVecR=NULL, gapVecC=NULL,cc=F,\n                  cr=F, condCol=F)\n\n\n\n\n\nDotplot\n\nDotPlot(seurat, assay=\"RNA\", features = rev(selGenesAll$gene), scale =T,\n        cluster.idents = F) +\n  scale_color_viridis_c() +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  scale_x_discrete(breaks=rev(selGenesAll$gene), labels=rev(selGenesAll$geneID)) +\n  xlab(\"\") + ylab(\"\")\n\n\n\nDotPlot(seurat, assay=\"RNA\", features = rev(selGenesAll$gene), scale =F,\n        cluster.idents = F) +\n  scale_color_viridis_c() +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  scale_x_discrete(breaks=rev(selGenesAll$gene), labels=rev(selGenesAll$geneID)) +\n  xlab(\"\") + ylab(\"\")\n\n\n\n\n\n\nFeatureplot\n\npList <- sapply(selGenesAll$gene, function(x){\np <- FeaturePlot(seurat, reduction = \"umap\", \n            features = x,\n            cols=c(\"lightgrey\", \"darkred\"),\n            order = F)+\n  theme(legend.position=\"right\")\n  plot(p)\n})"
  },
  {
    "objectID": "analysis/visRestingLNonly.html#project-signatures",
    "href": "analysis/visRestingLNonly.html#project-signatures",
    "title": "visualize marker genes FRCs - resting LN only",
    "section": "project signatures",
    "text": "project signatures\n\ngenesDat <- data.frame(EnsID=rownames(seurat)) %>% \n  mutate(gene=gsub(\".*\\\\.\", \"\", EnsID))\nselGenes <- data.frame(gene=c(\"ACTA2\", \"TAGLN\", \"MYH11\", \"TPM1\", \"MCAM\", \"RGS5\")) %>% \n  left_join(., genesDat, by=\"gene\")\n\nseurat <- AddModuleScore(\n  object = seurat,\n  features = list(c(selGenes$EnsID)),\n  ctrl = 5,\n  name = 'VSMCsign'\n)\n\ncut <- 0.8*max(seurat$VSMCsign1)\nselSign <- \"VSMCsign1\" \np <- FeaturePlot(seurat, reduction = \"umap\", pt.size = 1, max.cutoff = cut,\n            features = selSign,\n            cols=c(\"#00155e\", \"#4575B4\", \"#FFFFBF\" ,\"#f6aa3e\", \n                    \"#d64141\",\"#8c0128\"),\n            order = F)+\n  theme(legend.position=\"right\")\nplot(p)\n\n\n\np <- FeaturePlot(seurat, reduction = \"umap\", pt.size = 1, max.cutoff = cut,\n            features = selSign,\n            cols=rev(c(\"#D73027\", \"#FC8D59\",\"#FEE090\", \"#E0F3F8\", \"#91BFDB\", \"#4575B4\")),\n            order = F)+\n  theme(legend.position=\"right\")\nplot(p)\n\n\n\np <- FeaturePlot(seurat, reduction = \"umap\", pt.size = 1, max.cutoff = cut,\n            features = selSign,\n            cols=c( '#d7eae7', '#74a6b3' ,'#5b8ea9', '#2c5c9e', '#00429d', \"#00155e\"),\n            order = F)+\n  theme(legend.position=\"right\")\nplot(p)\n\n\n\np <- FeaturePlot(seurat, reduction = \"umap\", pt.size = 1, max.cutoff = cut,\n            features = selSign,\n            cols=c('#dadada', '#c3b0b1' ,'#9c676b', '#93003a', '#6c1835'),\n            order = F)+\n  theme(legend.position=\"right\")\nplot(p)\n\n\n\nIdents(seurat) <- seurat$intCluster\nselGenesForm <- selGenes %>% mutate(geneID=gene) %>%\n  dplyr::select(geneID, EnsID) %>% mutate(gene=EnsID)\npOut <- avgHeatmap(seurat = seurat, selGenes = selGenesForm,\n                  colVecIdent = colPal, \n                  ordVec=levels(seurat),\n                  gapVecR=NULL, gapVecC=NULL,cc=F,\n                  cr=F, condCol=F)\n\n\n\nselGenes <- data.frame(gene=c(\"CCL19\", \"CCL21\", \"CXCL13\", \"LUM\", \"THY1\",\n                              \"PDGFRA\", \"PDGFRB\", \"COL1A1\", \"COL1A2\", \"COL3A1\")) %>% \n  left_join(., genesDat, by=\"gene\")\n\nseurat <- AddModuleScore(\n  object = seurat,\n  features = list(c(selGenes$EnsID)),\n  ctrl = 5,\n  name = 'FRCsign'\n)\n\ncut <- 0.8*max(seurat$FRCsign1)\nselSign <- \"FRCsign1\" \np <- FeaturePlot(seurat, reduction = \"umap\", pt.size = 1, max.cutoff = cut,\n            features = selSign,\n            cols=c(\"#00155e\", \"#4575B4\", \"#FFFFBF\" ,\"#f6aa3e\", \n                    \"#d64141\",\"#8c0128\"),\n            order = F)+\n  theme(legend.position=\"right\")\nplot(p)\n\n\n\np <- FeaturePlot(seurat, reduction = \"umap\", pt.size = 1, max.cutoff = cut,\n            features = selSign,\n            cols=rev(c(\"#D73027\", \"#FC8D59\",\"#FEE090\", \"#E0F3F8\", \"#91BFDB\", \"#4575B4\")),\n            order = F)+\n  theme(legend.position=\"right\")\nplot(p)\n\n\n\np <- FeaturePlot(seurat, reduction = \"umap\", pt.size = 1, max.cutoff = cut,\n            features = selSign,\n            cols=c( '#d7eae7', '#74a6b3' ,'#5b8ea9', '#2c5c9e', '#00429d', \"#00155e\"),\n            order = F)+\n  theme(legend.position=\"right\")\nplot(p)\n\n\n\np <- FeaturePlot(seurat, reduction = \"umap\", pt.size = 1, max.cutoff = cut,\n            features = selSign,\n            cols=c('#dadada', '#c3b0b1' ,'#9c676b', '#93003a', '#6c1835'),\n            order = F)+\n  theme(legend.position=\"right\")\nplot(p)\n\n\n\nselGenesForm <- selGenes %>% mutate(geneID=gene) %>%\n  dplyr::select(geneID, EnsID) %>% mutate(gene=EnsID)\npOut <- avgHeatmap(seurat = seurat, selGenes = selGenesForm,\n                  colVecIdent = colPal, \n                  ordVec=levels(seurat),\n                  gapVecR=NULL, gapVecC=NULL,cc=F,\n                  cr=F, condCol=F)\n\n\n\nselGenes <- data.frame(gene=c(\"CCL19\", \"CCL21\", \"CXCL13\", \"LUM\", \"PDGFRA\",\n                              \"PGFRB\")) %>% \n  left_join(., genesDat, by=\"gene\")\n\nIdents(seurat) <- seurat$grp\nseurat <- AddModuleScore(\n  object = seurat,\n  features = list(c(selGenes$EnsID)),\n  ctrl = 5,\n  name = 'FRC2sign'\n)\n\ncut <- 0.8*max(seurat$FRC2sign1)\nselSign <- \"FRC2sign1\" \np <- FeaturePlot(seurat, reduction = \"umap\", pt.size = 1, max.cutoff = cut,\n            features = selSign,\n            cols=c(\"#00155e\", \"#4575B4\",\"#E0F3F8\", \"#FFFFBF\" ,\"#f6aa3e\",\"#d64141\"),\n            order = F)+\n  theme(legend.position=\"right\")\nplot(p)\n\n\n\np <- FeaturePlot(seurat, reduction = \"umap\", pt.size = 1, max.cutoff = cut,\n            features = selSign,\n            cols=rev(c(\"#D73027\", \"#FC8D59\",\"#FEE090\", \"#E0F3F8\", \"#91BFDB\", \"#4575B4\")),\n            order = F)+\n  theme(legend.position=\"right\")\nplot(p)\n\n\n\np <- FeaturePlot(seurat, reduction = \"umap\", pt.size = 1, max.cutoff = cut,\n            features = selSign,\n            cols=c( '#d7eae7', '#74a6b3' ,'#5b8ea9', '#2c5c9e', '#00429d', \"#00155e\"),\n            order = F)+\n  theme(legend.position=\"right\")\nplot(p)\n\n\n\np <- FeaturePlot(seurat, reduction = \"umap\", pt.size = 1, max.cutoff = cut,\n            features = selSign,\n            cols=c('#dadada', '#c3b0b1' ,'#9c676b', '#93003a', '#6c1835'),\n            order = F)+\n  theme(legend.position=\"right\")\nplot(p)"
  },
  {
    "objectID": "analysis/visRestingLNonly.html#gene-signature-perivasular-niche",
    "href": "analysis/visRestingLNonly.html#gene-signature-perivasular-niche",
    "title": "visualize marker genes FRCs - resting LN only",
    "section": "gene signature perivasular niche",
    "text": "gene signature perivasular niche\n\nperiCluster <- c(\"3\", \"4\", \"5\", \"6\")\nothers <- c(\"0\", \"1\", \"2\", \"7\")\nseurat$peri <- \"peri\"\nseurat$peri[which(seurat$intCluster %in% others)] <- \"other\"\nIdents(seurat) <- seurat$peri\n\nclustDE <- lapply(periCluster, function(cl){\n  seuratSub <- subset(seurat, intCluster %in% c(cl, others))\n  DEgenes <-FindAllMarkers(seuratSub, only.pos=T, logfc.threshold = 0.1,\n                           min.pct = 0.01)\n  if(nrow(DEgenes)>1){\n    DEgenes <- DEgenes %>% filter(p_val_adj<0.01) %>%\n      mutate(group=paste0(cl, \"_\", cluster)) %>% \n      mutate(geneID=gsub(\".*\\\\.\", \"\",  gene)) \n    }\n})\n\nnames(clustDE) <- periCluster\n\nclustDE_Dat <- data.frame(do.call(\"rbind\", clustDE))\n\nintersectMarker <- clustDE_Dat %>% group_by(cluster, gene) %>%\n  summarize(cnt=n())\n\nselGenes <- data.frame(gene=c(\"ANXA1\",\"ASPN\", \"CD9\", \"ANGPT1\", \"EBF1\", \"EBF2\",\n                              \"A2M\",\"SPARCL1\", \"CAV1\", \"CAV2\",  \"ENPEP\")) %>% \n  left_join(., genesDat, by=\"gene\")\n\nseurat <- AddModuleScore(\n  object = seurat,\n  features = list(c(selGenes$EnsID)),\n  ctrl = 5,\n  name = 'PRCsign'\n)\n\ncut <- 0.8*max(seurat$PRCsign1)\nselSign <- \"PRCsign1\" \np <- FeaturePlot(seurat, reduction = \"umap\", pt.size = 1, max.cutoff = cut,\n            features = selSign,\n            cols=c(\"#00155e\", \"#4575B4\",\"#E0F3F8\", \"#FFFFBF\" ,\"#f6aa3e\",\"#d64141\"),\n            order = F)+\n  theme(legend.position=\"right\")\nplot(p)\n\n\n\np <- FeaturePlot(seurat, reduction = \"umap\", pt.size = 1, max.cutoff = cut,\n            features = selSign,\n            cols=rev(c(\"#D73027\", \"#FC8D59\",\"#FEE090\", \"#E0F3F8\", \"#91BFDB\", \"#4575B4\")),\n            order = F)+\n  theme(legend.position=\"right\")\nplot(p)\n\n\n\np <- FeaturePlot(seurat, reduction = \"umap\", pt.size = 1, max.cutoff = cut,\n            features = selSign,\n            cols=c( '#d7eae7', '#74a6b3' ,'#5b8ea9', '#2c5c9e', '#00429d', \"#00155e\"),\n            order = F)+\n  theme(legend.position=\"right\")\nplot(p)\n\n\n\np <- FeaturePlot(seurat, reduction = \"umap\", pt.size = 1, max.cutoff = cut,\n            features = selSign,\n            cols=c('#dadada', '#c3b0b1' ,'#9c676b', '#93003a', '#6c1835'),\n            order = F)+\n  theme(legend.position=\"right\")\nplot(p)\n\n\n\n\n\ndotplot perivascular gene signature\n\nIdents(seurat) <- seurat$intCluster\nDotPlot(seurat, assay=\"RNA\", features = rev(selGenes$EnsID), scale =T,\n        cluster.idents = F) +\n  scale_color_viridis_c() +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  scale_x_discrete(breaks=rev(selGenes$EnsID), labels=rev(selGenes$gene)) +\n  xlab(\"\") + ylab(\"\")\n\n\n\nDotPlot(seurat, assay=\"RNA\", features = rev(selGenes$EnsID), scale =F,\n        cluster.idents = F) +\n  scale_color_viridis_c() +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  scale_x_discrete(breaks=rev(selGenes$EnsID), labels=rev(selGenes$gene)) +\n  xlab(\"\") + ylab(\"\")\n\n\n\n\n\n\nheatmap\n\nselGenesForm <- selGenes %>% mutate(geneID=gene) %>%\n  dplyr::select(geneID, EnsID) %>% mutate(gene=EnsID)\npOut <- avgHeatmap(seurat = seurat, selGenes = selGenesForm,\n                  colVecIdent = colPal, \n                  ordVec=levels(seurat),\n                  gapVecR=NULL, gapVecC=NULL,cc=F,\n                  cr=F, condCol=F)\n\n\n\n\n\n\nGO term enrichment\n\ncolPeri <- c(\"#394e9a\", \"#aeafb1\")\nnames(colPeri) <- c(\"peri\", \"others\")\n\nselGenesGO <- intersectMarker %>% dplyr::filter(cluster==\"peri\" & cnt==4) %>% \n  mutate(EnsID = gsub(\"\\\\..*$\", \"\", gene))\negoA <- enrichGO(gene         = unique(selGenesGO$EnsID),\n                OrgDb         = org.Hs.eg.db,\n                keyType       = 'ENSEMBL',\n                ont           = \"BP\",\n                pAdjustMethod = \"BH\",\n                pvalueCutoff  = 0.05,\n                qvalueCutoff  = 0.05)\negoA <- setReadable(egoA, OrgDb = org.Hs.eg.db)\negoADat <- egoA@result\nselGO <- c(\"GO:0006936\", \"GO:0031032\", \"GO:0031589\",\n           \"GO:1903522\", \"GO:0097746\", \"GO:0071711\", \"GO:1901888\", \"GO:0050878\")\n\nselGODat <- egoADat %>% filter(ID %in% selGO) %>% mutate(cluster=\"peri\")\nselGODat <- selGODat %>% mutate(qscore=-log(p.adjust, base=10)) \np <- ggbarplot(selGODat, x = \"Description\", y = \"qscore\",\n          fill = \"cluster\",               \n          color = \"cluster\",            \n          palette = colPeri,            \n          sort.val = \"asc\",           \n          sort.by.groups = TRUE      \n          #x.text.angle = 90           \n          ) + \n  rotate()\np"
  },
  {
    "objectID": "analysis/visRestingLNonly.html#session-info",
    "href": "analysis/visRestingLNonly.html#session-info",
    "title": "visualize marker genes FRCs - resting LN only",
    "section": "session info",
    "text": "session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] enrichplot_1.20.3           DOSE_3.26.2                 org.Hs.eg.db_3.17.0        \n [4] AnnotationDbi_1.62.2        clusterProfiler_4.8.3       scater_1.28.0              \n [7] scuttle_1.10.3              SingleCellExperiment_1.22.0 SummarizedExperiment_1.30.2\n[10] Biobase_2.60.0              GenomicRanges_1.52.1        GenomeInfoDb_1.36.4        \n[13] IRanges_2.36.0              S4Vectors_0.40.1            BiocGenerics_0.48.0        \n[16] MatrixGenerics_1.12.3       matrixStats_1.2.0           pheatmap_1.0.12            \n[19] ggsci_3.0.1                 here_1.0.1                  runSeurat3_0.1.0           \n[22] ggpubr_0.6.0                lubridate_1.9.3             forcats_1.0.0              \n[25] stringr_1.5.1               readr_2.1.5                 tidyr_1.3.1                \n[28] tibble_3.2.1                tidyverse_2.0.0             Seurat_5.0.2               \n[31] SeuratObject_5.0.1          sp_2.1-3                    purrr_1.0.2                \n[34] cowplot_1.1.3               ggplot2_3.5.0               reshape2_1.4.4             \n[37] dplyr_1.1.4                \n\nloaded via a namespace (and not attached):\n  [1] fs_1.6.3                  spatstat.sparse_3.0-3     bitops_1.0-7             \n  [4] HDO.db_0.99.1             httr_1.4.7                RColorBrewer_1.1-3       \n  [7] tools_4.3.0               sctransform_0.4.1         backports_1.4.1          \n [10] utf8_1.2.4                R6_2.5.1                  lazyeval_0.2.2           \n [13] uwot_0.1.16               withr_3.0.0               gridExtra_2.3            \n [16] progressr_0.14.0          cli_3.6.2                 spatstat.explore_3.2-6   \n [19] fastDummies_1.7.3         scatterpie_0.2.1          labeling_0.4.3           \n [22] spatstat.data_3.0-4       ggridges_0.5.6            pbapply_1.7-2            \n [25] yulab.utils_0.1.4         gson_0.1.0                parallelly_1.37.1        \n [28] limma_3.56.2              rstudioapi_0.15.0         RSQLite_2.3.5            \n [31] gridGraphics_0.5-1        generics_0.1.3            vroom_1.6.5              \n [34] ica_1.0-3                 spatstat.random_3.2-3     car_3.1-2                \n [37] GO.db_3.17.0              Matrix_1.6-5              ggbeeswarm_0.7.2         \n [40] fansi_1.0.6               abind_1.4-5               lifecycle_1.0.4          \n [43] yaml_2.3.8                carData_3.0-5             qvalue_2.32.0            \n [46] Rtsne_0.17                grid_4.3.0                blob_1.2.4               \n [49] promises_1.2.1            crayon_1.5.2              miniUI_0.1.1.1           \n [52] lattice_0.22-5            beachmat_2.16.0           KEGGREST_1.40.1          \n [55] pillar_1.9.0              knitr_1.45                fgsea_1.26.0             \n [58] future.apply_1.11.1       codetools_0.2-19          fastmatch_1.1-4          \n [61] leiden_0.4.3.1            glue_1.7.0                ggfun_0.1.4              \n [64] downloader_0.4            data.table_1.15.2         treeio_1.24.3            \n [67] vctrs_0.6.5               png_0.1-8                 spam_2.10-0              \n [70] gtable_0.3.4              cachem_1.0.8              xfun_0.42                \n [73] S4Arrays_1.0.6            mime_0.12                 tidygraph_1.3.1          \n [76] survival_3.5-8            ellipsis_0.3.2            fitdistrplus_1.1-11      \n [79] ROCR_1.0-11               nlme_3.1-164              ggtree_3.8.2             \n [82] bit64_4.0.5               RcppAnnoy_0.0.22          rprojroot_2.0.4          \n [85] irlba_2.3.5.1             vipor_0.4.7               KernSmooth_2.23-22       \n [88] colorspace_2.1-0          DBI_1.2.2                 tidyselect_1.2.0         \n [91] bit_4.0.5                 compiler_4.3.0            BiocNeighbors_1.18.0     \n [94] DelayedArray_0.26.7       plotly_4.10.4             shadowtext_0.1.3         \n [97] scales_1.3.0              lmtest_0.9-40             digest_0.6.34            \n[100] goftest_1.2-3             presto_1.0.0              spatstat.utils_3.0-4     \n[103] rmarkdown_2.26            XVector_0.40.0            htmltools_0.5.7          \n[106] pkgconfig_2.0.3           sparseMatrixStats_1.12.2  fastmap_1.1.1            \n[109] rlang_1.1.3               htmlwidgets_1.6.4         shiny_1.8.0              \n[112] DelayedMatrixStats_1.22.6 farver_2.1.1              zoo_1.8-12               \n[115] jsonlite_1.8.8            BiocParallel_1.34.2       GOSemSim_2.26.1          \n[118] BiocSingular_1.16.0       RCurl_1.98-1.14           magrittr_2.0.3           \n[121] ggplotify_0.1.2           GenomeInfoDbData_1.2.10   dotCall64_1.1-1          \n[124] patchwork_1.2.0           munsell_0.5.0             Rcpp_1.0.12              \n[127] ape_5.7-1                 viridis_0.6.5             reticulate_1.35.0        \n[130] stringi_1.8.3             ggraph_2.2.0              zlibbioc_1.46.0          \n[133] MASS_7.3-60.0.1           plyr_1.8.9                parallel_4.3.0           \n[136] listenv_0.9.1             ggrepel_0.9.5             deldir_2.0-4             \n[139] graphlayouts_1.1.0        Biostrings_2.68.1         splines_4.3.0            \n[142] tensor_1.5                hms_1.1.3                 igraph_2.0.2             \n[145] spatstat.geom_3.2-9       ggsignif_0.6.4            RcppHNSW_0.6.0           \n[148] ScaledMatrix_1.8.1        evaluate_0.23             tzdb_0.4.0               \n[151] tweenr_2.0.3              httpuv_1.6.14             RANN_2.6.1               \n[154] polyclip_1.10-6           future_1.33.1             scattermore_1.2          \n[157] ggforce_0.4.2             rsvd_1.0.5                broom_1.0.5              \n[160] xtable_1.8-4              tidytree_0.4.6            RSpectra_0.16-1          \n[163] rstatix_0.7.2             later_1.3.2               viridisLite_0.4.2        \n[166] aplot_0.2.2               memoise_2.0.1             beeswarm_0.4.0           \n[169] cluster_2.1.6             timechange_0.3.0          globals_0.16.2           \n\ndate()\n\n[1] \"Wed Mar 13 18:48:18 2024\""
  },
  {
    "objectID": "analysis/visFRCMarkerGenes_woCM.html#load-packages",
    "href": "analysis/visFRCMarkerGenes_woCM.html#load-packages",
    "title": "visualize marker genes FRC subsets",
    "section": "Load packages",
    "text": "Load packages\n\n## load packages \nsuppressPackageStartupMessages({\n  library(dplyr)\n  library(reshape2)\n  library(ggplot2)\n  library(cowplot)\n  library(purrr)\n  library(Seurat)\n  library(tidyverse)\n  library(ggpubr)\n  library(runSeurat3)\n  library(here)\n  library(ggsci)\n  library(pheatmap)\n  library(scater)\n})"
  },
  {
    "objectID": "analysis/visFRCMarkerGenes_woCM.html#load-seurat-object",
    "href": "analysis/visFRCMarkerGenes_woCM.html#load-seurat-object",
    "title": "visualize marker genes FRC subsets",
    "section": "load seurat object",
    "text": "load seurat object\n\nbasedir <- here()\n\nseurat <- readRDS(file= paste0(basedir,\n                               \"/data/AllPatWithoutCM_FRConly_intOrig_seurat.rds\"))\n\nDefaultAssay(object = seurat) <- \"RNA\"\nseurat$intCluster <- seurat$integrated_snn_res.0.25\nIdents(seurat) <- seurat$intCluster\nseurat <- subset(seurat, intCluster==\"8\", invert=T)\n\n## set col palettes\ncolPal <- c(pal_uchicago()(6), \"#6692a3\", \"#3b7f60\")\nnames(colPal) <- c(\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\")\ncolPat <- c(pal_nejm()(7),pal_futurama()(12))[1:length(unique(seurat$patient))]\nnames(colPat) <- unique(seurat$patient)\ncolCond <- c(\"#6692a3\",\"#971c1c\",\"#d17d67\")\nnames(colCond) <- unique(seurat$cond)\ncolGrp <- pal_uchicago()(length(unique(seurat$grp)))\nnames(colGrp) <- unique(seurat$grp)\ncolOri <- pal_npg()(length(unique(seurat$origin)))\nnames(colOri) <- unique(seurat$origin)"
  },
  {
    "objectID": "analysis/visFRCMarkerGenes_woCM.html#visualize-data",
    "href": "analysis/visFRCMarkerGenes_woCM.html#visualize-data",
    "title": "visualize marker genes FRC subsets",
    "section": "visualize data",
    "text": "visualize data\n\nclustering\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPal)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colPal, pt.size=0.5)+\n  theme_void()\n\n\n\n\n\n\ncluster split by cond\n\nDimPlot(seurat, reduction = \"umap\", cols=colPal, pt.size=0.5,\n        split.by = \"cond\")+\n  theme_void()\n\n\n\n\n\n\npatient\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\",\n        pt.size=0.5, shuffle = T)+\n  theme_void()\n\n\n\n\n\n\ncond\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colCond, group.by = \"cond\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colCond, group.by = \"cond\",\n        pt.size=0.5, shuffle = T)+\n  theme_void()\n\n\n\n\n\n\ngrp\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colGrp, group.by = \"grp\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\norigin\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colOri, group.by = \"origin\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")"
  },
  {
    "objectID": "analysis/visFRCMarkerGenes_woCM.html#vis-cluster-marker",
    "href": "analysis/visFRCMarkerGenes_woCM.html#vis-cluster-marker",
    "title": "visualize marker genes FRC subsets",
    "section": "vis cluster marker",
    "text": "vis cluster marker\n\nmarker genes\n\nseurat_markers_all <- FindAllMarkers(object = seurat, assay =\"RNA\",\n                                     only.pos = TRUE, min.pct = 0.25,\n                                     logfc.threshold = 0.25,\n                                     test.use = \"wilcox\")\n\n\n\navg heatmap\n\ncluster <- levels(seurat)\nselGenesAll <- seurat_markers_all %>% group_by(cluster) %>% \n  top_n(-20, p_val_adj) %>% \n  top_n(20, avg_log2FC)\nselGenesAll <- selGenesAll %>% mutate(geneIDval=gsub(\"^.*\\\\.\", \"\", gene)) %>% filter(nchar(geneIDval)>1)\n\nIdents(seurat) <- seurat$intCluster\npOut <- avgHeatmap(seurat = seurat, selGenes = selGenesAll,\n                  colVecIdent = colPal, \n                  ordVec=levels(seurat),\n                  gapVecR=NULL, gapVecC=NULL,cc=FALSE,\n                  cr=T, condCol=F)"
  },
  {
    "objectID": "analysis/visFRCMarkerGenes_woCM.html#write-table",
    "href": "analysis/visFRCMarkerGenes_woCM.html#write-table",
    "title": "visualize marker genes FRC subsets",
    "section": "write table",
    "text": "write table\n\nwrite.table(seurat_markers_all,\n            file=paste0(basedir,\n                        \"/data/AllPatWithoutCM_FRConly_intOrig_markerGenes.txt\"),\n            row.names = FALSE, col.names = TRUE, quote = FALSE, sep = \"\\t\")"
  },
  {
    "objectID": "analysis/visFRCMarkerGenes_woCM.html#vis-selected-stroma-marker",
    "href": "analysis/visFRCMarkerGenes_woCM.html#vis-selected-stroma-marker",
    "title": "visualize marker genes FRC subsets",
    "section": "vis selected stroma marker",
    "text": "vis selected stroma marker\n\nIdents(seurat) <- seurat$intCluster\ncluster <- levels(seurat)\n\ngenes <- data.frame(gene=rownames(seurat)) %>% \n    mutate(geneID=gsub(\"^.*\\\\.\", \"\", gene)) \n\nselGenesAll <- read_tsv(file = paste0(basedir,\n                                      \"/data/overallFRCMarker.txt\")) %>% \n  left_join(., genes, by = \"geneID\") %>% \n  filter(!gene == \"ENSG00000232995.RGS5\")\n\nseurat$intCluster <- factor(seurat$intCluster, levels = c(\"7\", \"2\",\"0\",\"1\",\n                                                          \"5\", \"6\", \"3\", \"4\"))\nIdents(seurat) <- seurat$intCluster\npOut <- avgHeatmap(seurat = seurat, selGenes = selGenesAll,\n                  colVecIdent = colPal, \n                  ordVec=levels(seurat),\n                  gapVecR=NULL, gapVecC=NULL,cc=F,\n                  cr=F, condCol=F)\n\n\n\n\n\nDotplot\n\nDotPlot(seurat, assay=\"RNA\", features = rev(selGenesAll$gene), scale =T,\n        cluster.idents = F) +\n  scale_color_viridis_c() +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  scale_x_discrete(breaks=rev(selGenesAll$gene), labels=rev(selGenesAll$geneID)) +\n  xlab(\"\") + ylab(\"\")\n\n\n\nDotPlot(seurat, assay=\"RNA\", features = rev(selGenesAll$gene), scale =F,\n        cluster.idents = F) +\n  scale_color_viridis_c() +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  scale_x_discrete(breaks=rev(selGenesAll$gene), labels=rev(selGenesAll$geneID)) +\n  xlab(\"\") + ylab(\"\")\n\n\n\n\n\n\nFeatureplot\n\npList <- sapply(selGenesAll$gene, function(x){\np <- FeaturePlot(seurat, reduction = \"umap\", \n            features = x,\n            cols=c(\"lightgrey\", \"darkred\"),\n            order = F)+\n  theme(legend.position=\"right\")\n  plot(p)\n})"
  },
  {
    "objectID": "analysis/visFRCMarkerGenes_woCM.html#session-info",
    "href": "analysis/visFRCMarkerGenes_woCM.html#session-info",
    "title": "visualize marker genes FRC subsets",
    "section": "session info",
    "text": "session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] scater_1.28.0               scuttle_1.10.3              SingleCellExperiment_1.22.0\n [4] SummarizedExperiment_1.30.2 Biobase_2.60.0              GenomicRanges_1.52.1       \n [7] GenomeInfoDb_1.36.4         IRanges_2.36.0              S4Vectors_0.40.1           \n[10] BiocGenerics_0.48.0         MatrixGenerics_1.12.3       matrixStats_1.2.0          \n[13] pheatmap_1.0.12             ggsci_3.0.1                 here_1.0.1                 \n[16] runSeurat3_0.1.0            ggpubr_0.6.0                lubridate_1.9.3            \n[19] forcats_1.0.0               stringr_1.5.1               readr_2.1.5                \n[22] tidyr_1.3.1                 tibble_3.2.1                tidyverse_2.0.0            \n[25] Seurat_5.0.2                SeuratObject_5.0.1          sp_2.1-3                   \n[28] purrr_1.0.2                 cowplot_1.1.3               ggplot2_3.5.0              \n[31] reshape2_1.4.4              dplyr_1.1.4                \n\nloaded via a namespace (and not attached):\n  [1] RcppAnnoy_0.0.22          splines_4.3.0             later_1.3.2              \n  [4] bitops_1.0-7              polyclip_1.10-6           fastDummies_1.7.3        \n  [7] lifecycle_1.0.4           rstatix_0.7.2             rprojroot_2.0.4          \n [10] vroom_1.6.5               globals_0.16.2            lattice_0.22-5           \n [13] MASS_7.3-60.0.1           backports_1.4.1           magrittr_2.0.3           \n [16] limma_3.56.2              plotly_4.10.4             rmarkdown_2.26           \n [19] yaml_2.3.8                httpuv_1.6.14             sctransform_0.4.1        \n [22] spam_2.10-0               spatstat.sparse_3.0-3     reticulate_1.35.0        \n [25] pbapply_1.7-2             RColorBrewer_1.1-3        abind_1.4-5              \n [28] zlibbioc_1.46.0           Rtsne_0.17                presto_1.0.0             \n [31] RCurl_1.98-1.14           GenomeInfoDbData_1.2.10   ggrepel_0.9.5            \n [34] irlba_2.3.5.1             listenv_0.9.1             spatstat.utils_3.0-4     \n [37] goftest_1.2-3             RSpectra_0.16-1           spatstat.random_3.2-3    \n [40] fitdistrplus_1.1-11       parallelly_1.37.1         DelayedMatrixStats_1.22.6\n [43] leiden_0.4.3.1            codetools_0.2-19          DelayedArray_0.26.7      \n [46] tidyselect_1.2.0          farver_2.1.1              viridis_0.6.5            \n [49] ScaledMatrix_1.8.1        spatstat.explore_3.2-6    jsonlite_1.8.8           \n [52] BiocNeighbors_1.18.0      ellipsis_0.3.2            progressr_0.14.0         \n [55] ggridges_0.5.6            survival_3.5-8            tools_4.3.0              \n [58] ica_1.0-3                 Rcpp_1.0.12               glue_1.7.0               \n [61] gridExtra_2.3             xfun_0.42                 withr_3.0.0              \n [64] fastmap_1.1.1             fansi_1.0.6               rsvd_1.0.5               \n [67] digest_0.6.34             timechange_0.3.0          R6_2.5.1                 \n [70] mime_0.12                 colorspace_2.1-0          scattermore_1.2          \n [73] tensor_1.5                spatstat.data_3.0-4       utf8_1.2.4               \n [76] generics_0.1.3            data.table_1.15.2         httr_1.4.7               \n [79] htmlwidgets_1.6.4         S4Arrays_1.0.6            uwot_0.1.16              \n [82] pkgconfig_2.0.3           gtable_0.3.4              lmtest_0.9-40            \n [85] XVector_0.40.0            htmltools_0.5.7           carData_3.0-5            \n [88] dotCall64_1.1-1           scales_1.3.0              png_0.1-8                \n [91] knitr_1.45                rstudioapi_0.15.0         tzdb_0.4.0               \n [94] nlme_3.1-164              zoo_1.8-12                KernSmooth_2.23-22       \n [97] vipor_0.4.7               parallel_4.3.0            miniUI_0.1.1.1           \n[100] pillar_1.9.0              grid_4.3.0                vctrs_0.6.5              \n[103] RANN_2.6.1                promises_1.2.1            BiocSingular_1.16.0      \n[106] car_3.1-2                 beachmat_2.16.0           xtable_1.8-4             \n[109] cluster_2.1.6             beeswarm_0.4.0            evaluate_0.23            \n[112] cli_3.6.2                 compiler_4.3.0            rlang_1.1.3              \n[115] crayon_1.5.2              future.apply_1.11.1       ggsignif_0.6.4           \n[118] labeling_0.4.3            ggbeeswarm_0.7.2          plyr_1.8.9               \n[121] stringi_1.8.3             BiocParallel_1.34.2       viridisLite_0.4.2        \n[124] deldir_2.0-4              munsell_0.5.0             lazyeval_0.2.2           \n[127] spatstat.geom_3.2-9       Matrix_1.6-5              RcppHNSW_0.6.0           \n[130] hms_1.1.3                 patchwork_1.2.0           bit64_4.0.5              \n[133] sparseMatrixStats_1.12.2  future_1.33.1             shiny_1.8.0              \n[136] ROCR_1.0-11               igraph_2.0.2              broom_1.0.5              \n[139] bit_4.0.5                \n\ndate()\n\n[1] \"Wed Mar 13 18:50:48 2024\""
  },
  {
    "objectID": "analysis/visActivatedImmCellsIntegrated.html#load-packages",
    "href": "analysis/visActivatedImmCellsIntegrated.html#load-packages",
    "title": "visualize activated immune cells human LN",
    "section": "Load packages",
    "text": "Load packages\n\n## load packages \nsuppressPackageStartupMessages({\n  library(dplyr)\n  library(reshape2)\n  library(ggplot2)\n  library(cowplot)\n  library(purrr)\n  library(Seurat)\n  library(tidyverse)\n  library(ggpubr)\n  library(runSeurat3)\n  library(here)\n  library(ggsci)\n  library(pheatmap)\n  library(scater)\n})"
  },
  {
    "objectID": "analysis/visActivatedImmCellsIntegrated.html#load-seurat-object",
    "href": "analysis/visActivatedImmCellsIntegrated.html#load-seurat-object",
    "title": "visualize activated immune cells human LN",
    "section": "load seurat object",
    "text": "load seurat object\n\nbasedir <- here()\nseurat <- readRDS(file= paste0(basedir,\n                            \"/data/AllPatWithoutCM_IMMMerged_integrated_label\",\n                            \"_seurat.rds\"))\n\nIdents(seurat) <- seurat$label\nseurat <- subset(seurat, cond2 == \"activated\")\n\n## set col palettes\ncolPal <- colPal <- c(pal_flatui()(10), pal_frontiers()(8),\n                      pal_nejm()(8))[1:length(unique(seurat$RNA_snn_res.0.25))]\nnames(colPal) <- unique(seurat$RNA_snn_res.0.25)\n\n\ncolPat <- c(pal_nejm()(7),pal_futurama()(12))[1:length(unique(seurat$patient))]\nnames(colPat) <- unique(seurat$patient)\ncolCond <- c(\"#6692a3\",\"#971c1c\",\"#d17d67\")\nnames(colCond) <- unique(seurat$cond)\ncolOri <- pal_npg()(length(unique(seurat$origin)))\nnames(colOri) <- unique(seurat$origin)\ncolCond2 <- c(\"#6692a3\",\"#971c1c\")\nnames(colCond2) <- c(\"resting\", \"activated\")\n\ncolLab <- c(\"#2a3b30\", \"#0b6647\", \"#54907e\", \"#94c78a\", \"#6f9568\", \n            \"#8f2810\", \"#a83e0b\", \"#ce6915\",\"#d08821\", \"#d0ac21\",\"#b9bb20\",\n            \"#486584\",\"#56799e\", \"#4b5397\", \"#8873d3\", \"#6e3e7a\")\n            \nnames(colLab) <- c(\"preB\", \"naiveB\", \"GCB\", \"MBC\", \"plasmaCell\",\n                   \"naiveCD4-1\", \"naiveCD4-2\", \"naiveCD4-3\", \"Treg\", \"CD8Tcm\",\n                    \"CTL/NKcell\",\n                   \"ILC3\",\"pDC-1\", \"pDC-2\", \"Mph/DC-1\", \"Mph/DC-2\")"
  },
  {
    "objectID": "analysis/visActivatedImmCellsIntegrated.html#visualize-data",
    "href": "analysis/visActivatedImmCellsIntegrated.html#visualize-data",
    "title": "visualize activated immune cells human LN",
    "section": "visualize data",
    "text": "visualize data\n\nDimPlot(seurat, reduction = \"umap\", cols=colLab)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colLab, pt.size=1)+\n  theme_void()\n\n\n\n\n\nclustering\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPal, group.by = \"RNA_snn_res.0.25\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", group.by = \"RNA_snn_res.0.25\",\n        cols=colPal, pt.size=0.5)+\n  theme_void()\n\n\n\n\n\n\npatient\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\",\n        pt.size=0.5, shuffle = T)+\n  theme_void()"
  },
  {
    "objectID": "analysis/visActivatedImmCellsIntegrated.html#vis-selected-immune-cell-marker",
    "href": "analysis/visActivatedImmCellsIntegrated.html#vis-selected-immune-cell-marker",
    "title": "visualize activated immune cells human LN",
    "section": "vis selected immune cell marker",
    "text": "vis selected immune cell marker\n\ngenes <- data.frame(gene=rownames(seurat)) %>% \n    mutate(geneID=gsub(\"^.*\\\\.\", \"\", gene)) \n\nselGenesAll <- read_tsv(file = paste0(basedir,\n                                      \"/data/overallImmuneCellMarker.txt\")) %>% \n  left_join(., genes, by = \"geneID\")\n\nseurat$label <- factor(seurat$label, levels = names(colLab))\nIdents(seurat) <- seurat$label\n\n# pOut <- avgHeatmap(seurat = seurat, selGenes = selGenesAll,\n#                   colVecIdent = colLab, \n#                   ordVec=levels(seurat),\n#                   gapVecR=NULL, gapVecC=NULL,cc=F,\n#                   cr=F, condCol=F)\n\n\nDotplot\n\nDotPlot(seurat, assay=\"RNA\", features = rev(selGenesAll$gene), scale =T,\n        cluster.idents = F) +\n  scale_color_viridis_c() +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  scale_x_discrete(breaks=rev(selGenesAll$gene), labels=rev(selGenesAll$geneID)) +\n  xlab(\"\") + ylab(\"\")\n\n\n\nDotPlot(seurat, assay=\"RNA\", features = rev(selGenesAll$gene), scale =F,\n        cluster.idents = F) +\n  scale_color_viridis_c() +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  scale_x_discrete(breaks=rev(selGenesAll$gene), labels=rev(selGenesAll$geneID)) +\n  xlab(\"\") + ylab(\"\")\n\n\n\n\n\n\nFeatureplot\n\npList <- sapply(selGenesAll$gene, function(x){\np <- FeaturePlot(seurat, reduction = \"umap\", \n            features = x,\n            cols=c(\"lightgrey\", \"darkred\"),\n            order = F)+\n  theme(legend.position=\"right\")\n  plot(p)\n})"
  },
  {
    "objectID": "analysis/visActivatedImmCellsIntegrated.html#session-info",
    "href": "analysis/visActivatedImmCellsIntegrated.html#session-info",
    "title": "visualize activated immune cells human LN",
    "section": "session info",
    "text": "session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] scater_1.28.0               scuttle_1.10.3              SingleCellExperiment_1.22.0\n [4] SummarizedExperiment_1.30.2 Biobase_2.60.0              GenomicRanges_1.52.1       \n [7] GenomeInfoDb_1.36.4         IRanges_2.36.0              S4Vectors_0.40.1           \n[10] BiocGenerics_0.48.0         MatrixGenerics_1.12.3       matrixStats_1.2.0          \n[13] pheatmap_1.0.12             ggsci_3.0.1                 here_1.0.1                 \n[16] runSeurat3_0.1.0            ggpubr_0.6.0                lubridate_1.9.3            \n[19] forcats_1.0.0               stringr_1.5.1               readr_2.1.5                \n[22] tidyr_1.3.1                 tibble_3.2.1                tidyverse_2.0.0            \n[25] Seurat_5.0.2                SeuratObject_5.0.1          sp_2.1-3                   \n[28] purrr_1.0.2                 cowplot_1.1.3               ggplot2_3.5.0              \n[31] reshape2_1.4.4              dplyr_1.1.4                \n\nloaded via a namespace (and not attached):\n  [1] RcppAnnoy_0.0.22          splines_4.3.0             later_1.3.2              \n  [4] bitops_1.0-7              polyclip_1.10-6           fastDummies_1.7.3        \n  [7] lifecycle_1.0.4           rstatix_0.7.2             rprojroot_2.0.4          \n [10] vroom_1.6.5               globals_0.16.2            lattice_0.22-5           \n [13] MASS_7.3-60.0.1           backports_1.4.1           magrittr_2.0.3           \n [16] plotly_4.10.4             rmarkdown_2.26            yaml_2.3.8               \n [19] httpuv_1.6.14             sctransform_0.4.1         spam_2.10-0              \n [22] spatstat.sparse_3.0-3     reticulate_1.35.0         pbapply_1.7-2            \n [25] RColorBrewer_1.1-3        abind_1.4-5               zlibbioc_1.46.0          \n [28] Rtsne_0.17                RCurl_1.98-1.14           GenomeInfoDbData_1.2.10  \n [31] ggrepel_0.9.5             irlba_2.3.5.1             listenv_0.9.1            \n [34] spatstat.utils_3.0-4      goftest_1.2-3             RSpectra_0.16-1          \n [37] spatstat.random_3.2-3     fitdistrplus_1.1-11       parallelly_1.37.1        \n [40] DelayedMatrixStats_1.22.6 leiden_0.4.3.1            codetools_0.2-19         \n [43] DelayedArray_0.26.7       tidyselect_1.2.0          farver_2.1.1             \n [46] viridis_0.6.5             ScaledMatrix_1.8.1        spatstat.explore_3.2-6   \n [49] jsonlite_1.8.8            BiocNeighbors_1.18.0      ellipsis_0.3.2           \n [52] progressr_0.14.0          ggridges_0.5.6            survival_3.5-8           \n [55] tools_4.3.0               ica_1.0-3                 Rcpp_1.0.12              \n [58] glue_1.7.0                gridExtra_2.3             xfun_0.42                \n [61] withr_3.0.0               fastmap_1.1.1             fansi_1.0.6              \n [64] rsvd_1.0.5                digest_0.6.34             timechange_0.3.0         \n [67] R6_2.5.1                  mime_0.12                 colorspace_2.1-0         \n [70] scattermore_1.2           tensor_1.5                spatstat.data_3.0-4      \n [73] utf8_1.2.4                generics_0.1.3            data.table_1.15.2        \n [76] httr_1.4.7                htmlwidgets_1.6.4         S4Arrays_1.0.6           \n [79] uwot_0.1.16               pkgconfig_2.0.3           gtable_0.3.4             \n [82] lmtest_0.9-40             XVector_0.40.0            htmltools_0.5.7          \n [85] carData_3.0-5             dotCall64_1.1-1           scales_1.3.0             \n [88] png_0.1-8                 knitr_1.45                rstudioapi_0.15.0        \n [91] tzdb_0.4.0                nlme_3.1-164              zoo_1.8-12               \n [94] KernSmooth_2.23-22        vipor_0.4.7               parallel_4.3.0           \n [97] miniUI_0.1.1.1            pillar_1.9.0              grid_4.3.0               \n[100] vctrs_0.6.5               RANN_2.6.1                promises_1.2.1           \n[103] BiocSingular_1.16.0       car_3.1-2                 beachmat_2.16.0          \n[106] xtable_1.8-4              cluster_2.1.6             beeswarm_0.4.0           \n[109] evaluate_0.23             cli_3.6.2                 compiler_4.3.0           \n[112] rlang_1.1.3               crayon_1.5.2              future.apply_1.11.1      \n[115] ggsignif_0.6.4            labeling_0.4.3            ggbeeswarm_0.7.2         \n[118] plyr_1.8.9                stringi_1.8.3             BiocParallel_1.34.2      \n[121] viridisLite_0.4.2         deldir_2.0-4              munsell_0.5.0            \n[124] lazyeval_0.2.2            spatstat.geom_3.2-9       Matrix_1.6-5             \n[127] RcppHNSW_0.6.0            hms_1.1.3                 patchwork_1.2.0          \n[130] bit64_4.0.5               sparseMatrixStats_1.12.2  future_1.33.1            \n[133] shiny_1.8.0               ROCR_1.0-11               igraph_2.0.2             \n[136] broom_1.0.5               bit_4.0.5                \n\ndate()\n\n[1] \"Wed Mar 13 18:55:50 2024\""
  },
  {
    "objectID": "analysis/DEgenesPI16RC.html#load-packages",
    "href": "analysis/DEgenesPI16RC.html#load-packages",
    "title": "visualize DE genes Pi16+RC human LN",
    "section": "Load packages",
    "text": "Load packages\n\n## load packages \nsuppressPackageStartupMessages({\n  library(dplyr)\n  library(reshape2)\n  library(ggplot2)\n  library(purrr)\n  library(Seurat)\n  library(tidyverse)\n  library(ggpubr)\n  library(runSeurat3)\n  library(here)\n  library(ggsci)\n  library(pheatmap)\n  library(scater)\n  library(SingleCellExperiment)\n  library(scran)\n  library(clusterProfiler)\n  library(org.Hs.eg.db)\n  library(DOSE)\n  library(enrichplot)\n})"
  },
  {
    "objectID": "analysis/DEgenesPI16RC.html#load-seurat-object",
    "href": "analysis/DEgenesPI16RC.html#load-seurat-object",
    "title": "visualize DE genes Pi16+RC human LN",
    "section": "load seurat object",
    "text": "load seurat object\n\nbasedir <- here()\n\nseurat <- readRDS(file= paste0(basedir,\n                               \"/data/AllPatWithoutCM_FRConly_intOrig_seurat.rds\"))\n\nDefaultAssay(object = seurat) <- \"RNA\"\nseurat$intCluster <- as.character(seurat$integrated_snn_res.0.25)\nIdents(seurat) <- seurat$intCluster\n\n\n## set col palettes\ncolPal <- c(pal_uchicago()(6), \"#6692a3\", \"#3b7f60\")\nnames(colPal) <- c(\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\")\ncolPat <- c(pal_nejm()(7),pal_futurama()(12))[1:length(unique(seurat$patient))]\nnames(colPat) <- unique(seurat$patient)\ncolCond <- c(\"#6692a3\",\"#971c1c\",\"#d17d67\")\nnames(colCond) <- unique(seurat$cond)\ncolGrp <- pal_uchicago()(length(unique(seurat$grp)))\nnames(colGrp) <- unique(seurat$grp)\ncolOri <- pal_npg()(length(unique(seurat$origin)))\nnames(colOri) <- unique(seurat$origin)\ncolTon <- colCond\n\n## all activated in one grp\nseurat$cond2 <- seurat$cond\nseurat$cond2[which(seurat$cond %in% c(\"chronic\", \"acute\"))] <- \"activated\"\n\ncolCond2 <- c(\"#6692a3\",\"#971c1c\")\nnames(colCond2) <- c(\"resting\", \"activated\")"
  },
  {
    "objectID": "analysis/DEgenesPI16RC.html#visualize-data",
    "href": "analysis/DEgenesPI16RC.html#visualize-data",
    "title": "visualize DE genes Pi16+RC human LN",
    "section": "visualize data",
    "text": "visualize data\n\nclustering\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPal)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\npatient\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\ncond2\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colCond2, group.by = \"cond2\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\ngrp\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colGrp, group.by = \"grp\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\norigin\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colOri, group.by = \"origin\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")"
  },
  {
    "objectID": "analysis/DEgenesPI16RC.html#cw-de-genes",
    "href": "analysis/DEgenesPI16RC.html#cw-de-genes",
    "title": "visualize DE genes Pi16+RC human LN",
    "section": "cw DE genes",
    "text": "cw DE genes\n\nsce <- as.SingleCellExperiment(seurat)\ncluVec <- unique(sce$integrated_snn_res.0.25)\n\ncwDE <- lapply(cluVec, function(cl){\n  sceSub <- sce[,which(sce$integrated_snn_res.0.25 == cl)]\n  m.out <- scoreMarkers(sceSub, sceSub$cond2)\n  condVec <- unique(names(m.out))\n  outCW <- lapply(condVec, function(co){\n    outSub <- data.frame(m.out@listData[[co]]) %>%\n      rownames_to_column(var = \"gene\") %>%\n      slice_max(., order_by=mean.logFC.cohen, n=100) %>%\n      mutate(condCl=paste0(co, \"_\", cl)) %>% \n      mutate(cluster=cl)\n  })\n  outDat <- do.call(\"rbind\", outCW)\n})\n\ncwDEdat <- do.call(\"rbind\", cwDE)"
  },
  {
    "objectID": "analysis/DEgenesPI16RC.html#vis-top-genes-pi16rc-activated",
    "href": "analysis/DEgenesPI16RC.html#vis-top-genes-pi16rc-activated",
    "title": "visualize DE genes Pi16+RC human LN",
    "section": "vis top genes Pi16+RC activated",
    "text": "vis top genes Pi16+RC activated\n\nDEsel <- cwDEdat %>% filter(condCl == \"activated_5\")\n\n\nviolinplot across patients\n\npatDat <- data.frame(table(seurat$patient, seurat$cond2)) %>% \n  filter(Freq>0) %>% \n  mutate(col=ifelse(Var2==\"activated\",\n                    colCond2[\"activated\"],colCond2[\"resting\"]))\ncolPatCond <- patDat$col\nnames(colPatCond) <- patDat$Var1\nseurat$patient <- factor(seurat$patient, levels = patDat$Var1)\n\npList <- sapply(DEsel$gene[1:20], function(x){\n  p <- VlnPlot(seurat, features = x, pt.size = 0, \n               group.by = \"patient\") +\n    scale_fill_manual(values = colPatCond) +\n    theme(legend.position = \"none\")\n  plot(p)\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\navg Heatmap\n\nselGenesAll <- DEsel %>% \n  slice_max(., order_by=mean.logFC.cohen, n=30)\nselGenesAll <- selGenesAll %>% mutate(geneIDval=gsub(\"^.*\\\\.\", \"\", gene)) %>% filter(nchar(geneIDval)>1)\n\nseurat$clust_plus_cond <- paste0(seurat$intCluster, \"_\", seurat$cond2)\nseurat$clust_plus_cond <- as.factor(seurat$clust_plus_cond)\nIdents(seurat) <- seurat$clust_plus_cond\ngapVecCol <- seq(2, length(levels(seurat$clust_plus_cond)), by=2)\n\npOut <- avgHeatmap(seurat = seurat, selGenes = selGenesAll,\n                  colVecIdent = colPal, \n                  ordVec=levels(seurat),\n                  gapVecR=NULL, gapVecC=gapVecCol,cc=FALSE,\n                  cr=T, condCol=T, colVecCond = colCond2)\n\n\n\n\n\n\nsc Heatmap\n\nDefaultAssay(object = seurat) <- \"RNA\"\nseurat <- ScaleData(seurat, features = rownames(seurat))\n\ncolPal2 <- rep(colPal, each=2)\nnames(colPal2) <- as.vector(t(outer(names(colPal), names(colCond2), paste,\n                                    sep=\"_\"))) \n\nselFeatures  <- DEsel %>% \n  slice_max(., order_by=mean.logFC.cohen, n=30) %>% \n  mutate(label=gsub(\"^.*\\\\.\", \"\", gene)) %>%\n  filter(nchar(label)>1)\n\nDoHeatmap(seurat, features = selFeatures$gene, group.by = \"clust_plus_cond\", \n          group.colors = colPal2, slot = 'scale.data', label = F,\n          disp.min = -0.5, disp.max = 1.5) +\n  scale_fill_continuous(type = \"viridis\") +\n  scale_y_discrete(breaks=selFeatures$gene, labels=selFeatures$label)"
  },
  {
    "objectID": "analysis/DEgenesPI16RC.html#gsea-top-genes-pi16rc-activated",
    "href": "analysis/DEgenesPI16RC.html#gsea-top-genes-pi16rc-activated",
    "title": "visualize DE genes Pi16+RC human LN",
    "section": "GSEA top genes Pi16+RC activated",
    "text": "GSEA top genes Pi16+RC activated\n\norgMarkerDat <- DEsel %>% mutate(EnsID = gsub(\"\\\\..*$\", \"\", gene))\negoA <- enrichGO(gene         = unique(orgMarkerDat$EnsID),\n                OrgDb         = org.Hs.eg.db,\n                keyType       = 'ENSEMBL',\n                ont           = \"BP\",\n                pAdjustMethod = \"BH\",\n                pvalueCutoff  = 0.05,\n                qvalueCutoff  = 0.05)\negoA <- setReadable(egoA, OrgDb = org.Hs.eg.db)\n \negoADat <- egoA@result\nselGO <- c(\"GO:0030198\", \"GO:0030199\", \"GO:0030510\", \"GO:0048771\",\n           \"GO:0007229\", \"GO:0071559\", \"GO:1901342\", \"GO:0050727\", \"GO:0016055\")\n\nselGO <- c(\"GO:0030198\", \"GO:0030510\", \"GO:0048771\",\n           \"GO:0007229\", \"GO:0071559\", \"GO:1901342\")\n\n\nbarplot sel GO\n\nselGODat <- egoADat %>% filter(ID %in% selGO) %>% mutate(cluster=\"5\")\nselGODat <- selGODat %>% mutate(qscore=-log(p.adjust, base=10)) \np <- ggbarplot(selGODat, x = \"Description\", y = \"qscore\",\n          fill = \"cluster\",               \n          color = \"cluster\",            \n          palette = colPal,            \n          sort.val = \"asc\",           \n          sort.by.groups = TRUE      \n          #x.text.angle = 90           \n          ) + \n  rotate()\np\n\n\n\n\n\n\ncnetplot sel GO\n\negoAsub <- egoA\negoAsub@result <- egoAsub@result[which(egoAsub@result$ID %in% selGO),]\np <- cnetplot(egoAsub, node_label=\"all\", showCategory = length(selGO),\n              color_category=\"#C16622FF\", color_gene=\"#dd9c6c\",\n              shadowtext = \"none\") \np\n\n\n\n\n\n\nheatplot sel GO\n\negoAsub <- egoA\negoAsub@result <- egoAsub@result[which(egoAsub@result$ID %in% selGO),]\nDEsel <- DEsel %>% mutate(EnsID=gsub(\"\\\\..*\", \"\", gene))\nfoldChange <- DEsel$mean.logFC.cohen\nnames(foldChange) <- DEsel$EnsID\np <- heatplot(egoAsub, showCategory = length(selGO), foldChange=foldChange) +\n  scale_fill_gradient(low=\"#f3c2c2\", high=\"#971c1c\")\np\n\n\n\np <- heatplot(egoAsub, showCategory = length(selGO), foldChange=foldChange) +\n  scale_fill_gradient(low=\"#f2c5a4\", high=\"#C16622FF\")\np\n\n\n\n\n\n\navg heatmap with sel genes of sel GO\n\ngenes <- data.frame(gene=rownames(seurat)) %>% \n  mutate(geneID=gsub(\".*\\\\.\", \"\", gene))\nIdents(seurat) <- seurat$clust_plus_cond\ngapVecCol <- seq(2, length(levels(seurat$clust_plus_cond)), by=2)\n\ngeneVec <- data.frame(geneID=unique(p$data$Gene)) %>% \n    left_join(., genes, by=\"geneID\")\n\npOut <- avgHeatmap(seurat = seurat, selGenes = geneVec,\n                  colVecIdent = colPal, \n                  ordVec=levels(seurat),\n                  gapVecR=NULL, gapVecC=gapVecCol,cc=FALSE,\n                  cr=T, condCol=T, colVecCond = colCond2)\n\n\n\n\n\n\navg heatmap with genes of each sel GO\n\ngenes <- data.frame(gene=rownames(seurat)) %>% \n  mutate(geneID=gsub(\".*\\\\.\", \"\", gene))\nIdents(seurat) <- seurat$clust_plus_cond\ngapVecCol <- seq(2, length(levels(seurat$clust_plus_cond)), by=2)\n\nlapply(selGO, function(id){\n  geneStr <- egoADat[id,\"geneID\"]\n  geneVec <- data.frame(geneID=unlist(strsplit(geneStr, \"/\"))) %>% \n    left_join(., genes, by=\"geneID\")\n\n  pOut <- avgHeatmap(seurat = seurat, selGenes = geneVec,\n                  colVecIdent = colPal, \n                  ordVec=levels(seurat),\n                  gapVecR=NULL, gapVecC=gapVecCol,cc=FALSE,\n                  cr=T, condCol=T, colVecCond = colCond2,\n                  main = egoADat[id,\"Description\"])\n\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[[1]]\n\n[[2]]\n\n[[3]]\n\n[[4]]\n\n[[5]]\n\n[[6]]"
  },
  {
    "objectID": "analysis/DEgenesPI16RC.html#vis-top-genes-pi16rc-resting",
    "href": "analysis/DEgenesPI16RC.html#vis-top-genes-pi16rc-resting",
    "title": "visualize DE genes Pi16+RC human LN",
    "section": "vis top genes Pi16+RC resting",
    "text": "vis top genes Pi16+RC resting\n\nDEsel <- cwDEdat %>% filter(condCl == \"resting_5\")\n\n\nviolinplot across patients\n\npatDat <- data.frame(table(seurat$patient, seurat$cond2)) %>% \n  filter(Freq>0) %>% \n  mutate(col=ifelse(Var2==\"activated\",\n                    colCond2[\"activated\"],colCond2[\"resting\"]))\ncolPatCond <- patDat$col\nnames(colPatCond) <- patDat$Var1\nseurat$patient <- factor(seurat$patient, levels = patDat$Var1)\n\npList <- sapply(DEsel$gene[1:20], function(x){\n  p <- VlnPlot(seurat, features = x, pt.size = 0, \n               group.by = \"patient\") +\n    scale_fill_manual(values = colPatCond) +\n    theme(legend.position = \"none\")\n  plot(p)\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\navg Heatmap\n\nselGenesAll <- DEsel %>% \n  slice_max(., order_by=mean.logFC.cohen, n=30)\nselGenesAll <- selGenesAll %>% mutate(geneIDval=gsub(\"^.*\\\\.\", \"\", gene)) %>% filter(nchar(geneIDval)>1)\n\nseurat$clust_plus_cond <- paste0(seurat$intCluster, \"_\", seurat$cond2)\nseurat$clust_plus_cond <- as.factor(seurat$clust_plus_cond)\nIdents(seurat) <- seurat$clust_plus_cond\ngapVecCol <- seq(2, length(levels(seurat$clust_plus_cond)), by=2)\n\npOut <- avgHeatmap(seurat = seurat, selGenes = selGenesAll,\n                  colVecIdent = colPal, \n                  ordVec=levels(seurat),\n                  gapVecR=NULL, gapVecC=gapVecCol,cc=FALSE,\n                  cr=T, condCol=T, colVecCond = colCond2)\n\n\n\n\n\n\nsc Heatmap\n\nDefaultAssay(object = seurat) <- \"RNA\"\nseurat <- ScaleData(seurat, features = rownames(seurat))\n\ncolPal2 <- rep(colPal, each=2)\nnames(colPal2) <- as.vector(t(outer(names(colPal), names(colCond2), paste,\n                                    sep=\"_\"))) \n\nselFeatures  <- DEsel %>% \n  slice_max(., order_by=mean.logFC.cohen, n=30) %>% \n  mutate(label=gsub(\"^.*\\\\.\", \"\", gene)) %>%\n  filter(nchar(label)>1)\n\nDoHeatmap(seurat, features = selFeatures$gene, group.by = \"clust_plus_cond\", \n          group.colors = colPal2, slot = 'scale.data', label = F,\n          disp.min = -0.5, disp.max = 1.5) +\n  scale_fill_continuous(type = \"viridis\") +\n  scale_y_discrete(breaks=selFeatures$gene, labels=selFeatures$label)"
  },
  {
    "objectID": "analysis/DEgenesPI16RC.html#gsea-top-genes-pi16rc-resting",
    "href": "analysis/DEgenesPI16RC.html#gsea-top-genes-pi16rc-resting",
    "title": "visualize DE genes Pi16+RC human LN",
    "section": "GSEA top genes Pi16+RC resting",
    "text": "GSEA top genes Pi16+RC resting\n\norgMarkerDat <- DEsel %>% mutate(EnsID = gsub(\"\\\\..*$\", \"\", gene))\negoA <- enrichGO(gene         = unique(orgMarkerDat$EnsID),\n                OrgDb         = org.Hs.eg.db,\n                keyType       = 'ENSEMBL',\n                ont           = \"BP\",\n                pAdjustMethod = \"BH\",\n                pvalueCutoff  = 0.05,\n                qvalueCutoff  = 0.05)\negoA <- setReadable(egoA, OrgDb = org.Hs.eg.db)\n \negoADat <- egoA@result\nselGO <- c(\"GO:0048660\", \"GO:0006119\", \"GO:0071774\", \"GO:0046034\",\n           \"GO:0048009\", \"GO:0045333\")\n\n\nbarplot sel GO\n\nselGODat <- egoADat %>% filter(ID %in% selGO) %>% mutate(cluster=\"5\")\nselGODat <- selGODat %>% mutate(qscore=-log(p.adjust, base=10)) \np <- ggbarplot(selGODat, x = \"Description\", y = \"qscore\",\n          fill = \"cluster\",               \n          color = \"cluster\",            \n          palette = \"#6692a3\",            \n          sort.val = \"asc\",           \n          sort.by.groups = TRUE      \n          #x.text.angle = 90           \n          ) + \n  rotate()\np\n\n\n\n\n\n\ncnetplot sel GO\n\negoAsub <- egoA\negoAsub@result <- egoAsub@result[which(egoAsub@result$ID %in% selGO),]\np <- cnetplot(egoAsub, node_label=\"all\", showCategory = length(selGO),\n              color_category=\"#6692a3\", color_gene=\"#a3c5d2\",\n              shadowtext = \"none\") \np\n\n\n\n\n\n\navg heatmap with genes of each sel GO\n\ngenes <- data.frame(gene=rownames(seurat)) %>% \n  mutate(geneID=gsub(\".*\\\\.\", \"\", gene))\nIdents(seurat) <- seurat$clust_plus_cond\ngapVecCol <- seq(2, length(levels(seurat$clust_plus_cond)), by=2)\n\nlapply(selGO, function(id){\n  geneStr <- egoADat[id,\"geneID\"]\n  geneVec <- data.frame(geneID=unlist(strsplit(geneStr, \"/\"))) %>% \n    left_join(., genes, by=\"geneID\")\n  if(length(which(is.na(geneVec$gene))) > 0){\n      geneVec$geneID[which(is.na(geneVec$gene))] <- paste0(\"MT-\",\n                      geneVec$geneID[which(is.na(geneVec$gene))])\n      geneVec <- geneVec %>% dplyr::select(-gene) %>% \n        left_join(., genes, by=\"geneID\") %>% \n        filter(!is.na(gene))\n  }\n\n  pOut <- avgHeatmap(seurat = seurat, selGenes = geneVec,\n                  colVecIdent = colPal, \n                  ordVec=levels(seurat),\n                  gapVecR=NULL, gapVecC=gapVecCol,cc=FALSE,\n                  cr=T, condCol=T, colVecCond = colCond2,\n                  main = egoADat[id,\"Description\"])\n\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[[1]]\n\n[[2]]\n\n[[3]]\n\n[[4]]\n\n[[5]]\n\n[[6]]"
  },
  {
    "objectID": "analysis/DEgenesPI16RC.html#session-info",
    "href": "analysis/DEgenesPI16RC.html#session-info",
    "title": "visualize DE genes Pi16+RC human LN",
    "section": "session info",
    "text": "session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] Matrix_1.6-5                enrichplot_1.20.3           DOSE_3.26.2                \n [4] org.Hs.eg.db_3.17.0         AnnotationDbi_1.62.2        clusterProfiler_4.8.3      \n [7] scran_1.28.2                scater_1.28.0               scuttle_1.10.3             \n[10] SingleCellExperiment_1.22.0 SummarizedExperiment_1.30.2 Biobase_2.60.0             \n[13] GenomicRanges_1.52.1        GenomeInfoDb_1.36.4         IRanges_2.36.0             \n[16] S4Vectors_0.40.1            BiocGenerics_0.48.0         MatrixGenerics_1.12.3      \n[19] matrixStats_1.2.0           pheatmap_1.0.12             ggsci_3.0.1                \n[22] here_1.0.1                  runSeurat3_0.1.0            ggpubr_0.6.0               \n[25] lubridate_1.9.3             forcats_1.0.0               stringr_1.5.1              \n[28] readr_2.1.5                 tidyr_1.3.1                 tibble_3.2.1               \n[31] tidyverse_2.0.0             Seurat_5.0.2                SeuratObject_5.0.1         \n[34] sp_2.1-3                    purrr_1.0.2                 ggplot2_3.5.0              \n[37] reshape2_1.4.4              dplyr_1.1.4                \n\nloaded via a namespace (and not attached):\n  [1] fs_1.6.3                  spatstat.sparse_3.0-3     bitops_1.0-7             \n  [4] HDO.db_0.99.1             httr_1.4.7                RColorBrewer_1.1-3       \n  [7] tools_4.3.0               sctransform_0.4.1         backports_1.4.1          \n [10] utf8_1.2.4                R6_2.5.1                  lazyeval_0.2.2           \n [13] uwot_0.1.16               withr_3.0.0               gridExtra_2.3            \n [16] progressr_0.14.0          cli_3.6.2                 spatstat.explore_3.2-6   \n [19] fastDummies_1.7.3         scatterpie_0.2.1          labeling_0.4.3           \n [22] spatstat.data_3.0-4       ggridges_0.5.6            pbapply_1.7-2            \n [25] yulab.utils_0.1.4         gson_0.1.0                parallelly_1.37.1        \n [28] limma_3.56.2              rstudioapi_0.15.0         RSQLite_2.3.5            \n [31] gridGraphics_0.5-1        generics_0.1.3            ica_1.0-3                \n [34] spatstat.random_3.2-3     car_3.1-2                 GO.db_3.17.0             \n [37] ggbeeswarm_0.7.2          fansi_1.0.6               abind_1.4-5              \n [40] lifecycle_1.0.4           yaml_2.3.8                edgeR_3.42.4             \n [43] carData_3.0-5             qvalue_2.32.0             Rtsne_0.17               \n [46] grid_4.3.0                blob_1.2.4                promises_1.2.1           \n [49] dqrng_0.3.2               crayon_1.5.2              miniUI_0.1.1.1           \n [52] lattice_0.22-5            beachmat_2.16.0           cowplot_1.1.3            \n [55] KEGGREST_1.40.1           pillar_1.9.0              knitr_1.45               \n [58] metapod_1.8.0             fgsea_1.26.0              future.apply_1.11.1      \n [61] codetools_0.2-19          fastmatch_1.1-4           leiden_0.4.3.1           \n [64] glue_1.7.0                ggfun_0.1.4               downloader_0.4           \n [67] data.table_1.15.2         treeio_1.24.3             vctrs_0.6.5              \n [70] png_0.1-8                 spam_2.10-0               gtable_0.3.4             \n [73] cachem_1.0.8              xfun_0.42                 S4Arrays_1.0.6           \n [76] mime_0.12                 tidygraph_1.3.1           survival_3.5-8           \n [79] statmod_1.5.0             bluster_1.10.0            ellipsis_0.3.2           \n [82] fitdistrplus_1.1-11       ROCR_1.0-11               nlme_3.1-164             \n [85] ggtree_3.8.2              bit64_4.0.5               RcppAnnoy_0.0.22         \n [88] rprojroot_2.0.4           irlba_2.3.5.1             vipor_0.4.7              \n [91] KernSmooth_2.23-22        colorspace_2.1-0          DBI_1.2.2                \n [94] ggrastr_1.0.2             tidyselect_1.2.0          bit_4.0.5                \n [97] compiler_4.3.0            BiocNeighbors_1.18.0      DelayedArray_0.26.7      \n[100] plotly_4.10.4             shadowtext_0.1.3          scales_1.3.0             \n[103] lmtest_0.9-40             digest_0.6.34             goftest_1.2-3            \n[106] spatstat.utils_3.0-4      rmarkdown_2.26            XVector_0.40.0           \n[109] htmltools_0.5.7           pkgconfig_2.0.3           sparseMatrixStats_1.12.2 \n[112] fastmap_1.1.1             rlang_1.1.3               htmlwidgets_1.6.4        \n[115] shiny_1.8.0               DelayedMatrixStats_1.22.6 farver_2.1.1             \n[118] zoo_1.8-12                jsonlite_1.8.8            BiocParallel_1.34.2      \n[121] GOSemSim_2.26.1           BiocSingular_1.16.0       RCurl_1.98-1.14          \n[124] magrittr_2.0.3            ggplotify_0.1.2           GenomeInfoDbData_1.2.10  \n[127] dotCall64_1.1-1           patchwork_1.2.0           munsell_0.5.0            \n[130] Rcpp_1.0.12               ape_5.7-1                 viridis_0.6.5            \n[133] reticulate_1.35.0         stringi_1.8.3             ggraph_2.2.0             \n[136] zlibbioc_1.46.0           MASS_7.3-60.0.1           plyr_1.8.9               \n[139] parallel_4.3.0            listenv_0.9.1             ggrepel_0.9.5            \n[142] deldir_2.0-4              graphlayouts_1.1.0        Biostrings_2.68.1        \n[145] splines_4.3.0             tensor_1.5                hms_1.1.3                \n[148] locfit_1.5-9.9            igraph_2.0.2              spatstat.geom_3.2-9      \n[151] ggsignif_0.6.4            RcppHNSW_0.6.0            ScaledMatrix_1.8.1       \n[154] evaluate_0.23             tweenr_2.0.3              tzdb_0.4.0               \n[157] httpuv_1.6.14             RANN_2.6.1                polyclip_1.10-6          \n[160] future_1.33.1             scattermore_1.2           ggforce_0.4.2            \n[163] rsvd_1.0.5                broom_1.0.5               xtable_1.8-4             \n[166] tidytree_0.4.6            RSpectra_0.16-1           rstatix_0.7.2            \n[169] later_1.3.2               viridisLite_0.4.2         aplot_0.2.2              \n[172] memoise_2.0.1             beeswarm_0.4.0            cluster_2.1.6            \n[175] timechange_0.3.0          globals_0.16.2           \n\ndate()\n\n[1] \"Wed Mar 13 19:01:37 2024\""
  },
  {
    "objectID": "analysis/visFRC_DEgenesCond2_woCM.html#load-packages",
    "href": "analysis/visFRC_DEgenesCond2_woCM.html#load-packages",
    "title": "visualize DE genes FRCs",
    "section": "Load packages",
    "text": "Load packages\n\n## load packages \nsuppressPackageStartupMessages({\n  library(dplyr)\n  library(reshape2)\n  library(ggplot2)\n  library(cowplot)\n  library(purrr)\n  library(Seurat)\n  library(tidyverse)\n  library(ggpubr)\n  library(runSeurat3)\n  library(here)\n  library(ggsci)\n  library(pheatmap)\n  library(scater)\n})"
  },
  {
    "objectID": "analysis/visFRC_DEgenesCond2_woCM.html#load-seurat-object",
    "href": "analysis/visFRC_DEgenesCond2_woCM.html#load-seurat-object",
    "title": "visualize DE genes FRCs",
    "section": "load seurat object",
    "text": "load seurat object\n\nbasedir <- here()\n\nseurat <- readRDS(file= paste0(basedir,\n                               \"/data/AllPatWithoutCM_FRConly_intOrig_seurat.rds\"))\n\n## remove cluster with cycling cells\nseurat <- subset(seurat, integrated_snn_res.0.25 == \"8\", invert=T)\n\n\nDefaultAssay(object = seurat) <- \"RNA\"\nseurat$intCluster <- as.character(seurat$integrated_snn_res.0.25)\nIdents(seurat) <- seurat$intCluster\n\n\n## set col palettes\ncolPal <- c(pal_uchicago()(6), \"#6692a3\", \"#3b7f60\")\nnames(colPal) <- c(\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\")\ncolPat <- c(pal_nejm()(7),pal_futurama()(12))[1:length(unique(seurat$patient))]\nnames(colPat) <- unique(seurat$patient)\ncolCond <- c(\"#6692a3\",\"#971c1c\",\"#d17d67\")\nnames(colCond) <- unique(seurat$cond)\ncolGrp <- pal_uchicago()(length(unique(seurat$grp)))\nnames(colGrp) <- unique(seurat$grp)\ncolOri <- pal_npg()(length(unique(seurat$origin)))\nnames(colOri) <- unique(seurat$origin)\ncolTon <- colCond\n\n## all activated in one grp\nseurat$cond2 <- seurat$cond\nseurat$cond2[which(seurat$cond %in% c(\"chronic\", \"acute\"))] <- \"activated\"\n\ncolCond2 <- c(\"#6692a3\",\"#971c1c\")\nnames(colCond2) <- c(\"resting\", \"activated\")"
  },
  {
    "objectID": "analysis/visFRC_DEgenesCond2_woCM.html#visualize-data",
    "href": "analysis/visFRC_DEgenesCond2_woCM.html#visualize-data",
    "title": "visualize DE genes FRCs",
    "section": "visualize data",
    "text": "visualize data\n\nclustering\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPal)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\nclustering split by cond2\n\nDimPlot(seurat, reduction = \"umap\", cols=colPal, pt.size=0.5,\n        split.by = \"cond2\")+\n  theme_void()\n\n\n\n\n\n\npatient\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\ncond\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colCond, group.by = \"cond\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\ncond2\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colCond2, group.by = \"cond2\",\n        shuffle = T)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colCond2, group.by = \"cond2\",\n        pt.size=0.5, shuffle = T)+\n  theme_void()\n\n\n\n\n\n\ngrp\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colGrp, group.by = \"grp\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\norigin\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colOri, group.by = \"origin\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")"
  },
  {
    "objectID": "analysis/visFRC_DEgenesCond2_woCM.html#relative-cluster-abundances-per-cond2",
    "href": "analysis/visFRC_DEgenesCond2_woCM.html#relative-cluster-abundances-per-cond2",
    "title": "visualize DE genes FRCs",
    "section": "relative cluster abundances per cond2",
    "text": "relative cluster abundances per cond2\n\nclustCond <- data.frame(table(seurat$cond2, seurat$intCluster))\ncolnames(clustCond) <- c(\"cond\", \"intCluster\", \"cnt\")\nclustTot <- data.frame(table(seurat$intCluster))\ncolnames(clustTot) <- c(\"intCluster\", \"tot\")\nclustDat <- clustCond %>%  left_join(., clustTot, by = \"intCluster\") %>% \n  mutate(relAb = cnt/tot * 100)\n\nggbarplot(clustDat, x=\"intCluster\", y=\"relAb\",\n          fill=\"cond\",\n          colour= \"cond\",\n          palette = colCond2,\n          xlab = \"cluster\",\n          ylab = \"percentage\")\n\n\n\n## relative abundance per cond\nclustCond <- data.frame(table(seurat$cond2, seurat$intCluster))\ncolnames(clustCond) <- c(\"cond\", \"intCluster\", \"cnt\")\ncondTot <- data.frame(table(seurat$cond2))\ncolnames(condTot) <- c(\"cond\", \"tot\")\ncolPaldat <- data.frame(col=colPal) %>%\n  rownames_to_column(var = \"intCluster\")\nclustDat2 <- clustCond %>%  left_join(., condTot, by = \"cond\") %>% \n  mutate(relAb = cnt/tot * 100) %>%\n  left_join(., colPaldat, by = \"intCluster\")\n\nknitr::kable(clustDat2)\n\n\n\n\ncond\nintCluster\ncnt\ntot\nrelAb\ncol\n\n\n\n\nactivated\n0\n6373\n25449\n25.042241\n#800000FF\n\n\nresting\n0\n6049\n18322\n33.014955\n#800000FF\n\n\nactivated\n1\n3969\n25449\n15.595898\n#767676FF\n\n\nresting\n1\n4080\n18322\n22.268311\n#767676FF\n\n\nactivated\n2\n3164\n25449\n12.432709\n#FFA319FF\n\n\nresting\n2\n3773\n18322\n20.592730\n#FFA319FF\n\n\nactivated\n3\n4244\n25449\n16.676490\n#8A9045FF\n\n\nresting\n3\n1560\n18322\n8.514354\n#8A9045FF\n\n\nactivated\n4\n2767\n25449\n10.872726\n#155F83FF\n\n\nresting\n4\n724\n18322\n3.951534\n#155F83FF\n\n\nactivated\n5\n1917\n25449\n7.532712\n#C16622FF\n\n\nresting\n5\n986\n18322\n5.381509\n#C16622FF\n\n\nactivated\n6\n1528\n25449\n6.004165\n#6692a3\n\n\nresting\n6\n760\n18322\n4.148019\n#6692a3\n\n\nactivated\n7\n1487\n25449\n5.843059\n#3b7f60\n\n\nresting\n7\n390\n18322\n2.128589\n#3b7f60\n\n\n\n\nlapply(names(colCond2), function(co){\n  clustDat2sel <- clustDat2 %>% filter(cond==co)\n  pie(clustDat2sel$relAb,\n      labels = clustDat2sel$intCluster,\n      col = clustDat2sel$col,\n      main = co)\n  symbols(0, 0, circles = 1, add=TRUE, bg=\"white\")\n})\n\n\n\n\n\n\n\n[[1]]\nNULL\n\n[[2]]\nNULL\n\nlapply(names(colCond2), function(co){\n  clustDat2sel <- clustDat2 %>% filter(cond==co)\n  pie(clustDat2sel$relAb,\n      labels = clustDat2sel$intCluster,\n      col = clustDat2sel$col,\n      main = co)\n})\n\n\n\n\n\n\n\n[[1]]\nNULL\n\n[[2]]\nNULL\n\n### different sorting stratgies for the first samples..\nseuratSub <- subset(seurat, patient %in% c(\"ucd010\",\"ucd13\",\"ucd14\",\n                                           \"P_20220201\",\"P_20220202\",\n                                           \"P_20200220\"))\nclustCond <- data.frame(table(seuratSub$cond2, seuratSub$intCluster))\ncolnames(clustCond) <- c(\"cond\", \"intCluster\", \"cnt\")\nclustTot <- data.frame(table(seuratSub$intCluster))\ncolnames(clustTot) <- c(\"intCluster\", \"tot\")\nclustDat <- clustCond %>%  left_join(., clustTot, by = \"intCluster\") %>% \n  mutate(relAb = cnt/tot * 100)\n\nggbarplot(clustDat, x=\"intCluster\", y=\"relAb\",\n          fill=\"cond\",\n          colour= \"cond\",\n          palette = colCond2,\n          xlab = \"cluster\",\n          ylab = \"percentage\")\n\n\n\n## relative abundance per cond\nclustCond <- data.frame(table(seuratSub$cond2, seuratSub$intCluster))\ncolnames(clustCond) <- c(\"cond\", \"intCluster\", \"cnt\")\ncondTot <- data.frame(table(seuratSub$cond2))\ncolnames(condTot) <- c(\"cond\", \"tot\")\ncolPaldat <- data.frame(col=colPal) %>%\n  rownames_to_column(var = \"intCluster\")\nclustDat2 <- clustCond %>%  left_join(., condTot, by = \"cond\") %>% \n  mutate(relAb = cnt/tot * 100) %>%\n  left_join(., colPaldat, by = \"intCluster\")\n\nknitr::kable(clustDat2)\n\n\n\n\ncond\nintCluster\ncnt\ntot\nrelAb\ncol\n\n\n\n\nactivated\n0\n3464\n18575\n18.648721\n#800000FF\n\n\nresting\n0\n2189\n7849\n27.888903\n#800000FF\n\n\nactivated\n1\n2327\n18575\n12.527591\n#767676FF\n\n\nresting\n1\n1431\n7849\n18.231622\n#767676FF\n\n\nactivated\n2\n1990\n18575\n10.713324\n#FFA319FF\n\n\nresting\n2\n1941\n7849\n24.729265\n#FFA319FF\n\n\nactivated\n3\n4021\n18575\n21.647375\n#8A9045FF\n\n\nresting\n3\n728\n7849\n9.275067\n#8A9045FF\n\n\nactivated\n4\n2704\n18575\n14.557201\n#155F83FF\n\n\nresting\n4\n412\n7849\n5.249076\n#155F83FF\n\n\nactivated\n5\n1664\n18575\n8.958277\n#C16622FF\n\n\nresting\n5\n498\n7849\n6.344757\n#C16622FF\n\n\nactivated\n6\n1344\n18575\n7.235532\n#6692a3\n\n\nresting\n6\n477\n7849\n6.077207\n#6692a3\n\n\nactivated\n7\n1061\n18575\n5.711978\n#3b7f60\n\n\nresting\n7\n173\n7849\n2.204102\n#3b7f60\n\n\n\n\nlapply(names(colCond2), function(co){\n  clustDat2sel <- clustDat2 %>% filter(cond==co)\n  pie(clustDat2sel$relAb,\n      labels = clustDat2sel$intCluster,\n      col = clustDat2sel$col,\n      main = paste0(co, \"- only same sorting\"))\n  symbols(0, 0, circles = 1, add=TRUE, bg=\"white\")\n})\n\n\n\n\n\n\n\n[[1]]\nNULL\n\n[[2]]\nNULL\n\nlapply(names(colCond2), function(co){\n  clustDat2sel <- clustDat2 %>% filter(cond==co)\n  pie(clustDat2sel$relAb,\n      labels = clustDat2sel$intCluster,\n      col = clustDat2sel$col,\n      main = paste0(co, \"- only same sorting\"))\n})\n\n\n\n\n\n\n\n[[1]]\nNULL\n\n[[2]]\nNULL"
  },
  {
    "objectID": "analysis/visFRC_DEgenesCond2_woCM.html#relative-cluster-abundances-per-patient",
    "href": "analysis/visFRC_DEgenesCond2_woCM.html#relative-cluster-abundances-per-patient",
    "title": "visualize DE genes FRCs",
    "section": "relative cluster abundances per patient",
    "text": "relative cluster abundances per patient\n\nclustCond <- data.frame(table(seurat$patient, seurat$intCluster))\ncolnames(clustCond) <- c(\"patient\", \"intCluster\", \"cnt\")\nclustTot <- data.frame(table(seurat$patient))\ncolnames(clustTot) <- c(\"patient\", \"tot\")\npatCond <- data.frame(seurat$patient, seurat$cond2) %>% unique()\ncolnames(patCond) <- c(\"patient\", \"cond\")\nclustDat <- clustCond %>%  left_join(., clustTot, by = \"patient\") %>% \n  mutate(relAb = cnt/tot * 100) %>% left_join(., patCond, by = \"patient\")\n\nggbarplot(clustDat, x=\"patient\", y=\"relAb\",\n          width = NULL,\n          fill=\"intCluster\",\n          colour= \"intCluster\",\n          palette = colPal,\n          xlab = \"patient\",\n          ylab = \"percentage\",\n          legend = \"right\",\n          legend.title = \"\") + \n  rotate_x_text(angle = 90) +\n  facet_grid(~cond, scales = \"free\", space = \"free\")"
  },
  {
    "objectID": "analysis/visFRC_DEgenesCond2_woCM.html#vis-overall-de-genes",
    "href": "analysis/visFRC_DEgenesCond2_woCM.html#vis-overall-de-genes",
    "title": "visualize DE genes FRCs",
    "section": "vis overall DE genes",
    "text": "vis overall DE genes\n\nmarker genes\n\nIdents(seurat) <- seurat$cond2\nseurat_markers_all <- FindAllMarkers(object = seurat, assay =\"RNA\",\n                                     only.pos = TRUE, min.pct = 0.25,\n                                     logfc.threshold = 0.25,\n                                     test.use = \"wilcox\")\n\n\n\navg heatmap\n\ncluster <- levels(seurat)\nselGenesAll <- seurat_markers_all %>% group_by(cluster) %>% \n  top_n(-15, p_val_adj) %>% \n  top_n(15, avg_log2FC)\nselGenesAll <- selGenesAll %>% mutate(geneIDval=gsub(\"^.*\\\\.\", \"\", gene)) %>% filter(nchar(geneIDval)>1)\n\nseurat$clust_plus_cond <- paste0(seurat$intCluster, \"_\", seurat$cond2)\nIdents(seurat) <- seurat$clust_plus_cond\npOut <- avgHeatmap(seurat = seurat, selGenes = selGenesAll,\n                  colVecIdent = colPal, \n                  ordVec=levels(seurat),\n                  gapVecR=NULL, gapVecC=NULL,cc=FALSE,\n                  cr=T, condCol=T, colVecCond = colCond2)\n\n\n\n\n\n\nsc Heatmap\n\nDefaultAssay(object = seurat) <- \"RNA\"\nseurat <- ScaleData(seurat, features = rownames(seurat))\n\n### plot DE genes top 25 avg logFC\nDEGenesAll <- seurat_markers_all %>% group_by(cluster) %>% \n  top_n(30, avg_log2FC) \n\nselFeatures <- DEGenesAll %>% mutate(label=gsub(\"^.*\\\\.\", \"\", gene))\nDoHeatmap(seurat, features = selFeatures$gene, group.by = \"cond2\", \n          group.colors = colCond2, slot = 'scale.data', label = F,\n          disp.min = -0.5, disp.max = 1.5) +\n  scale_fill_continuous(type = \"viridis\") +\n  scale_y_discrete(breaks=selFeatures$gene, labels=selFeatures$label)"
  },
  {
    "objectID": "analysis/visFRC_DEgenesCond2_woCM.html#cw-de-genes",
    "href": "analysis/visFRC_DEgenesCond2_woCM.html#cw-de-genes",
    "title": "visualize DE genes FRCs",
    "section": "cw DE genes",
    "text": "cw DE genes\n\nIdents(seurat) <- seurat$cond2\ngrpVec <- unique(seurat$intCluster)\n\nclustDE <- lapply(grpVec, function(grp){\n  grpSub <- unique(seurat$intCluster)[which(\n    unique(seurat$intCluster)==grp)]\n  seuratSub <- subset(seurat, intCluster == grpSub)\n  DEgenes <-FindAllMarkers(seuratSub, only.pos=T, logfc.threshold = 0.1,\n                           min.pct = 0.01)\n  if(nrow(DEgenes)>1){\n    DEgenes <- DEgenes %>% filter(p_val_adj<0.01) %>%\n      mutate(group=paste0(grp, \"_\", cluster)) %>% \n      mutate(geneID=gsub(\".*\\\\.\", \"\",  gene)) %>% \n      filter(nchar(geneID)>1)\n    }\n})\n\nnames(clustDE) <- grpVec\n\nclustDE_Dat <- data.frame(do.call(\"rbind\", clustDE))\n\nwrite.table(clustDE_Dat,\n            file=paste0(basedir, \"/data/AllPatWithoutCM_FRConly_intOrig_cond2\", \n                        \"_cwDEGenes.txt\"),\n            row.names = FALSE, col.names = TRUE, quote = FALSE, sep = \"\\t\")\n\n\navg Heatmap top cwDE genes\n\n\n\n\n5\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\n\n2\n\n\n\n\n\n\n\n0\n\n\n\n\n\n\n\n4\n\n\n\n\n\n\n\n7\n\n\n\n\n\n\n\n3\n\n\n\n\n\n\n\n6\n\n\n\n\n\n\n\n\nscatterplot cw DE genes cond 2\n\n## scatterplot\n## in red are all genes with an adjusted p_val < 0.01 and avg_logFC >0.25\n\n################################################################################\n### include only genes expressed in at least 10 % of cells in one condition ####\n################################################################################\ngrpVec <- unique(seurat$integrated_snn_res.0.25)\n\nlapply(grpVec, function(x){\n  allID <- subset(seurat, integrated_snn_res.0.25 == x)\n  Idents(allID) <-allID$cond2\n  avg.allID <- AverageExpression(allID, group.by=\"cond2\",\n                                 show.progress = FALSE)\n  avg.allID <- data.frame(log1p(avg.allID$RNA)) %>% \n    rownames_to_column(var=\"gene\")\n  \n  ## expression frequency\n  GeneFreqSel <- as.data.frame(GetAssayData(allID, assay = \"RNA\",\n                                            slot = \"data\")) %>%\n    tibble::rownames_to_column(var=\"gene\") %>% mutate(count=rowSums(.!=0)-1) %>%\n    mutate(countFreq=count/ncol(allID)) %>%\n    dplyr::select(gene,count, countFreq) %>%\n    dplyr::filter(countFreq>=0.1)\n  \n  signGenes2 <- clustDE_Dat %>% mutate(grp=gsub(\"_.*\", \"\", group)) %>%\n    dplyr::filter(grp == x) %>% \n    dplyr::filter(p_val_adj<0.01 & (avg_log2FC > 0.25)) \n  \n  genes.to.label <- signGenes2 %>% group_by(.,cluster) %>% \n    slice_max(avg_log2FC, n=15) %>% mutate(labelNam=geneID)\n  \n  avg.allID <- avg.allID %>% mutate(labelNam=gsub(\"^.*\\\\.\", \"\", gene)) %>%\n    mutate(colourGrp=ifelse(gene %in% genes.to.label$gene, \"lab\",\n                            ifelse(gene%in%signGenes2$gene, \"sig\", \"notSig\"))) %>%\n    dplyr::filter(gene%in%GeneFreqSel$gene)\n  \n  \n  p_allID <- ggscatter(avg.allID, x=\"resting\", y=\"activated\",\n                      color = \"colourGrp\",\n                      palette = c(\"#660000\", \"#808080\", \"#FF3333\"),\n                      label=\"labelNam\",\n                      label.select = genes.to.label$labelNam,\n                      repel = F,\n                      label.rectangle=F,\n                      xlab=\"resting\",\n                      ylab = \"activated\",\n                      title=paste0(\"average expression - cluster \", x),\n                      legend=\"none\",\n                      font.label=10,\n                      alpha=0.9,\n                      size=0.5)\n  \n  p_allID \n\n})\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n[[5]]\n\n\n\n\n\n\n[[6]]\n\n\n\n\n\n\n[[7]]\n\n\n\n\n\n\n[[8]]\n\n\n\n\n\n\n\nsc heatmap across all top cw DE genes\n\ncolPal2 <- rep(colPal, each=2)\nnames(colPal2) <- as.vector(t(outer(names(colPal), names(colCond2), paste,\n                                    sep=\"_\"))) \n\n### plot DE genes top 15 avg logFC\nDEGenesAll <- clustDE_Dat %>% group_by(group) %>% \n  top_n(15, avg_log2FC) \n\nselFeatures <- DEGenesAll %>% mutate(label=gsub(\"^.*\\\\.\", \"\", gene))\nDoHeatmap(seurat, features = unique(selFeatures$gene),\n          group.by = \"clust_plus_cond\", \n          group.colors = colPal2, slot = 'scale.data', label = F,\n          disp.min = -0.5, disp.max = 1.5) +\n  scale_fill_continuous(type = \"viridis\") +\n  scale_y_discrete(breaks=selFeatures$gene, labels=selFeatures$label)"
  },
  {
    "objectID": "analysis/visFRC_DEgenesCond2_woCM.html#session-info",
    "href": "analysis/visFRC_DEgenesCond2_woCM.html#session-info",
    "title": "visualize DE genes FRCs",
    "section": "session info",
    "text": "session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] scater_1.28.0               scuttle_1.10.3              SingleCellExperiment_1.22.0\n [4] SummarizedExperiment_1.30.2 Biobase_2.60.0              GenomicRanges_1.52.1       \n [7] GenomeInfoDb_1.36.4         IRanges_2.36.0              S4Vectors_0.40.1           \n[10] BiocGenerics_0.48.0         MatrixGenerics_1.12.3       matrixStats_1.2.0          \n[13] pheatmap_1.0.12             ggsci_3.0.1                 here_1.0.1                 \n[16] runSeurat3_0.1.0            ggpubr_0.6.0                lubridate_1.9.3            \n[19] forcats_1.0.0               stringr_1.5.1               readr_2.1.5                \n[22] tidyr_1.3.1                 tibble_3.2.1                tidyverse_2.0.0            \n[25] Seurat_5.0.2                SeuratObject_5.0.1          sp_2.1-3                   \n[28] purrr_1.0.2                 cowplot_1.1.3               ggplot2_3.5.0              \n[31] reshape2_1.4.4              dplyr_1.1.4                \n\nloaded via a namespace (and not attached):\n  [1] RcppAnnoy_0.0.22          splines_4.3.0             later_1.3.2              \n  [4] bitops_1.0-7              polyclip_1.10-6           fastDummies_1.7.3        \n  [7] lifecycle_1.0.4           rstatix_0.7.2             rprojroot_2.0.4          \n [10] globals_0.16.2            lattice_0.22-5            MASS_7.3-60.0.1          \n [13] backports_1.4.1           magrittr_2.0.3            limma_3.56.2             \n [16] plotly_4.10.4             rmarkdown_2.26            yaml_2.3.8               \n [19] httpuv_1.6.14             sctransform_0.4.1         spam_2.10-0              \n [22] spatstat.sparse_3.0-3     reticulate_1.35.0         pbapply_1.7-2            \n [25] RColorBrewer_1.1-3        abind_1.4-5               zlibbioc_1.46.0          \n [28] Rtsne_0.17                presto_1.0.0              RCurl_1.98-1.14          \n [31] GenomeInfoDbData_1.2.10   ggrepel_0.9.5             irlba_2.3.5.1            \n [34] listenv_0.9.1             spatstat.utils_3.0-4      goftest_1.2-3            \n [37] RSpectra_0.16-1           spatstat.random_3.2-3     fitdistrplus_1.1-11      \n [40] parallelly_1.37.1         DelayedMatrixStats_1.22.6 leiden_0.4.3.1           \n [43] codetools_0.2-19          DelayedArray_0.26.7       tidyselect_1.2.0         \n [46] farver_2.1.1              viridis_0.6.5             ScaledMatrix_1.8.1       \n [49] spatstat.explore_3.2-6    jsonlite_1.8.8            BiocNeighbors_1.18.0     \n [52] ellipsis_0.3.2            progressr_0.14.0          ggridges_0.5.6           \n [55] survival_3.5-8            tools_4.3.0               ica_1.0-3                \n [58] Rcpp_1.0.12               glue_1.7.0                gridExtra_2.3            \n [61] xfun_0.42                 withr_3.0.0               fastmap_1.1.1            \n [64] fansi_1.0.6               rsvd_1.0.5                digest_0.6.34            \n [67] timechange_0.3.0          R6_2.5.1                  mime_0.12                \n [70] colorspace_2.1-0          scattermore_1.2           tensor_1.5               \n [73] spatstat.data_3.0-4       utf8_1.2.4                generics_0.1.3           \n [76] data.table_1.15.2         httr_1.4.7                htmlwidgets_1.6.4        \n [79] S4Arrays_1.0.6            uwot_0.1.16               pkgconfig_2.0.3          \n [82] gtable_0.3.4              lmtest_0.9-40             XVector_0.40.0           \n [85] htmltools_0.5.7           carData_3.0-5             dotCall64_1.1-1          \n [88] scales_1.3.0              png_0.1-8                 knitr_1.45               \n [91] rstudioapi_0.15.0         tzdb_0.4.0                nlme_3.1-164             \n [94] zoo_1.8-12                KernSmooth_2.23-22        vipor_0.4.7              \n [97] parallel_4.3.0            miniUI_0.1.1.1            pillar_1.9.0             \n[100] grid_4.3.0                vctrs_0.6.5               RANN_2.6.1               \n[103] promises_1.2.1            BiocSingular_1.16.0       car_3.1-2                \n[106] beachmat_2.16.0           xtable_1.8-4              cluster_2.1.6            \n[109] beeswarm_0.4.0            evaluate_0.23             cli_3.6.2                \n[112] compiler_4.3.0            rlang_1.1.3               crayon_1.5.2             \n[115] future.apply_1.11.1       ggsignif_0.6.4            labeling_0.4.3           \n[118] ggbeeswarm_0.7.2          plyr_1.8.9                stringi_1.8.3            \n[121] BiocParallel_1.34.2       viridisLite_0.4.2         deldir_2.0-4             \n[124] munsell_0.5.0             lazyeval_0.2.2            spatstat.geom_3.2-9      \n[127] Matrix_1.6-5              RcppHNSW_0.6.0            hms_1.1.3                \n[130] patchwork_1.2.0           sparseMatrixStats_1.12.2  future_1.33.1            \n[133] shiny_1.8.0               ROCR_1.0-11               igraph_2.0.2             \n[136] broom_1.0.5              \n\ndate()\n\n[1] \"Wed Mar 13 19:07:39 2024\""
  },
  {
    "objectID": "analysis/createRefDatasetIntImm.html",
    "href": "analysis/createRefDatasetIntImm.html",
    "title": "create Ref dataset celltype decomposition",
    "section": "",
    "text": "library(tidyverse)\nlibrary(SpatialExperiment)\nlibrary(here)\nlibrary(ggspavis)\nlibrary(scater)\nlibrary(ggsci)\nlibrary(scran)\nlibrary(pheatmap)\nlibrary(SpaTalk)\nlibrary(Matrix)\nlibrary(Seurat)\nlibrary(igraph)"
  },
  {
    "objectID": "analysis/createRefDatasetIntImm.html#sample-1",
    "href": "analysis/createRefDatasetIntImm.html#sample-1",
    "title": "create Ref dataset celltype decomposition",
    "section": "Sample 1",
    "text": "Sample 1\n\nLoad reference data and fuse label\n\nbasedir <- here()\n\nseuratFRC <- readRDS(file= paste0(basedir,\n                            \"/data/AllPatWithoutCM_FRConly_intOrig\", \n                            \"_seurat.rds\"))\nseuratBEC <- readRDS(file= paste0(basedir,\n                            \"/data/AllPatWithoutCM_BEConly_intOrig_label\", \n                            \"_seurat.rds\"))\nseuratLEC <- readRDS(file= paste0(basedir,\n                            \"/data/AllPatWithoutCM_LEConly_intOrig_label\", \n                            \"_seurat.rds\"))\nseuratIMM <- readRDS(file= paste0(basedir,\n                            \"/data/AllPatWithoutCM_IMMMerged_integrated_label\",\n                       \"_seurat.rds\"))\n\n## add label FRCs\nseuratFRC$label <- \"medRCIFRC\"\nseuratFRC$label[which(seuratFRC$intCluster == \"7\")] <- \"BRC\"\nseuratFRC$label[which(seuratFRC$intCluster == \"2\")] <- \"TRC\"\nseuratFRC$label[which(seuratFRC$intCluster == \"3\")] <- \"ACTA2+PRC\"\nseuratFRC$label[which(seuratFRC$intCluster == \"4\")] <- \"VSMC\"\nseuratFRC$label[which(seuratFRC$intCluster == \"5\")] <- \"PI16+RC\"\nseuratFRC$label[which(seuratFRC$intCluster == \"6\")] <- \"PRC1\"\n\n## group imm cells\nseuratIMM$label2 <- seuratIMM$label\nseuratIMM$label <- as.character(seuratIMM$label)\nseuratIMM$label[which(seuratIMM$label %in% c(\"naiveCD4-2\", \"naiveCD4-3\",\n                                             \"naiveCD4-1\", \"Treg\" ))] <- \"CD4T\"\nseuratIMM$label[which(seuratIMM$label %in% c(\"pDC-2\", \"pDC-1\" ))] <- \"pDC\"\nseuratIMM$label[which(seuratIMM$label %in% c(\"naiveB\", \"preB\" ))] <- \"naiveB\"\n\n\n## group BEC\nseuratBEC$label3 <- seuratBEC$label\nseuratBEC$label <- \"artBEC\"\nseuratBEC$label[which(seuratBEC$label2 == \"Cappilary\")] <- \"capBEC\"\nseuratBEC$label[which(seuratBEC$label2 == \"Venous\")] <- \"venBEC\"\n\n## group LEC\n#seuratLEC$label2 <- seuratLEC$label\nseuratLEC$label <- as.character(seuratLEC$label)\nseuratLEC <- subset(seuratLEC, label %in% c(\"SCScLEC\", \"SCSfLEC\", \"MedSinusLEC\"))\n#seuratLEC$label[which(seuratLEC$label2 %in% c(\"MedCapsLEC\", \"SCScLEC\",\n#                                              \"ValveLEC\"))] <- \"cLECcaps\"\n#seuratLEC$label[which(seuratLEC$label2 %in% c(\"MedSinusLEC\",\n#                                              \"ParacortLEC\"))] <-\"MedSinPlusParaLEC\"\n\n\nrefSeurat <- merge(seuratFRC, c(seuratIMM, seuratBEC, seuratLEC))\nremove(seuratIMM, seuratLEC, seuratBEC, seuratFRC)\nrefSeurat <- subset(refSeurat, cond == \"resting\")\nrefSeurat <- NormalizeData(object = refSeurat)\nrefSeurat <- FindVariableFeatures(object = refSeurat)\nrefSeurat <- ScaleData(object = refSeurat, verbose = FALSE)\nrefSeurat <- RunPCA(object = refSeurat, npcs = 30, verbose = FALSE)\nrefSeurat <- RunTSNE(object = refSeurat, reduction = \"pca\", dims = 1:20)\nrefSeurat <- RunUMAP(object = refSeurat, reduction = \"pca\", dims = 1:20)\n\nsaveRDS(refSeurat, file = paste0(basedir, \"/data/refSeurat_allCelltypesIntImm.rds\"))\n\n\n\nset color palettes\n\ncolLEC <- c(\"#79AF97FF\",\"#B24745FF\",\"#DF8F44FF\")\nnames(colLEC) <- c(\"SCScLEC\", \"SCSfLEC\", \"MedSinusLEC\")\n\ncolBEC <- c(\"#48557e\", \"#e3a616\",\"#9a3038\")\nnames(colBEC) <- c(\"venBEC\", \"capBEC\", \"artBEC\")\n\n\ncolFRC <- c(\"#800000FF\", \"#FFA319FF\",\"#8A9045FF\", \"#155F83FF\",\n            \"#C16622FF\", \"#6692a3\", \"#3b7f60\")\nnames(colFRC) <- c(\"medRCIFRC\", \"TRC\", \"ACTA2+PRC\", \"VSMC\", \"PI16+RC\", \"PRC1\",\n                   \"BRC\")\n\n\ncolImm <- c(\"#0b6647\", \"#54907e\", \"#94c78a\", \"#6f9568\", \n            \"#8f2810\", \"#d0ac21\",\"#9e9f0b\", \"#486584\",\n            \"#4b5397\", \"#8873d3\", \"#6e3e7a\")\n            \nnames(colImm) <- c(\"naiveB\", \"GCB\", \"MBC\", \"plasmaCell\",\n                   \"CD4T\", \"CD8Tcm\", \"CTL/NKcell\", \"ILC3\", \"pDC\", \"Mph/DC-1\",\n                   \"Mph/DC-2\")\n\ncolAll <- c(colFRC, colBEC, colLEC, colImm) \n\ncolPal <- c(\"#F0027F\", \"#377EB8\", \"#4DAF4A\", \"#984EA3\", \"#FFD700\",\n            \"#FF7F00\", \"#1A1A1A\", \"#666666\", pal_futurama()(10))\n\n\n\nvis ref data\n\nIdents(refSeurat) <- refSeurat$label\nDimPlot(refSeurat, reduction = \"umap\", cols = colAll, raster = F, shuffle = T)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(refSeurat, reduction = \"umap\", cols = colAll, raster = F, shuffle = T,\n        pt.size=0.7)+\n  theme_void()"
  },
  {
    "objectID": "analysis/createRefDatasetIntImm.html#session-info",
    "href": "analysis/createRefDatasetIntImm.html#session-info",
    "title": "create Ref dataset celltype decomposition",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] parallel  stats4    stats     graphics  grDevices utils     datasets \n[8] methods   base     \n\nother attached packages:\n [1] igraph_2.0.2                Seurat_5.0.2               \n [3] SeuratObject_5.0.1          sp_2.1-3                   \n [5] Matrix_1.6-5                SpaTalk_1.0                \n [7] doParallel_1.0.17           iterators_1.0.14           \n [9] foreach_1.5.2               ggalluvial_0.12.5          \n[11] pheatmap_1.0.12             scran_1.28.2               \n[13] ggsci_3.0.1                 scater_1.28.0              \n[15] scuttle_1.10.3              ggspavis_1.6.0             \n[17] here_1.0.1                  SpatialExperiment_1.10.0   \n[19] SingleCellExperiment_1.22.0 SummarizedExperiment_1.30.2\n[21] Biobase_2.60.0              GenomicRanges_1.52.1       \n[23] GenomeInfoDb_1.36.4         IRanges_2.36.0             \n[25] S4Vectors_0.40.1            BiocGenerics_0.48.0        \n[27] MatrixGenerics_1.12.3       matrixStats_1.2.0          \n[29] lubridate_1.9.3             forcats_1.0.0              \n[31] stringr_1.5.1               dplyr_1.1.4                \n[33] purrr_1.0.2                 readr_2.1.5                \n[35] tidyr_1.3.1                 tibble_3.2.1               \n[37] ggplot2_3.5.0               tidyverse_2.0.0            \n\nloaded via a namespace (and not attached):\n  [1] spatstat.sparse_3.0-3     bitops_1.0-7             \n  [3] httr_1.4.7                RColorBrewer_1.1-3       \n  [5] backports_1.4.1           tools_4.3.0              \n  [7] sctransform_0.4.1         utf8_1.2.4               \n  [9] R6_2.5.1                  HDF5Array_1.28.1         \n [11] lazyeval_0.2.2            uwot_0.1.16              \n [13] rhdf5filters_1.12.1       withr_3.0.0              \n [15] prettyunits_1.2.0         gridExtra_2.3            \n [17] progressr_0.14.0          cli_3.6.2                \n [19] spatstat.explore_3.2-6    fastDummies_1.7.3        \n [21] scatterpie_0.2.1          labeling_0.4.3           \n [23] spatstat.data_3.0-4       ggridges_0.5.6           \n [25] pbapply_1.7-2             R.utils_2.12.3           \n [27] parallelly_1.37.1         limma_3.56.2             \n [29] rstudioapi_0.15.0         generics_0.1.3           \n [31] ica_1.0-3                 spatstat.random_3.2-3    \n [33] car_3.1-2                 ggbeeswarm_0.7.2         \n [35] fansi_1.0.6               abind_1.4-5              \n [37] R.methodsS3_1.8.2         lifecycle_1.0.4          \n [39] yaml_2.3.8                edgeR_3.42.4             \n [41] carData_3.0-5             rhdf5_2.44.0             \n [43] Rtsne_0.17                grid_4.3.0               \n [45] promises_1.2.1            dqrng_0.3.2              \n [47] crayon_1.5.2              miniUI_0.1.1.1           \n [49] lattice_0.22-5            beachmat_2.16.0          \n [51] cowplot_1.1.3             magick_2.8.3             \n [53] pillar_1.9.0              knitr_1.45               \n [55] metapod_1.8.0             rjson_0.2.21             \n [57] future.apply_1.11.1       codetools_0.2-19         \n [59] leiden_0.4.3.1            glue_1.7.0               \n [61] ggfun_0.1.4               data.table_1.15.2        \n [63] vctrs_0.6.5               png_0.1-8                \n [65] spam_2.10-0               gtable_0.3.4             \n [67] xfun_0.42                 S4Arrays_1.0.6           \n [69] mime_0.12                 DropletUtils_1.20.0      \n [71] NNLM_0.4.4                ggside_0.3.1             \n [73] survival_3.5-8            statmod_1.5.0            \n [75] bluster_1.10.0            ellipsis_0.3.2           \n [77] fitdistrplus_1.1-11       ROCR_1.0-11              \n [79] nlme_3.1-164              progress_1.2.3           \n [81] RcppAnnoy_0.0.22          rprojroot_2.0.4          \n [83] irlba_2.3.5.1             vipor_0.4.7              \n [85] KernSmooth_2.23-22        colorspace_2.1-0         \n [87] tidyselect_1.2.0          compiler_4.3.0           \n [89] BiocNeighbors_1.18.0      DelayedArray_0.26.7      \n [91] plotly_4.10.4             scales_1.3.0             \n [93] lmtest_0.9-40             digest_0.6.34            \n [95] goftest_1.2-3             spatstat.utils_3.0-4     \n [97] rmarkdown_2.26            XVector_0.40.0           \n [99] htmltools_0.5.7           pkgconfig_2.0.3          \n[101] sparseMatrixStats_1.12.2  fastmap_1.1.1            \n[103] rlang_1.1.3               htmlwidgets_1.6.4        \n[105] shiny_1.8.0               DelayedMatrixStats_1.22.6\n[107] farver_2.1.1              zoo_1.8-12               \n[109] jsonlite_1.8.8            BiocParallel_1.34.2      \n[111] R.oo_1.26.0               BiocSingular_1.16.0      \n[113] RCurl_1.98-1.14           magrittr_2.0.3           \n[115] GenomeInfoDbData_1.2.10   dotCall64_1.1-1          \n[117] patchwork_1.2.0           Rhdf5lib_1.22.1          \n[119] munsell_0.5.0             Rcpp_1.0.12              \n[121] viridis_0.6.5             reticulate_1.35.0        \n[123] stringi_1.8.3             zlibbioc_1.46.0          \n[125] MASS_7.3-60.0.1           plyr_1.8.9               \n[127] listenv_0.9.1             ggrepel_0.9.5            \n[129] deldir_2.0-4              splines_4.3.0            \n[131] tensor_1.5                hms_1.1.3                \n[133] locfit_1.5-9.9            ggpubr_0.6.0             \n[135] spatstat.geom_3.2-9       ggsignif_0.6.4           \n[137] RcppHNSW_0.6.0            reshape2_1.4.4           \n[139] ScaledMatrix_1.8.1        evaluate_0.23            \n[141] tzdb_0.4.0                tweenr_2.0.3             \n[143] httpuv_1.6.14             RANN_2.6.1               \n[145] polyclip_1.10-6           future_1.33.1            \n[147] scattermore_1.2           ggforce_0.4.2            \n[149] ggExtra_0.10.1            rsvd_1.0.5               \n[151] broom_1.0.5               xtable_1.8-4             \n[153] RSpectra_0.16-1           rstatix_0.7.2            \n[155] later_1.3.2               viridisLite_0.4.2        \n[157] beeswarm_0.4.0            cluster_2.1.6            \n[159] timechange_0.3.0          globals_0.16.2           \n\ndate()\n\n[1] \"Wed Mar 13 19:28:25 2024\""
  },
  {
    "objectID": "analysis/subsetFRCs.html#load-packages",
    "href": "analysis/subsetFRCs.html#load-packages",
    "title": "Subset FRCs and VSMCs human LN",
    "section": "Load packages",
    "text": "Load packages\n\n## load packages \nsuppressPackageStartupMessages({\n  library(dplyr)\n  library(reshape2)\n  library(ggplot2)\n  library(cowplot)\n  library(purrr)\n  library(Seurat)\n  library(tidyverse)\n  library(ggpubr)\n  library(runSeurat3)\n  library(here)\n  library(ggsci)\n  library(pheatmap)\n  library(scater)\n})"
  },
  {
    "objectID": "analysis/subsetFRCs.html#load-seurat-object",
    "href": "analysis/subsetFRCs.html#load-seurat-object",
    "title": "Subset FRCs and VSMCs human LN",
    "section": "load seurat object",
    "text": "load seurat object\n\nbasedir <- here()\n\n## load seurat object from previous analysis\nseurat <- readRDS(file=paste0(basedir, \"/data/AllPatWithoutCM_LNFSCMerged_seurat.rds\"))\n\ncolPal <- c(pal_nejm()(7),pal_futurama()(12))[1:length(levels(seurat))]\nnames(colPal) <- levels(seurat)"
  },
  {
    "objectID": "analysis/subsetFRCs.html#visualize-data",
    "href": "analysis/subsetFRCs.html#visualize-data",
    "title": "Subset FRCs and VSMCs human LN",
    "section": "visualize data",
    "text": "visualize data\n\nclustering\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPal)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\npatient\n\ncolPat <- c(pal_jco()(10),pal_futurama()(12))[1:length(unique(seurat$patient))]\nnames(colPat) <- unique(seurat$patient)\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\ncond\n\ncolTon <- pal_igv()(length(unique(seurat$cond)))\nnames(colTon) <- unique(seurat$cond)\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colTon, group.by = \"cond\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\ngrp\n\ncolGrp <- pal_uchicago()(length(unique(seurat$grp)))\nnames(colGrp) <- unique(seurat$grp)\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colGrp, group.by = \"grp\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\norigin\n\ncolOri <- pal_npg()(length(unique(seurat$origin)))\nnames(colOri) <- unique(seurat$origin)\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colOri, group.by = \"origin\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")"
  },
  {
    "objectID": "analysis/subsetFRCs.html#subset-on-frcs-and-smcs",
    "href": "analysis/subsetFRCs.html#subset-on-frcs-and-smcs",
    "title": "Subset FRCs and VSMCs human LN",
    "section": "subset on FRCs and SMCs",
    "text": "subset on FRCs and SMCs\n\ndim(seurat)\n\n[1] 36098 61459\n\nseurat <- subset(seurat, grp %in% c(\"FRC\", \"SMC\"))\ndim(seurat)\n\n[1] 36098 43858\n\n## reprocess\nres <- c(0.8,0.6,0.4,0.25)\n\nseurat <- NormalizeData(object = seurat)\nseurat <- FindVariableFeatures(object = seurat)\nseurat <- ScaleData(object = seurat, verbose = FALSE)\nseurat <- RunPCA(object = seurat, npcs = 30, verbose = FALSE)\nseurat <- RunTSNE(object = seurat, reduction = \"pca\", dims = 1:20)\nseurat <- RunUMAP(object = seurat, reduction = \"pca\", dims = 1:20)\nseurat <- FindNeighbors(object = seurat, reduction = \"pca\", \n                        dims = 1:20)\nfor (i in 1:length(res)) {\n    seurat <- FindClusters(object = seurat, resolution = res[i], \n                           random.seed = 1234)\n}\n\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 43858\nNumber of edges: 1433199\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.8893\nNumber of communities: 22\nElapsed time: 9 seconds\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 43858\nNumber of edges: 1433199\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9029\nNumber of communities: 20\nElapsed time: 9 seconds\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 43858\nNumber of edges: 1433199\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9174\nNumber of communities: 18\nElapsed time: 8 seconds\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 43858\nNumber of edges: 1433199\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9326\nNumber of communities: 11\nElapsed time: 9 seconds"
  },
  {
    "objectID": "analysis/subsetFRCs.html#visualize-data-1",
    "href": "analysis/subsetFRCs.html#visualize-data-1",
    "title": "Subset FRCs and VSMCs human LN",
    "section": "visualize data",
    "text": "visualize data\n\nclustering\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPal)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\npatient\n\ncolPat <- c(pal_jco()(10),pal_futurama()(12))[1:length(unique(seurat$patient))]\nnames(colPat) <- unique(seurat$patient)\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\",\n        shuffle = T)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\ncond\n\ncolTon <- pal_igv()(length(unique(seurat$cond)))\nnames(colTon) <- unique(seurat$cond)\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colTon, group.by = \"cond\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\ngrp\n\ncolGrp <- pal_uchicago()(length(unique(seurat$grp)))\nnames(colGrp) <- unique(seurat$grp)\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colGrp, group.by = \"grp\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\norigin\n\ncolOri <- pal_npg()(length(unique(seurat$origin)))\nnames(colOri) <- unique(seurat$origin)\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colOri, group.by = \"origin\",\n        shuffle = T)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")"
  },
  {
    "objectID": "analysis/subsetFRCs.html#save-seurat-object",
    "href": "analysis/subsetFRCs.html#save-seurat-object",
    "title": "Subset FRCs and VSMCs human LN",
    "section": "save seurat object",
    "text": "save seurat object\n\nsaveRDS(seurat, file=paste0(basedir, \"/data/AllPatWithoutCM_FRConly_seurat.rds\"))"
  },
  {
    "objectID": "analysis/subsetFRCs.html#integrate-data",
    "href": "analysis/subsetFRCs.html#integrate-data",
    "title": "Subset FRCs and VSMCs human LN",
    "section": "integrate data",
    "text": "integrate data\n\nIdents(seurat) <- seurat$patient\n\nseurat.list <- SplitObject(object = seurat, split.by = \"patient\")\nfor (i in 1:length(x = seurat.list)) {\n    seurat.list[[i]] <- NormalizeData(object = seurat.list[[i]],\n                                      verbose = FALSE)\n    seurat.list[[i]] <- FindVariableFeatures(object = seurat.list[[i]], \n        selection.method = \"vst\", nfeatures = 2000, verbose = FALSE)\n}\n\nseurat.anchors <- FindIntegrationAnchors(object.list = seurat.list, dims = 1:15)\nseurat.int <- IntegrateData(anchorset = seurat.anchors, dims = 1:15)\nDefaultAssay(object = seurat.int) <- \"integrated\"\n\n# rerun seurat\nseurat.int <- ScaleData(object = seurat.int, verbose = FALSE,\n                        features = rownames(seurat.int))\nseurat.int <- RunPCA(object = seurat.int, npcs = 20, verbose = FALSE)\nseurat.int <- RunTSNE(object = seurat.int, reduction = \"pca\", dims = 1:20)\nseurat.int <- RunUMAP(object = seurat.int, reduction = \"pca\", dims = 1:20)\n\nseurat.int <- FindNeighbors(object = seurat.int, reduction = \"pca\", dims = 1:20)\nres <- c(0.6,0.8,0.4,0.25)\nfor(i in 1:length(res)){\n  seurat.int <- FindClusters(object = seurat.int, resolution = res[i],\n                             random.seed = 1234)\n}"
  },
  {
    "objectID": "analysis/subsetFRCs.html#saveload-int-object",
    "href": "analysis/subsetFRCs.html#saveload-int-object",
    "title": "Subset FRCs and VSMCs human LN",
    "section": "save/load int object",
    "text": "save/load int object\n\n#saveRDS(seurat.int,\n#        file= paste0(basedir, \"/data/AllPatWithoutCM_FRConly_intOrig_seurat.rds\"))\n\nseurat.int <- readRDS(file= paste0(basedir,\n                               \"/data/AllPatWithoutCM_FRConly_intOrig_seurat.rds\"))\nDefaultAssay(object = seurat.int) <- \"RNA\"\nseurat.int$intCluster <- seurat.int$integrated_snn_res.0.25\nIdents(seurat.int) <- seurat.int$intCluster"
  },
  {
    "objectID": "analysis/subsetFRCs.html#visualize-int-data",
    "href": "analysis/subsetFRCs.html#visualize-int-data",
    "title": "Subset FRCs and VSMCs human LN",
    "section": "visualize int data",
    "text": "visualize int data\n\nclustering\n\ncolPal <- c(pal_nejm()(8),pal_futurama()(12))[1:length(levels(seurat.int))]\nnames(colPal) <- levels(seurat.int)\n\n## visualize input data\nDimPlot(seurat.int, reduction = \"umap\", cols=colPal)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\npatient\n\ncolPat <- c(pal_jco()(10),\n            pal_futurama()(12))[1:length(unique(seurat.int$patient))]\nnames(colPat) <- unique(seurat.int$patient)\n\n## visualize input data\nDimPlot(seurat.int, reduction = \"umap\", cols=colPat, group.by = \"patient\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\ncond\n\ncolTon <- pal_igv()(length(unique(seurat.int$cond)))\nnames(colTon) <- unique(seurat.int$cond)\n\n## visualize input data\nDimPlot(seurat.int, reduction = \"umap\", cols=colTon, group.by = \"cond\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")"
  },
  {
    "objectID": "analysis/subsetFRCs.html#session-info",
    "href": "analysis/subsetFRCs.html#session-info",
    "title": "Subset FRCs and VSMCs human LN",
    "section": "session info",
    "text": "session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] scater_1.28.0               scuttle_1.10.3              SingleCellExperiment_1.22.0\n [4] SummarizedExperiment_1.30.2 Biobase_2.60.0              GenomicRanges_1.52.1       \n [7] GenomeInfoDb_1.36.4         IRanges_2.36.0              S4Vectors_0.40.1           \n[10] BiocGenerics_0.48.0         MatrixGenerics_1.12.3       matrixStats_1.2.0          \n[13] pheatmap_1.0.12             ggsci_3.0.1                 here_1.0.1                 \n[16] runSeurat3_0.1.0            ggpubr_0.6.0                lubridate_1.9.3            \n[19] forcats_1.0.0               stringr_1.5.1               readr_2.1.5                \n[22] tidyr_1.3.1                 tibble_3.2.1                tidyverse_2.0.0            \n[25] Seurat_5.0.2                SeuratObject_5.0.1          sp_2.1-3                   \n[28] purrr_1.0.2                 cowplot_1.1.3               ggplot2_3.5.0              \n[31] reshape2_1.4.4              dplyr_1.1.4                \n\nloaded via a namespace (and not attached):\n  [1] RcppAnnoy_0.0.22          splines_4.3.0             later_1.3.2              \n  [4] bitops_1.0-7              polyclip_1.10-6           fastDummies_1.7.3        \n  [7] lifecycle_1.0.4           rstatix_0.7.2             rprojroot_2.0.4          \n [10] globals_0.16.2            lattice_0.22-5            MASS_7.3-60.0.1          \n [13] backports_1.4.1           magrittr_2.0.3            plotly_4.10.4            \n [16] rmarkdown_2.26            yaml_2.3.8                httpuv_1.6.14            \n [19] sctransform_0.4.1         spam_2.10-0               spatstat.sparse_3.0-3    \n [22] reticulate_1.35.0         pbapply_1.7-2             RColorBrewer_1.1-3       \n [25] abind_1.4-5               zlibbioc_1.46.0           Rtsne_0.17               \n [28] RCurl_1.98-1.14           GenomeInfoDbData_1.2.10   ggrepel_0.9.5            \n [31] irlba_2.3.5.1             listenv_0.9.1             spatstat.utils_3.0-4     \n [34] goftest_1.2-3             RSpectra_0.16-1           spatstat.random_3.2-3    \n [37] fitdistrplus_1.1-11       parallelly_1.37.1         DelayedMatrixStats_1.22.6\n [40] leiden_0.4.3.1            codetools_0.2-19          DelayedArray_0.26.7      \n [43] tidyselect_1.2.0          farver_2.1.1              viridis_0.6.5            \n [46] ScaledMatrix_1.8.1        spatstat.explore_3.2-6    jsonlite_1.8.8           \n [49] BiocNeighbors_1.18.0      ellipsis_0.3.2            progressr_0.14.0         \n [52] ggridges_0.5.6            survival_3.5-8            tools_4.3.0              \n [55] ica_1.0-3                 Rcpp_1.0.12               glue_1.7.0               \n [58] gridExtra_2.3             xfun_0.42                 withr_3.0.0              \n [61] fastmap_1.1.1             fansi_1.0.6               rsvd_1.0.5               \n [64] digest_0.6.34             timechange_0.3.0          R6_2.5.1                 \n [67] mime_0.12                 colorspace_2.1-0          scattermore_1.2          \n [70] tensor_1.5                spatstat.data_3.0-4       utf8_1.2.4               \n [73] generics_0.1.3            data.table_1.15.2         httr_1.4.7               \n [76] htmlwidgets_1.6.4         S4Arrays_1.0.6            uwot_0.1.16              \n [79] pkgconfig_2.0.3           gtable_0.3.4              lmtest_0.9-40            \n [82] XVector_0.40.0            htmltools_0.5.7           carData_3.0-5            \n [85] dotCall64_1.1-1           scales_1.3.0              png_0.1-8                \n [88] knitr_1.45                rstudioapi_0.15.0         tzdb_0.4.0               \n [91] nlme_3.1-164              zoo_1.8-12                KernSmooth_2.23-22       \n [94] vipor_0.4.7               parallel_4.3.0            miniUI_0.1.1.1           \n [97] pillar_1.9.0              grid_4.3.0                vctrs_0.6.5              \n[100] RANN_2.6.1                promises_1.2.1            BiocSingular_1.16.0      \n[103] car_3.1-2                 beachmat_2.16.0           xtable_1.8-4             \n[106] cluster_2.1.6             beeswarm_0.4.0            evaluate_0.23            \n[109] cli_3.6.2                 compiler_4.3.0            rlang_1.1.3              \n[112] crayon_1.5.2              future.apply_1.11.1       ggsignif_0.6.4           \n[115] labeling_0.4.3            ggbeeswarm_0.7.2          plyr_1.8.9               \n[118] stringi_1.8.3             BiocParallel_1.34.2       viridisLite_0.4.2        \n[121] deldir_2.0-4              munsell_0.5.0             lazyeval_0.2.2           \n[124] spatstat.geom_3.2-9       Matrix_1.6-5              RcppHNSW_0.6.0           \n[127] hms_1.1.3                 patchwork_1.2.0           sparseMatrixStats_1.12.2 \n[130] future_1.33.1             shiny_1.8.0               ROCR_1.0-11              \n[133] igraph_2.0.2              broom_1.0.5              \n\ndate()\n\n[1] \"Wed Mar 13 19:35:47 2024\""
  },
  {
    "objectID": "analysis/visDEgenesScore.html#load-packages",
    "href": "analysis/visDEgenesScore.html#load-packages",
    "title": "DE genes FRCs resting versus activated human LN",
    "section": "Load packages",
    "text": "Load packages\n\n## load packages \nsuppressPackageStartupMessages({\n  library(dplyr)\n  library(reshape2)\n  library(ggplot2)\n  library(purrr)\n  library(Seurat)\n  library(tidyverse)\n  library(ggpubr)\n  library(runSeurat3)\n  library(here)\n  library(ggsci)\n  library(pheatmap)\n  library(scater)\n  library(SingleCellExperiment)\n  library(scran)\n})"
  },
  {
    "objectID": "analysis/visDEgenesScore.html#load-seurat-object",
    "href": "analysis/visDEgenesScore.html#load-seurat-object",
    "title": "DE genes FRCs resting versus activated human LN",
    "section": "load seurat object",
    "text": "load seurat object\n\nbasedir <- here()\n\nseurat <- readRDS(file= paste0(basedir,\n                               \"/data/AllPatWithoutCM_FRConly_intOrig_seurat.rds\"))\n\nDefaultAssay(object = seurat) <- \"RNA\"\nseurat$intCluster <- as.character(seurat$integrated_snn_res.0.25)\nIdents(seurat) <- seurat$intCluster\n\n\n## set col palettes\ncolPal <- c(pal_uchicago()(6), \"#6692a3\", \"#3b7f60\")\nnames(colPal) <- c(\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\")\ncolPat <- c(pal_nejm()(7),pal_futurama()(12))[1:length(unique(seurat$patient))]\nnames(colPat) <- unique(seurat$patient)\ncolCond <- c(\"#6692a3\",\"#971c1c\",\"#d17d67\")\nnames(colCond) <- unique(seurat$cond)\ncolGrp <- pal_uchicago()(length(unique(seurat$grp)))\nnames(colGrp) <- unique(seurat$grp)\ncolOri <- pal_npg()(length(unique(seurat$origin)))\nnames(colOri) <- unique(seurat$origin)\ncolTon <- colCond\n\n## all activated in one grp\nseurat$cond2 <- seurat$cond\nseurat$cond2[which(seurat$cond %in% c(\"chronic\", \"acute\"))] <- \"activated\"\n\ncolCond2 <- c(\"#6692a3\",\"#971c1c\")\nnames(colCond2) <- c(\"resting\", \"activated\")"
  },
  {
    "objectID": "analysis/visDEgenesScore.html#visualize-data",
    "href": "analysis/visDEgenesScore.html#visualize-data",
    "title": "DE genes FRCs resting versus activated human LN",
    "section": "visualize data",
    "text": "visualize data\n\nclustering\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPal)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\npatient\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\ncond2\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colCond2, group.by = \"cond2\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\ngrp\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colGrp, group.by = \"grp\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\norigin\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colOri, group.by = \"origin\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")"
  },
  {
    "objectID": "analysis/visDEgenesScore.html#overall-de-genes",
    "href": "analysis/visDEgenesScore.html#overall-de-genes",
    "title": "DE genes FRCs resting versus activated human LN",
    "section": "overall DE genes",
    "text": "overall DE genes\n\nsce <- as.SingleCellExperiment(seurat)\n#m.out <- scoreMarkers(sce, sce$cond2, block=sce$patient)\nm.out <- scoreMarkers(sce, sce$cond2)\n\n\nplot DE genes mean AUC\n\ncluVec <- unique(names(m.out))\nlapply(cluVec, function(cl){\n  outSub <- data.frame(m.out@listData[[cl]]) %>%\n    rownames_to_column(var = \"gene\") %>%\n    slice_max(., order_by=mean.AUC, n=26)\n  plotExpression(sce, features=outSub$gene, \n    x=\"patient\", colour_by=\"cond2\") +\n    scale_color_manual(values = colCond2)\n})\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n\nplot DE genes mean.logFC.cohen\n\ncluVec <- unique(names(m.out))\nlapply(cluVec, function(cl){\n  outSub <- data.frame(m.out@listData[[cl]]) %>%\n    rownames_to_column(var = \"gene\") %>%\n    slice_max(., order_by=mean.logFC.cohen, n=26)\n  plotExpression(sce, features=outSub$gene, \n    x=\"patient\", colour_by=\"cond2\") +\n    scale_color_manual(values = colCond2)\n})\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n\nplot DE genes mean.logFC.detected\n\ncluVec <- unique(names(m.out))\nlapply(cluVec, function(cl){\n  outSub <- data.frame(m.out@listData[[cl]]) %>%\n    rownames_to_column(var = \"gene\") %>%\n    slice_max(., order_by=mean.logFC.detected, n=26)\n  plotExpression(sce, features=outSub$gene, \n    x=\"patient\", colour_by=\"cond\") +\n    scale_color_manual(values = colCond2)\n})\n\n[[1]]\n\n\n\n\n\n\n[[2]]"
  },
  {
    "objectID": "analysis/visDEgenesScore.html#cw-de-genes",
    "href": "analysis/visDEgenesScore.html#cw-de-genes",
    "title": "DE genes FRCs resting versus activated human LN",
    "section": "cw DE genes",
    "text": "cw DE genes\n\ncluVec <- unique(sce$integrated_snn_res.0.25)\nlapply(cluVec, function(cl){\n  sceSub <- sce[,which(sce$integrated_snn_res.0.25 == cl)]\n  m.out <- scoreMarkers(sceSub, sceSub$cond2)\n  condVec <- unique(names(m.out))\n  lapply(condVec, function(co){\n    outSub <- data.frame(m.out@listData[[co]]) %>%\n      rownames_to_column(var = \"gene\") %>%\n      slice_max(., order_by=mean.AUC, n=26)\n    plotExpression(sceSub, features=outSub$gene, \n      x=\"patient\", colour_by=\"cond2\") +\n      scale_color_manual(values = colCond2)\n  })\n})\n\n[[1]]\n[[1]][[1]]\n\n\n\n\n\n\n[[1]][[2]]\n\n\n\n\n\n\n\n[[2]]\n[[2]][[1]]\n\n\n\n\n\n\n[[2]][[2]]\n\n\n\n\n\n\n\n[[3]]\n[[3]][[1]]\n\n\n\n\n\n\n[[3]][[2]]\n\n\n\n\n\n\n\n[[4]]\n[[4]][[1]]\n\n\n\n\n\n\n[[4]][[2]]\n\n\n\n\n\n\n\n[[5]]\n[[5]][[1]]\n\n\n\n\n\n\n[[5]][[2]]\n\n\n\n\n\n\n\n[[6]]\n[[6]][[1]]\n\n\n\n\n\n\n[[6]][[2]]\n\n\n\n\n\n\n\n[[7]]\n[[7]][[1]]\n\n\n\n\n\n\n[[7]][[2]]\n\n\n\n\n\n\n\n[[8]]\n[[8]][[1]]\n\n\n\n\n\n\n[[8]][[2]]\n\n\n\n\n\n\ndistribution of logFC of top 100 cw DE genes activated\n\ncluVec <- unique(sce$integrated_snn_res.0.25)\nlogFCgrps <- c(\"mean.logFC.cohen\", \"mean.AUC\", \"mean.logFC.detected\")\n\nlapply(logFCgrps, function(lFC){\n  outAct <- lapply(cluVec, function(cl){\n    sceSub <- sce[,which(sce$integrated_snn_res.0.25 == cl)]\n    m.out <- scoreMarkers(sceSub, sceSub$cond2)\n    condVec <- unique(names(m.out))\n    co <- \"activated\"\n    outSub <- data.frame(m.out@listData[[co]]) %>%\n      rownames_to_column(var = \"gene\") %>%\n      slice_max(., order_by=.[[lFC]], n=100)%>%\n      mutate(condCl=paste0(co, \"_\", cl)) %>% \n      mutate(cluster=cl)\n  })\n\n  outActDat <- do.call(\"rbind\", outAct)\n\n  p1 <-ggdensity(outActDat, x = lFC,\n   add = \"median\", rug = TRUE,\n   color = \"cluster\", fill = \"cluster\",\n   palette = colPal)\n\n  p2 <- ggviolin(outActDat, x = \"cluster\", y = lFC, fill = \"cluster\",\n          palette = colPal,\n          add = \"median_iqr\")\n  \n  p3 <- ggboxplot(outActDat, x = \"cluster\", y = lFC,\n            color = \"cluster\", palette =colPal,\n            add = \"jitter\")\n  gridExtra::grid.arrange(p1, p2, p3, ncol=2)\n})\n\n\n\n\n\n\n\n\n\n\n[[1]]\nTableGrob (2 x 2) \"arrange\": 3 grobs\n  z     cells    name           grob\n1 1 (1-1,1-1) arrange gtable[layout]\n2 2 (1-1,2-2) arrange gtable[layout]\n3 3 (2-2,1-1) arrange gtable[layout]\n\n[[2]]\nTableGrob (2 x 2) \"arrange\": 3 grobs\n  z     cells    name           grob\n1 1 (1-1,1-1) arrange gtable[layout]\n2 2 (1-1,2-2) arrange gtable[layout]\n3 3 (2-2,1-1) arrange gtable[layout]\n\n[[3]]\nTableGrob (2 x 2) \"arrange\": 3 grobs\n  z     cells    name           grob\n1 1 (1-1,1-1) arrange gtable[layout]\n2 2 (1-1,2-2) arrange gtable[layout]\n3 3 (2-2,1-1) arrange gtable[layout]\n\n\n\n\ndistribution of logFC of top 100 cw DE genes resting\n\ncluVec <- unique(sce$integrated_snn_res.0.25)\nlogFCgrps <- c(\"mean.logFC.cohen\", \"mean.AUC\", \"mean.logFC.detected\")\n\nlapply(logFCgrps, function(lFC){\n  outAct <- lapply(cluVec, function(cl){\n    sceSub <- sce[,which(sce$integrated_snn_res.0.25 == cl)]\n    m.out <- scoreMarkers(sceSub, sceSub$cond2)\n    condVec <- unique(names(m.out))\n    co <- \"resting\"\n    outSub <- data.frame(m.out@listData[[co]]) %>%\n      rownames_to_column(var = \"gene\") %>%\n      slice_max(., order_by=.[[lFC]], n=100)%>%\n      mutate(condCl=paste0(co, \"_\", cl)) %>% \n      mutate(cluster=cl)\n  })\n\n  outActDat <- do.call(\"rbind\", outAct)\n\n  p1 <-ggdensity(outActDat, x = lFC,\n   add = \"median\", rug = TRUE,\n   color = \"cluster\", fill = \"cluster\",\n   palette = colPal)\n\n  p2 <- ggviolin(outActDat, x = \"cluster\", y = lFC, fill = \"cluster\",\n          palette = colPal,\n          add = \"median_iqr\")\n  \n  p3 <- ggboxplot(outActDat, x = \"cluster\", y = lFC,\n            color = \"cluster\", palette =colPal,\n            add = \"jitter\")\n  gridExtra::grid.arrange(p1, p2, p3, ncol=2)\n})\n\n\n\n\n\n\n\n\n\n\n[[1]]\nTableGrob (2 x 2) \"arrange\": 3 grobs\n  z     cells    name           grob\n1 1 (1-1,1-1) arrange gtable[layout]\n2 2 (1-1,2-2) arrange gtable[layout]\n3 3 (2-2,1-1) arrange gtable[layout]\n\n[[2]]\nTableGrob (2 x 2) \"arrange\": 3 grobs\n  z     cells    name           grob\n1 1 (1-1,1-1) arrange gtable[layout]\n2 2 (1-1,2-2) arrange gtable[layout]\n3 3 (2-2,1-1) arrange gtable[layout]\n\n[[3]]\nTableGrob (2 x 2) \"arrange\": 3 grobs\n  z     cells    name           grob\n1 1 (1-1,1-1) arrange gtable[layout]\n2 2 (1-1,2-2) arrange gtable[layout]\n3 3 (2-2,1-1) arrange gtable[layout]"
  },
  {
    "objectID": "analysis/visDEgenesScore.html#session-info",
    "href": "analysis/visDEgenesScore.html#session-info",
    "title": "DE genes FRCs resting versus activated human LN",
    "section": "session info",
    "text": "session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] Matrix_1.6-5                scran_1.28.2                scater_1.28.0              \n [4] scuttle_1.10.3              SingleCellExperiment_1.22.0 SummarizedExperiment_1.30.2\n [7] Biobase_2.60.0              GenomicRanges_1.52.1        GenomeInfoDb_1.36.4        \n[10] IRanges_2.36.0              S4Vectors_0.40.1            BiocGenerics_0.48.0        \n[13] MatrixGenerics_1.12.3       matrixStats_1.2.0           pheatmap_1.0.12            \n[16] ggsci_3.0.1                 here_1.0.1                  runSeurat3_0.1.0           \n[19] ggpubr_0.6.0                lubridate_1.9.3             forcats_1.0.0              \n[22] stringr_1.5.1               readr_2.1.5                 tidyr_1.3.1                \n[25] tibble_3.2.1                tidyverse_2.0.0             Seurat_5.0.2               \n[28] SeuratObject_5.0.1          sp_2.1-3                    purrr_1.0.2                \n[31] ggplot2_3.5.0               reshape2_1.4.4              dplyr_1.1.4                \n\nloaded via a namespace (and not attached):\n  [1] RcppAnnoy_0.0.22          splines_4.3.0             later_1.3.2              \n  [4] bitops_1.0-7              polyclip_1.10-6           fastDummies_1.7.3        \n  [7] lifecycle_1.0.4           rstatix_0.7.2             edgeR_3.42.4             \n [10] rprojroot_2.0.4           globals_0.16.2            lattice_0.22-5           \n [13] MASS_7.3-60.0.1           backports_1.4.1           magrittr_2.0.3           \n [16] limma_3.56.2              plotly_4.10.4             rmarkdown_2.26           \n [19] yaml_2.3.8                metapod_1.8.0             httpuv_1.6.14            \n [22] sctransform_0.4.1         spam_2.10-0               spatstat.sparse_3.0-3    \n [25] reticulate_1.35.0         cowplot_1.1.3             pbapply_1.7-2            \n [28] RColorBrewer_1.1-3        abind_1.4-5               zlibbioc_1.46.0          \n [31] Rtsne_0.17                RCurl_1.98-1.14           GenomeInfoDbData_1.2.10  \n [34] ggrepel_0.9.5             irlba_2.3.5.1             listenv_0.9.1            \n [37] spatstat.utils_3.0-4      goftest_1.2-3             RSpectra_0.16-1          \n [40] dqrng_0.3.2               spatstat.random_3.2-3     fitdistrplus_1.1-11      \n [43] parallelly_1.37.1         DelayedMatrixStats_1.22.6 leiden_0.4.3.1           \n [46] codetools_0.2-19          DelayedArray_0.26.7       tidyselect_1.2.0         \n [49] farver_2.1.1              viridis_0.6.5             ScaledMatrix_1.8.1       \n [52] spatstat.explore_3.2-6    jsonlite_1.8.8            BiocNeighbors_1.18.0     \n [55] ellipsis_0.3.2            progressr_0.14.0          ggridges_0.5.6           \n [58] survival_3.5-8            tools_4.3.0               ica_1.0-3                \n [61] Rcpp_1.0.12               glue_1.7.0                gridExtra_2.3            \n [64] xfun_0.42                 withr_3.0.0               fastmap_1.1.1            \n [67] bluster_1.10.0            fansi_1.0.6               rsvd_1.0.5               \n [70] digest_0.6.34             timechange_0.3.0          R6_2.5.1                 \n [73] mime_0.12                 colorspace_2.1-0          scattermore_1.2          \n [76] tensor_1.5                spatstat.data_3.0-4       utf8_1.2.4               \n [79] generics_0.1.3            data.table_1.15.2         httr_1.4.7               \n [82] htmlwidgets_1.6.4         S4Arrays_1.0.6            uwot_0.1.16              \n [85] pkgconfig_2.0.3           gtable_0.3.4              lmtest_0.9-40            \n [88] XVector_0.40.0            htmltools_0.5.7           carData_3.0-5            \n [91] dotCall64_1.1-1           scales_1.3.0              png_0.1-8                \n [94] knitr_1.45                rstudioapi_0.15.0         tzdb_0.4.0               \n [97] nlme_3.1-164              zoo_1.8-12                KernSmooth_2.23-22       \n[100] vipor_0.4.7               parallel_4.3.0            miniUI_0.1.1.1           \n[103] pillar_1.9.0              grid_4.3.0                vctrs_0.6.5              \n[106] RANN_2.6.1                promises_1.2.1            BiocSingular_1.16.0      \n[109] car_3.1-2                 beachmat_2.16.0           xtable_1.8-4             \n[112] cluster_2.1.6             beeswarm_0.4.0            evaluate_0.23            \n[115] locfit_1.5-9.9            cli_3.6.2                 compiler_4.3.0           \n[118] rlang_1.1.3               crayon_1.5.2              future.apply_1.11.1      \n[121] ggsignif_0.6.4            labeling_0.4.3            ggbeeswarm_0.7.2         \n[124] plyr_1.8.9                stringi_1.8.3             BiocParallel_1.34.2      \n[127] viridisLite_0.4.2         deldir_2.0-4              munsell_0.5.0            \n[130] lazyeval_0.2.2            spatstat.geom_3.2-9       RcppHNSW_0.6.0           \n[133] hms_1.1.3                 patchwork_1.2.0           sparseMatrixStats_1.12.2 \n[136] future_1.33.1             statmod_1.5.0             shiny_1.8.0              \n[139] ROCR_1.0-11               igraph_2.0.2              broom_1.0.5              \n\ndate()\n\n[1] \"Wed Mar 13 19:52:40 2024\""
  },
  {
    "objectID": "analysis/subsetBEC.html#load-packages",
    "href": "analysis/subsetBEC.html#load-packages",
    "title": "Subset BECs human lymph nodes",
    "section": "Load packages",
    "text": "Load packages\n\n## load packages \nsuppressPackageStartupMessages({\n  library(dplyr)\n  library(reshape2)\n  library(ggplot2)\n  library(cowplot)\n  library(purrr)\n  library(Seurat)\n  library(tidyverse)\n  library(ggpubr)\n  library(runSeurat3)\n  library(here)\n  library(ggsci)\n  library(pheatmap)\n  library(scater)\n})"
  },
  {
    "objectID": "analysis/subsetBEC.html#load-seurat-object",
    "href": "analysis/subsetBEC.html#load-seurat-object",
    "title": "Subset BECs human lymph nodes",
    "section": "load seurat object",
    "text": "load seurat object\n\nbasedir <- here()\n\n## load seurat object from previous analysis\nseurat <- readRDS(file=paste0(basedir, \"/data/AllPatWithoutCM_LNFSCMerged_seurat.rds\"))\n\ncolPal <- c(pal_nejm()(7),pal_futurama()(12))[1:length(levels(seurat))]\nnames(colPal) <- levels(seurat)\n\n## all activated in one grp\nseurat$cond2 <- seurat$cond\nseurat$cond2[which(seurat$cond %in% c(\"chronic\", \"acute\"))] <- \"activated\"\n\ncolCond2 <- c(\"#6692a3\",\"#971c1c\")\nnames(colCond2) <- c(\"resting\", \"activated\")"
  },
  {
    "objectID": "analysis/subsetBEC.html#visualize-data",
    "href": "analysis/subsetBEC.html#visualize-data",
    "title": "Subset BECs human lymph nodes",
    "section": "visualize data",
    "text": "visualize data\n\nclustering\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPal)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\npatient\n\ncolPat <- c(pal_jco()(10),pal_futurama()(12))[1:length(unique(seurat$patient))]\nnames(colPat) <- unique(seurat$patient)\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\ncond2\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colCond2, group.by = \"cond2\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\ngrp\n\ncolGrp <- pal_uchicago()(length(unique(seurat$grp)))\nnames(colGrp) <- unique(seurat$grp)\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colGrp, group.by = \"grp\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\norigin\n\ncolOri <- pal_npg()(length(unique(seurat$origin)))\nnames(colOri) <- unique(seurat$origin)\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colOri, group.by = \"origin\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")"
  },
  {
    "objectID": "analysis/subsetBEC.html#subset-on-lec",
    "href": "analysis/subsetBEC.html#subset-on-lec",
    "title": "Subset BECs human lymph nodes",
    "section": "subset on LEC",
    "text": "subset on LEC\n\ndim(seurat)\n\n[1] 36098 61459\n\nseurat <- subset(seurat, grp %in% c(\"BEC\"))\ndim(seurat)\n\n[1] 36098 12379\n\n## reprocess\nres <- c(0.8,0.6,0.4,0.25)\n\nseurat <- NormalizeData(object = seurat)\nseurat <- FindVariableFeatures(object = seurat)\nseurat <- ScaleData(object = seurat, verbose = FALSE)\nseurat <- RunPCA(object = seurat, npcs = 30, verbose = FALSE)\nseurat <- RunTSNE(object = seurat, reduction = \"pca\", dims = 1:20)\nseurat <- RunUMAP(object = seurat, reduction = \"pca\", dims = 1:20)\nseurat <- FindNeighbors(object = seurat, reduction = \"pca\", \n                        dims = 1:20)\nfor (i in 1:length(res)) {\n    seurat <- FindClusters(object = seurat, resolution = res[i], \n                           random.seed = 1234)\n}\n\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 12379\nNumber of edges: 433943\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.8830\nNumber of communities: 15\nElapsed time: 1 seconds\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 12379\nNumber of edges: 433943\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.8993\nNumber of communities: 13\nElapsed time: 1 seconds\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 12379\nNumber of edges: 433943\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9177\nNumber of communities: 12\nElapsed time: 1 seconds\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 12379\nNumber of edges: 433943\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9337\nNumber of communities: 8\nElapsed time: 1 seconds"
  },
  {
    "objectID": "analysis/subsetBEC.html#visualize-data-1",
    "href": "analysis/subsetBEC.html#visualize-data-1",
    "title": "Subset BECs human lymph nodes",
    "section": "visualize data",
    "text": "visualize data\n\nclustering\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPal)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\npatient\n\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\",\n        shuffle = T)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\ncond2\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colCond2, group.by = \"cond2\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\ngrp\n\nDimPlot(seurat, reduction = \"umap\", cols=colGrp, group.by = \"grp\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\norigin\n\nDimPlot(seurat, reduction = \"umap\", cols=colOri, group.by = \"origin\",\n        shuffle = T)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")"
  },
  {
    "objectID": "analysis/subsetBEC.html#save-seurat-object",
    "href": "analysis/subsetBEC.html#save-seurat-object",
    "title": "Subset BECs human lymph nodes",
    "section": "save seurat object",
    "text": "save seurat object\n\nsaveRDS(seurat, file=paste0(basedir,\"/data/AllPatWithoutCM_BEConly_seurat.rds\"))"
  },
  {
    "objectID": "analysis/subsetBEC.html#integrate-data",
    "href": "analysis/subsetBEC.html#integrate-data",
    "title": "Subset BECs human lymph nodes",
    "section": "integrate data",
    "text": "integrate data\n\npatSel <- names(table(seurat$patient))[which(table(seurat$patient)>10)]\nseurat <- subset(seurat, patient %in% patSel)\ntable(seurat$patient)\n\n\nP_20200220 P_20210113 P_20220201 P_20220202     ucd010      ucd13      ucd14 \n      2463         85       2812       2711        617       1062       2627 \n\nIdents(seurat) <- seurat$patient\n\nseurat.list <- SplitObject(object = seurat, split.by = \"patient\")\nfor (i in 1:length(x = seurat.list)) {\n    seurat.list[[i]] <- NormalizeData(object = seurat.list[[i]],\n                                      verbose = FALSE)\n    seurat.list[[i]] <- FindVariableFeatures(object = seurat.list[[i]], \n        selection.method = \"vst\", nfeatures = 2000, verbose = FALSE)\n}\n\nseurat.anchors <- FindIntegrationAnchors(object.list = seurat.list, dims = 1:15)\nseurat.int <- IntegrateData(anchorset = seurat.anchors, dims = 1:15, \n                            k.weight = min(table(seurat$patient)))\nDefaultAssay(object = seurat.int) <- \"integrated\"\n\n# rerun seurat\nseurat.int <- ScaleData(object = seurat.int, verbose = FALSE,\n                        features = rownames(seurat.int))\nseurat.int <- RunPCA(object = seurat.int, npcs = 20, verbose = FALSE)\nseurat.int <- RunTSNE(object = seurat.int, reduction = \"pca\", dims = 1:20)\nseurat.int <- RunUMAP(object = seurat.int, reduction = \"pca\", dims = 1:20)\n\nseurat.int <- FindNeighbors(object = seurat.int, reduction = \"pca\", dims = 1:20)\nres <- c(0.6,0.8,0.4,0.25)\nfor(i in 1:length(res)){\n  seurat.int <- FindClusters(object = seurat.int, resolution = res[i],\n                             random.seed = 1234)\n}\n\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 12377\nNumber of edges: 464260\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.8576\nNumber of communities: 12\nElapsed time: 1 seconds\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 12377\nNumber of edges: 464260\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.8385\nNumber of communities: 15\nElapsed time: 1 seconds\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 12377\nNumber of edges: 464260\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.8819\nNumber of communities: 9\nElapsed time: 1 seconds\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 12377\nNumber of edges: 464260\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9059\nNumber of communities: 7\nElapsed time: 1 seconds"
  },
  {
    "objectID": "analysis/subsetBEC.html#remove-becfrc-cluster",
    "href": "analysis/subsetBEC.html#remove-becfrc-cluster",
    "title": "Subset BECs human lymph nodes",
    "section": "remove BEC/FRC cluster",
    "text": "remove BEC/FRC cluster\n\n## remove FRC cluster (based on CCL19, PDPN, COL1A1... expression) \n## described here: PMID 32732867\nseurat.int$intCluster <- seurat.int$integrated_snn_res.0.25\nseurat.int <- subset(seurat.int, intCluster %in% c(\"3\"), invert=T)\n\nDefaultAssay(object = seurat.int) <- \"integrated\"\n\n# rerun seurat\nseurat.int <- ScaleData(object = seurat.int, verbose = FALSE,\n                        features = rownames(seurat.int))\nseurat.int <- RunPCA(object = seurat.int, npcs = 20, verbose = FALSE)\nseurat.int <- RunTSNE(object = seurat.int, reduction = \"pca\", dims = 1:20)\nseurat.int <- RunUMAP(object = seurat.int, reduction = \"pca\", dims = 1:20)"
  },
  {
    "objectID": "analysis/subsetBEC.html#save-int-object",
    "href": "analysis/subsetBEC.html#save-int-object",
    "title": "Subset BECs human lymph nodes",
    "section": "save int object",
    "text": "save int object\n\nDefaultAssay(object = seurat.int) <- \"RNA\"\nIdents(seurat.int) <- seurat.int$intCluster\n\nsaveRDS(seurat.int,\n        file= paste0(basedir,\n                     \"/data/AllPatWithoutCM_BEConly_intOrig_seurat.rds\"))"
  },
  {
    "objectID": "analysis/subsetBEC.html#visualize-int-data",
    "href": "analysis/subsetBEC.html#visualize-int-data",
    "title": "Subset BECs human lymph nodes",
    "section": "visualize int data",
    "text": "visualize int data\n\nclustering\n\ncolPal <- c(pal_nejm()(8),pal_futurama()(12))[1:length(levels(seurat.int))]\nnames(colPal) <- levels(seurat.int)\n\nDimPlot(seurat.int, reduction = \"umap\", cols=colPal)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\npatient\n\n## visualize input data\nDimPlot(seurat.int, reduction = \"umap\", cols=colPat, group.by = \"patient\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\ncond\n\nDimPlot(seurat.int, reduction = \"umap\", cols=colCond2, group.by = \"cond2\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")"
  },
  {
    "objectID": "analysis/subsetBEC.html#session-info",
    "href": "analysis/subsetBEC.html#session-info",
    "title": "Subset BECs human lymph nodes",
    "section": "session info",
    "text": "session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] scater_1.28.0               scuttle_1.10.3              SingleCellExperiment_1.22.0\n [4] SummarizedExperiment_1.30.2 Biobase_2.60.0              GenomicRanges_1.52.1       \n [7] GenomeInfoDb_1.36.4         IRanges_2.36.0              S4Vectors_0.40.1           \n[10] BiocGenerics_0.48.0         MatrixGenerics_1.12.3       matrixStats_1.2.0          \n[13] pheatmap_1.0.12             ggsci_3.0.1                 here_1.0.1                 \n[16] runSeurat3_0.1.0            ggpubr_0.6.0                lubridate_1.9.3            \n[19] forcats_1.0.0               stringr_1.5.1               readr_2.1.5                \n[22] tidyr_1.3.1                 tibble_3.2.1                tidyverse_2.0.0            \n[25] Seurat_5.0.2                SeuratObject_5.0.1          sp_2.1-3                   \n[28] purrr_1.0.2                 cowplot_1.1.3               ggplot2_3.5.0              \n[31] reshape2_1.4.4              dplyr_1.1.4                \n\nloaded via a namespace (and not attached):\n  [1] RcppAnnoy_0.0.22          splines_4.3.0             later_1.3.2              \n  [4] bitops_1.0-7              polyclip_1.10-6           fastDummies_1.7.3        \n  [7] lifecycle_1.0.4           rstatix_0.7.2             rprojroot_2.0.4          \n [10] globals_0.16.2            lattice_0.22-5            MASS_7.3-60.0.1          \n [13] backports_1.4.1           magrittr_2.0.3            plotly_4.10.4            \n [16] rmarkdown_2.26            yaml_2.3.8                httpuv_1.6.14            \n [19] sctransform_0.4.1         spam_2.10-0               spatstat.sparse_3.0-3    \n [22] reticulate_1.35.0         pbapply_1.7-2             RColorBrewer_1.1-3       \n [25] abind_1.4-5               zlibbioc_1.46.0           Rtsne_0.17               \n [28] RCurl_1.98-1.14           GenomeInfoDbData_1.2.10   ggrepel_0.9.5            \n [31] irlba_2.3.5.1             listenv_0.9.1             spatstat.utils_3.0-4     \n [34] goftest_1.2-3             RSpectra_0.16-1           spatstat.random_3.2-3    \n [37] fitdistrplus_1.1-11       parallelly_1.37.1         DelayedMatrixStats_1.22.6\n [40] leiden_0.4.3.1            codetools_0.2-19          DelayedArray_0.26.7      \n [43] tidyselect_1.2.0          farver_2.1.1              viridis_0.6.5            \n [46] ScaledMatrix_1.8.1        spatstat.explore_3.2-6    jsonlite_1.8.8           \n [49] BiocNeighbors_1.18.0      ellipsis_0.3.2            progressr_0.14.0         \n [52] ggridges_0.5.6            survival_3.5-8            tools_4.3.0              \n [55] ica_1.0-3                 Rcpp_1.0.12               glue_1.7.0               \n [58] gridExtra_2.3             xfun_0.42                 withr_3.0.0              \n [61] fastmap_1.1.1             fansi_1.0.6               rsvd_1.0.5               \n [64] digest_0.6.34             timechange_0.3.0          R6_2.5.1                 \n [67] mime_0.12                 colorspace_2.1-0          scattermore_1.2          \n [70] tensor_1.5                spatstat.data_3.0-4       utf8_1.2.4               \n [73] generics_0.1.3            data.table_1.15.2         httr_1.4.7               \n [76] htmlwidgets_1.6.4         S4Arrays_1.0.6            uwot_0.1.16              \n [79] pkgconfig_2.0.3           gtable_0.3.4              lmtest_0.9-40            \n [82] XVector_0.40.0            htmltools_0.5.7           carData_3.0-5            \n [85] dotCall64_1.1-1           scales_1.3.0              png_0.1-8                \n [88] knitr_1.45                rstudioapi_0.15.0         tzdb_0.4.0               \n [91] nlme_3.1-164              zoo_1.8-12                KernSmooth_2.23-22       \n [94] vipor_0.4.7               parallel_4.3.0            miniUI_0.1.1.1           \n [97] pillar_1.9.0              grid_4.3.0                vctrs_0.6.5              \n[100] RANN_2.6.1                promises_1.2.1            BiocSingular_1.16.0      \n[103] car_3.1-2                 beachmat_2.16.0           xtable_1.8-4             \n[106] cluster_2.1.6             beeswarm_0.4.0            evaluate_0.23            \n[109] cli_3.6.2                 compiler_4.3.0            rlang_1.1.3              \n[112] crayon_1.5.2              future.apply_1.11.1       ggsignif_0.6.4           \n[115] labeling_0.4.3            ggbeeswarm_0.7.2          plyr_1.8.9               \n[118] stringi_1.8.3             BiocParallel_1.34.2       viridisLite_0.4.2        \n[121] deldir_2.0-4              munsell_0.5.0             lazyeval_0.2.2           \n[124] spatstat.geom_3.2-9       Matrix_1.6-5              RcppHNSW_0.6.0           \n[127] hms_1.1.3                 patchwork_1.2.0           sparseMatrixStats_1.12.2 \n[130] future_1.33.1             shiny_1.8.0               ROCR_1.0-11              \n[133] igraph_2.0.2              broom_1.0.5              \n\ndate()\n\n[1] \"Wed Mar 13 20:04:26 2024\""
  },
  {
    "objectID": "analysis/visMarkerGenes_woCMResting.html#load-packages",
    "href": "analysis/visMarkerGenes_woCMResting.html#load-packages",
    "title": "visualize marker human LN",
    "section": "Load packages",
    "text": "Load packages\n\n## load packages \nsuppressPackageStartupMessages({\n  library(dplyr)\n  library(reshape2)\n  library(ggplot2)\n  library(cowplot)\n  library(purrr)\n  library(Seurat)\n  library(tidyverse)\n  library(ggpubr)\n  library(runSeurat3)\n  library(here)\n  library(ggsci)\n  library(pheatmap)\n  library(scater)\n})"
  },
  {
    "objectID": "analysis/visMarkerGenes_woCMResting.html#load-seurat-object",
    "href": "analysis/visMarkerGenes_woCMResting.html#load-seurat-object",
    "title": "visualize marker human LN",
    "section": "load seurat object",
    "text": "load seurat object\n\nbasedir <- here()\n\n## load seurat object from previous analysis\nseurat <- readRDS(file=paste0(basedir,\n                              \"/data/AllPatWithoutCM_LNFSCMerged_seurat.rds\"))\nseurat <- subset(seurat, cond==\"resting\")\n## set col palettes\ncolPal <- c(pal_nejm()(7),pal_futurama()(12))[1:length(levels(seurat))]\ncolPal <- c(\"#c29f2d\", \"#cb6021\", \"#893149\", \"#524b86\", \"#1f84aa\",\n            \"#d38c6e\",\"#50a565\",\"#242a8b\",\"#297563\",\"#667c63\",\"#c94141\")\nnames(colPal) <- levels(seurat)\ncolPat <- c(pal_nejm()(7),pal_futurama()(12))[1:length(unique(seurat$patient))]\nnames(colPat) <- unique(seurat$patient)\ncolCond <- c(\"#6692a3\",\"#971c1c\",\"#d17d67\")\nnames(colCond) <- unique(seurat$cond)\ncolGrp <- pal_uchicago()(length(unique(seurat$grp)))\nnames(colGrp) <- unique(seurat$grp)\ncolOri <- pal_npg()(length(unique(seurat$origin)))\nnames(colOri) <- unique(seurat$origin)"
  },
  {
    "objectID": "analysis/visMarkerGenes_woCMResting.html#visualize-data",
    "href": "analysis/visMarkerGenes_woCMResting.html#visualize-data",
    "title": "visualize marker human LN",
    "section": "visualize data",
    "text": "visualize data\n\nclustering\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPal)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colPal, pt.size=0.5)+\n  theme_void()\n\n\n\n\n\n\npatient\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\",\n        pt.size=0.5, shuffle = T)+\n  theme_void()\n\n\n\n\n\n\ngrp\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colGrp, group.by = \"grp\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")"
  },
  {
    "objectID": "analysis/visMarkerGenes_woCMResting.html#vis-selected-stroma-marker",
    "href": "analysis/visMarkerGenes_woCMResting.html#vis-selected-stroma-marker",
    "title": "visualize marker human LN",
    "section": "vis selected stroma marker",
    "text": "vis selected stroma marker\n\ngenes <- data.frame(gene=rownames(seurat)) %>% \n    mutate(geneID=gsub(\"^.*\\\\.\", \"\", gene)) \n\nselGenesAll <- read_tsv(file = paste0(basedir,\n                                      \"/data/overallStromaMarkerRest.txt\")) %>% \n  left_join(., genes, by = \"geneID\")\nselGenesAll <- selGenesAll %>% filter(!gene == \"ENSG00000232995.RGS5\")\n\nseurat$RNA_snn_res.0.25 <- factor(seurat$RNA_snn_res.0.25,\n                                  levels = c(\"1\", \"8\", \"4\", \"0\", \"2\", \"5\", \"11\",\n                                             \"7\", \"9\", \"3\", \"6\"))\n\nIdents(seurat) <- seurat$RNA_snn_res.0.25\npOut <- avgHeatmap(seurat = seurat, selGenes = selGenesAll,\n                  colVecIdent = colPal, \n                  ordVec=levels(seurat),\n                  gapVecR=NULL, gapVecC=NULL,cc=T,\n                  cr=F, condCol=F)\n\n\n\n\n\nDotplot\n\nDotPlot(seurat, assay=\"RNA\", features = selGenesAll$gene, scale =T,\n        cluster.idents = T) +\n  scale_color_viridis_c() +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  scale_x_discrete(breaks=selGenesAll$gene, labels=selGenesAll$geneID) +\n  xlab(\"\") + ylab(\"\")\n\n\n\nDotPlot(seurat, assay=\"RNA\", features = selGenesAll$gene, scale =F,\n        cluster.idents = T) +\n  scale_color_viridis_c() +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  scale_x_discrete(breaks=selGenesAll$gene, labels=selGenesAll$geneID) +\n  xlab(\"\") + ylab(\"\")\n\n\n\nselGenesAll <- selGenesAll %>% filter(!geneID == \"CCL21\")\n\nDotPlot(seurat, assay=\"RNA\", features = selGenesAll$gene, scale =F,\n        cluster.idents = T) +\n  scale_color_gradientn(colors=colorRampPalette(c(viridis::viridis(12),\"#FDE725FF\"))(50)) +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  scale_x_discrete(breaks=selGenesAll$gene, labels=selGenesAll$geneID) +\n  xlab(\"\") + ylab(\"\")"
  },
  {
    "objectID": "analysis/visMarkerGenes_woCMResting.html#session-info",
    "href": "analysis/visMarkerGenes_woCMResting.html#session-info",
    "title": "visualize marker human LN",
    "section": "session info",
    "text": "session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] scater_1.28.0               scuttle_1.10.3              SingleCellExperiment_1.22.0\n [4] SummarizedExperiment_1.30.2 Biobase_2.60.0              GenomicRanges_1.52.1       \n [7] GenomeInfoDb_1.36.4         IRanges_2.36.0              S4Vectors_0.40.1           \n[10] BiocGenerics_0.48.0         MatrixGenerics_1.12.3       matrixStats_1.2.0          \n[13] pheatmap_1.0.12             ggsci_3.0.1                 here_1.0.1                 \n[16] runSeurat3_0.1.0            ggpubr_0.6.0                lubridate_1.9.3            \n[19] forcats_1.0.0               stringr_1.5.1               readr_2.1.5                \n[22] tidyr_1.3.1                 tibble_3.2.1                tidyverse_2.0.0            \n[25] Seurat_5.0.2                SeuratObject_5.0.1          sp_2.1-3                   \n[28] purrr_1.0.2                 cowplot_1.1.3               ggplot2_3.5.0              \n[31] reshape2_1.4.4              dplyr_1.1.4                \n\nloaded via a namespace (and not attached):\n  [1] RcppAnnoy_0.0.22          splines_4.3.0             later_1.3.2              \n  [4] bitops_1.0-7              polyclip_1.10-6           fastDummies_1.7.3        \n  [7] lifecycle_1.0.4           rstatix_0.7.2             rprojroot_2.0.4          \n [10] vroom_1.6.5               globals_0.16.2            lattice_0.22-5           \n [13] MASS_7.3-60.0.1           backports_1.4.1           magrittr_2.0.3           \n [16] plotly_4.10.4             rmarkdown_2.26            yaml_2.3.8               \n [19] httpuv_1.6.14             sctransform_0.4.1         spam_2.10-0              \n [22] spatstat.sparse_3.0-3     reticulate_1.35.0         pbapply_1.7-2            \n [25] RColorBrewer_1.1-3        abind_1.4-5               zlibbioc_1.46.0          \n [28] Rtsne_0.17                RCurl_1.98-1.14           GenomeInfoDbData_1.2.10  \n [31] ggrepel_0.9.5             irlba_2.3.5.1             listenv_0.9.1            \n [34] spatstat.utils_3.0-4      goftest_1.2-3             RSpectra_0.16-1          \n [37] spatstat.random_3.2-3     fitdistrplus_1.1-11       parallelly_1.37.1        \n [40] DelayedMatrixStats_1.22.6 leiden_0.4.3.1            codetools_0.2-19         \n [43] DelayedArray_0.26.7       tidyselect_1.2.0          farver_2.1.1             \n [46] viridis_0.6.5             ScaledMatrix_1.8.1        spatstat.explore_3.2-6   \n [49] jsonlite_1.8.8            BiocNeighbors_1.18.0      ellipsis_0.3.2           \n [52] progressr_0.14.0          ggridges_0.5.6            survival_3.5-8           \n [55] tools_4.3.0               ica_1.0-3                 Rcpp_1.0.12              \n [58] glue_1.7.0                gridExtra_2.3             xfun_0.42                \n [61] withr_3.0.0               fastmap_1.1.1             fansi_1.0.6              \n [64] rsvd_1.0.5                digest_0.6.34             timechange_0.3.0         \n [67] R6_2.5.1                  mime_0.12                 colorspace_2.1-0         \n [70] scattermore_1.2           tensor_1.5                spatstat.data_3.0-4      \n [73] utf8_1.2.4                generics_0.1.3            data.table_1.15.2        \n [76] httr_1.4.7                htmlwidgets_1.6.4         S4Arrays_1.0.6           \n [79] uwot_0.1.16               pkgconfig_2.0.3           gtable_0.3.4             \n [82] lmtest_0.9-40             XVector_0.40.0            htmltools_0.5.7          \n [85] carData_3.0-5             dotCall64_1.1-1           scales_1.3.0             \n [88] png_0.1-8                 knitr_1.45                rstudioapi_0.15.0        \n [91] tzdb_0.4.0                nlme_3.1-164              zoo_1.8-12               \n [94] KernSmooth_2.23-22        vipor_0.4.7               parallel_4.3.0           \n [97] miniUI_0.1.1.1            pillar_1.9.0              grid_4.3.0               \n[100] vctrs_0.6.5               RANN_2.6.1                promises_1.2.1           \n[103] BiocSingular_1.16.0       car_3.1-2                 beachmat_2.16.0          \n[106] xtable_1.8-4              cluster_2.1.6             beeswarm_0.4.0           \n[109] evaluate_0.23             cli_3.6.2                 compiler_4.3.0           \n[112] rlang_1.1.3               crayon_1.5.2              future.apply_1.11.1      \n[115] ggsignif_0.6.4            labeling_0.4.3            ggbeeswarm_0.7.2         \n[118] plyr_1.8.9                stringi_1.8.3             BiocParallel_1.34.2      \n[121] viridisLite_0.4.2         deldir_2.0-4              munsell_0.5.0            \n[124] lazyeval_0.2.2            spatstat.geom_3.2-9       Matrix_1.6-5             \n[127] RcppHNSW_0.6.0            hms_1.1.3                 patchwork_1.2.0          \n[130] bit64_4.0.5               sparseMatrixStats_1.12.2  future_1.33.1            \n[133] shiny_1.8.0               ROCR_1.0-11               igraph_2.0.2             \n[136] broom_1.0.5               bit_4.0.5                \n\ndate()\n\n[1] \"Wed Mar 13 20:05:05 2024\""
  },
  {
    "objectID": "analysis/QCplusNorm_SThumanLN.html",
    "href": "analysis/QCplusNorm_SThumanLN.html",
    "title": "merge ST data human LN - batch 1",
    "section": "",
    "text": "Load and merge spe objects\n\nbasedir <- here()\nmetaDat <- read_tsv(paste0(basedir, \"/data/ST/metadata.txt\"), col_names = T)\n\nassignSamples <- function(smpNam, basedirSmp){\n  smpNamFull <- list.files(path = paste0(basedirSmp, \"/data/ST/\"),\n                 pattern = paste0(smpNam, \".*_spe.rds\"))\n  speSmp <- readRDS(paste0(basedirSmp, \"/data/ST/\", smpNamFull))\n  return(speSmp)\n}\n\n####################################################################\n\nfor(i in 1:length(metaDat$Sample)){\n  speX <- assignSamples(smpNam = metaDat$Sample[i],\n                           basedirSmp = basedir)\n  if(exists(\"spe\")){\n    spe <- cbind(spe, speX)\n  }else{\n    spe <- speX\n  }\n}\n\nremove(speX)\n\n\n\nExamine samples before removal of low quality spots\n\n## before QC\ntable(spe@colData$sample_id)\n\n\n318981_1-1_20230531_Hu_pat58_LN_squA 318981_2-2_20230531_Hu_pat56_LN_squB \n                                4992                                 4992 \n318981_3-3_20230531_Hu_pat55_LN_squC 318981_4-4_20230531_Hu_pat55_LN_squD \n                                4992                                 4992 \n\ndim(spe)\n\n[1] 60666 19968\n\nplotSpots(spe) + facet_grid(~ sample_id)\n\n\n\n# subset to keep only spots over tissue\nspe <- spe[, colData(spe)$in_tissue == 1]\ndim(spe)\n\n[1] 60666  5153\n\ntable(spe@colData$sample_id)\n\n\n318981_1-1_20230531_Hu_pat58_LN_squA 318981_2-2_20230531_Hu_pat56_LN_squB \n                                 747                                 2194 \n318981_3-3_20230531_Hu_pat55_LN_squC 318981_4-4_20230531_Hu_pat55_LN_squD \n                                1019                                 1193 \n\nplotSpots(spe) + facet_grid(~ sample_id)\n\n\n\n\n\n\nrun QC\n\n# identify mitochondrial genes\nis_mito <- grepl(\"(^MT-)|(^mt-)\", rowData(spe)$symbol)\ntable(is_mito)\n\nis_mito\nFALSE  TRUE \n60629    37 \n\nrowData(spe)$symbol[is_mito]\n\n [1] \"MT-TF\"   \"MT-RNR1\" \"MT-TV\"   \"MT-RNR2\" \"MT-TL1\"  \"MT-ND1\"  \"MT-TI\"  \n [8] \"MT-TQ\"   \"MT-TM\"   \"MT-ND2\"  \"MT-TW\"   \"MT-TA\"   \"MT-TN\"   \"MT-TC\"  \n[15] \"MT-TY\"   \"MT-CO1\"  \"MT-TS1\"  \"MT-TD\"   \"MT-CO2\"  \"MT-TK\"   \"MT-ATP8\"\n[22] \"MT-ATP6\" \"MT-CO3\"  \"MT-TG\"   \"MT-ND3\"  \"MT-TR\"   \"MT-ND4L\" \"MT-ND4\" \n[29] \"MT-TH\"   \"MT-TS2\"  \"MT-TL2\"  \"MT-ND5\"  \"MT-ND6\"  \"MT-TE\"   \"MT-CYB\" \n[36] \"MT-TT\"   \"MT-TP\"  \n\n# run QC parameters per sample\nspeList <- lapply(unique(colData(spe)$sample_id), function(sid){\n  speSub <- spe[, which(colData(spe)$sample_id == sid)]\n  \n  speSub <- addPerCellQC(speSub, subsets = list(mito = is_mito))\n  hist(colData(speSub)$sum, breaks = 50,\n       main = paste0(\"sum - \", sid), xlab = \"sum\")\n  hist(colData(speSub)$detected, breaks = 50,\n       main = paste0(\"detected - \", sid), xlab = \"detected\")\n  hist(colData(speSub)$subsets_mito_percent, breaks = 50,\n       main = paste0(\"subsets_mito_percent - \", sid),\n       xlab = \"subsets_mito_percent\")\n  \n  ## remove spots with high deviation from median\n  speSub@colData$total_counts_drop <- isOutlier(speSub@colData$sum, nmads = 5,\n                                     type = \"both\", log = TRUE)\n  speSub@colData$total_features_drop <- isOutlier(speSub@colData$detected,\n                                                  nmads = 5, type = \"both\",\n                                                  log = TRUE)\n  speSub@colData$mito_drop <- isOutlier(speSub@colData$subsets_mito_percent,\n                                        nmads = 10, type = \"higher\",\n                                        log = FALSE)\n  speSub@colData$mito_drop <- FALSE\n  speSub <- speSub\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## vis spots with low quality\nlapply(speList, function(speSub){\n  p <- plotQC(speSub, type = \"spots\", \n       discard = \"total_counts_drop\") +\n    ggtitle(speSub@colData$sample_id)\n  p\n})\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\nlapply(speList, function(speSub){\n  p <- plotQC(speSub, type = \"spots\", \n       discard = \"total_features_drop\") +\n    ggtitle(speSub@colData$sample_id)\n  p\n})\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\nlapply(speList, function(speSub){\n  p <- plotQC(speSub, type = \"spots\", \n       discard = \"mito_drop\") +\n    ggtitle(speSub@colData$sample_id)\n  p\n})\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\n## cnt spots with low quality\nlapply(speList, function(speSub){\n  table(speSub@colData$total_counts_drop)\n})\n\n[[1]]\n\nFALSE \n  747 \n\n[[2]]\n\nFALSE  TRUE \n 2192     2 \n\n[[3]]\n\nFALSE  TRUE \n 1015     4 \n\n[[4]]\n\nFALSE  TRUE \n 1191     2 \n\nlapply(speList, function(speSub){\n  table(speSub@colData$total_features_drop)\n})\n\n[[1]]\n\nFALSE \n  747 \n\n[[2]]\n\nFALSE  TRUE \n 2188     6 \n\n[[3]]\n\nFALSE  TRUE \n 1013     6 \n\n[[4]]\n\nFALSE  TRUE \n 1186     7 \n\nlapply(speList, function(speSub){\n  table(speSub@colData$mito_drop)\n})\n\n[[1]]\n\nFALSE \n  747 \n\n[[2]]\n\nFALSE \n 2194 \n\n[[3]]\n\nFALSE \n 1019 \n\n[[4]]\n\nFALSE \n 1193 \n\n## remove plots with low quality\nspeList <- lapply(speList, function(speSub){\n  speSub <- speSub[, !(speSub@colData$total_counts_drop |\n                         speSub@colData$total_features_drop |\n                         speSub@colData$mito_drop)]\n  sid <- unique(colData(speSub)$sample_id)\n  ## after QC\n  hist(colData(speSub)$sum, breaks = 50,\n       main = paste0(\"sum after QC - \", sid), xlab = \"sum\")\n  hist(colData(speSub)$detected, breaks = 50,\n       main = paste0(\"detected after QC - \", sid), xlab = \"detected\")\n  hist(colData(speSub)$subsets_mito_percent, breaks = 50,\n       main = paste0(\"subsets_mito_percent after QC - \", sid),\n       xlab = \"subsets_mito_percent\")\n  speSub <- speSub\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnames(speList) <- unique(colData(spe)$sample_id)\n\n\n\nExamine samples after removal of low quality spots\n\n## vis spots after QC\nlapply(speList, function(speSub){\n  p <- plotSpots(speSub) +\n    ggtitle(speSub@colData$sample_id)\n  p\n\n})\n\n$`318981_1-1_20230531_Hu_pat58_LN_squA`\n\n\n\n\n\n\n$`318981_2-2_20230531_Hu_pat56_LN_squB`\n\n\n\n\n\n\n$`318981_3-3_20230531_Hu_pat55_LN_squC`\n\n\n\n\n\n\n$`318981_4-4_20230531_Hu_pat55_LN_squD`\n\n\n\n\n## cnt spots after QC\nlapply(speList, function(speSub){\n  dim(speSub)\n})\n\n$`318981_1-1_20230531_Hu_pat58_LN_squA`\n[1] 60666   747\n\n$`318981_2-2_20230531_Hu_pat56_LN_squB`\n[1] 60666  2188\n\n$`318981_3-3_20230531_Hu_pat55_LN_squC`\n[1] 60666  1013\n\n$`318981_4-4_20230531_Hu_pat55_LN_squD`\n[1] 60666  1186\n\n\n\n\nNormalization\n\nspeList <- lapply(speList, function(speSub){\n  speSub <- computeLibraryFactors(speSub)\n  summary(sizeFactors(speSub))\n  sid <- unique(colData(speSub)$sample_id)\n  hist(sizeFactors(speSub), breaks = 20, main = sid)\n  speSub <- logNormCounts(speSub)\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFeature selection\n\nhvgList <- lapply(speList, function(speSub){\n  # fit mean-variance relationship\n  dec <- modelGeneVar(speSub)\n\n  # visualize mean-variance relationship\n  fit <- metadata(dec)\n  plot(fit$mean, fit$var, \n     xlab = \"mean of log-expression\", ylab = \"variance of log-expression\")\n  curve(fit$trend(x), col = \"dodgerblue\", add = TRUE, lwd = 2)\n  top_hvgs <- getTopHVGs(dec, prop = 0.1)\n})\n\n\n\n\n\n\n\n\n\n\n\n\nnames(hvgList) <- names(speList)\nlengths(hvgList)\n\n318981_1-1_20230531_Hu_pat58_LN_squA 318981_2-2_20230531_Hu_pat56_LN_squB \n                                1114                                 1779 \n318981_3-3_20230531_Hu_pat55_LN_squC 318981_4-4_20230531_Hu_pat55_LN_squD \n                                1457                                 1454 \n\n\n\n\nDimensionality reduction\n\nspeList <- lapply(speList, function(speSub){\n  sid <- unique(colData(speSub)$sample_id)\n  top_hvgs <- hvgList[[sid]]\n  speSub <- runPCA(speSub, subset_row = top_hvgs)\n  speSub <- runUMAP(speSub, dimred = \"PCA\")\n  colnames(reducedDim(speSub, \"UMAP\")) <- paste0(\"UMAP\", 1:2)\n  speSub <- speSub\n})\n\nlapply(speList, function(speSub){\n  sid <- unique(colData(speSub)$sample_id)\n  plotDimRed(speSub, type = \"PCA\") + \n    ggtitle(sid)\n})\n\n$`318981_1-1_20230531_Hu_pat58_LN_squA`\n\n\n\n\n\n\n$`318981_2-2_20230531_Hu_pat56_LN_squB`\n\n\n\n\n\n\n$`318981_3-3_20230531_Hu_pat55_LN_squC`\n\n\n\n\n\n\n$`318981_4-4_20230531_Hu_pat55_LN_squD`\n\n\n\n\nlapply(speList, function(speSub){\n  sid <- unique(colData(speSub)$sample_id)\n  plotDimRed(speSub, type = \"UMAP\") + \n    ggtitle(sid)\n})\n\n$`318981_1-1_20230531_Hu_pat58_LN_squA`\n\n\n\n\n\n\n$`318981_2-2_20230531_Hu_pat56_LN_squB`\n\n\n\n\n\n\n$`318981_3-3_20230531_Hu_pat55_LN_squC`\n\n\n\n\n\n\n$`318981_4-4_20230531_Hu_pat55_LN_squD`\n\n\n\n\n\n\n\nclustering\n\nspeList <- lapply(speList, function(speSub){\n  # graph-based clustering\n  k <- 15\n  g <- buildSNNGraph(speSub, k = k, use.dimred = \"PCA\")\n  g_walk <- igraph::cluster_walktrap(g)\n  clus <- g_walk$membership\n  table(clus)\n  colLabels(speSub) <- factor(clus)\n  speSub <- speSub\n})\n\ncolPal <- c(\"#F0027F\", \"#377EB8\", \"#4DAF4A\", \"#984EA3\", \"#FFD700\", \"#FF7F00\",\n            \"#1A1A1A\", \"#666666\", pal_futurama()(10))\nlapply(speList, function(speSub){\n  sid <- unique(colData(speSub)$sample_id)\n  plotSpots(speSub, annotate = \"label\", \n          palette = colPal) + \n    ggtitle(sid)\n})\n\n$`318981_1-1_20230531_Hu_pat58_LN_squA`\n\n\n\n\n\n\n$`318981_2-2_20230531_Hu_pat56_LN_squB`\n\n\n\n\n\n\n$`318981_3-3_20230531_Hu_pat55_LN_squC`\n\n\n\n\n\n\n$`318981_4-4_20230531_Hu_pat55_LN_squD`\n\n\n\n\nlapply(speList, function(speSub){\n  sid <- unique(colData(speSub)$sample_id)\n  plotDimRed(speSub, type = \"UMAP\", \n           annotate = \"label\", palette = colPal) + \n    ggtitle(sid)\n})\n\n$`318981_1-1_20230531_Hu_pat58_LN_squA`\n\n\n\n\n\n\n$`318981_2-2_20230531_Hu_pat56_LN_squB`\n\n\n\n\n\n\n$`318981_3-3_20230531_Hu_pat55_LN_squC`\n\n\n\n\n\n\n$`318981_4-4_20230531_Hu_pat55_LN_squD`\n\n\n\n\nlapply(speList, function(speSub){\n  sid <- unique(colData(speSub)$sample_id)\n  plotDimRed(speSub, type = \"PCA\", \n           annotate = \"label\", palette = colPal) + \n    ggtitle(sid)\n})\n\n$`318981_1-1_20230531_Hu_pat58_LN_squA`\n\n\n\n\n\n\n$`318981_2-2_20230531_Hu_pat56_LN_squB`\n\n\n\n\n\n\n$`318981_3-3_20230531_Hu_pat55_LN_squC`\n\n\n\n\n\n\n$`318981_4-4_20230531_Hu_pat55_LN_squD`\n\n\n\n\n\n\n\nMarker genes\n\nmarkerList <- lapply(speList, function(speSub){\n  rownames(speSub) <- rowData(speSub)$symbol\n  markers <- findMarkers(speSub, test = \"binom\", direction = \"up\")\n})\n\nnames(markerList) <- names(speList)\n\n\n\nSave data\n\nsaveRDS(speList, file = paste0(basedir, \"/data/speAllLN.rds\"))\nsaveRDS(markerList, file = paste0(basedir, \"/data/markerAllLN.rds\"))\n\n\n\nsession info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] Matrix_1.6-5                pheatmap_1.0.12            \n [3] ggsci_3.0.1                 ggpubr_0.6.0               \n [5] scran_1.28.2                scater_1.28.0              \n [7] scuttle_1.10.3              ggspavis_1.6.0             \n [9] here_1.0.1                  SpatialExperiment_1.10.0   \n[11] SingleCellExperiment_1.22.0 SummarizedExperiment_1.30.2\n[13] Biobase_2.60.0              GenomicRanges_1.52.1       \n[15] GenomeInfoDb_1.36.4         IRanges_2.36.0             \n[17] S4Vectors_0.40.1            BiocGenerics_0.48.0        \n[19] MatrixGenerics_1.12.3       matrixStats_1.2.0          \n[21] lubridate_1.9.3             forcats_1.0.0              \n[23] stringr_1.5.1               dplyr_1.1.4                \n[25] purrr_1.0.2                 readr_2.1.5                \n[27] tidyr_1.3.1                 tibble_3.2.1               \n[29] ggplot2_3.5.0               tidyverse_2.0.0            \n\nloaded via a namespace (and not attached):\n  [1] RColorBrewer_1.1-3        rstudioapi_0.15.0        \n  [3] jsonlite_1.8.8            magrittr_2.0.3           \n  [5] ggbeeswarm_0.7.2          magick_2.8.3             \n  [7] farver_2.1.1              rmarkdown_2.26           \n  [9] zlibbioc_1.46.0           vctrs_0.6.5              \n [11] DelayedMatrixStats_1.22.6 RCurl_1.98-1.14          \n [13] rstatix_0.7.2             htmltools_0.5.7          \n [15] S4Arrays_1.0.6            BiocNeighbors_1.18.0     \n [17] broom_1.0.5               Rhdf5lib_1.22.1          \n [19] rhdf5_2.44.0              htmlwidgets_1.6.4        \n [21] igraph_2.0.2              lifecycle_1.0.4          \n [23] ggside_0.3.1              pkgconfig_2.0.3          \n [25] rsvd_1.0.5                R6_2.5.1                 \n [27] fastmap_1.1.1             GenomeInfoDbData_1.2.10  \n [29] digest_0.6.34             colorspace_2.1-0         \n [31] rprojroot_2.0.4           dqrng_0.3.2              \n [33] irlba_2.3.5.1             beachmat_2.16.0          \n [35] labeling_0.4.3            fansi_1.0.6              \n [37] timechange_0.3.0          abind_1.4-5              \n [39] compiler_4.3.0            bit64_4.0.5              \n [41] withr_3.0.0               backports_1.4.1          \n [43] BiocParallel_1.34.2       carData_3.0-5            \n [45] viridis_0.6.5             HDF5Array_1.28.1         \n [47] R.utils_2.12.3            ggsignif_0.6.4           \n [49] DelayedArray_0.26.7       rjson_0.2.21             \n [51] bluster_1.10.0            tools_4.3.0              \n [53] vipor_0.4.7               beeswarm_0.4.0           \n [55] R.oo_1.26.0               glue_1.7.0               \n [57] rhdf5filters_1.12.1       grid_4.3.0               \n [59] cluster_2.1.6             generics_0.1.3           \n [61] gtable_0.3.4              tzdb_0.4.0               \n [63] R.methodsS3_1.8.2         hms_1.1.3                \n [65] BiocSingular_1.16.0       ScaledMatrix_1.8.1       \n [67] metapod_1.8.0             car_3.1-2                \n [69] utf8_1.2.4                XVector_0.40.0           \n [71] ggrepel_0.9.5             pillar_1.9.0             \n [73] vroom_1.6.5               limma_3.56.2             \n [75] lattice_0.22-5            FNN_1.1.4                \n [77] bit_4.0.5                 tidyselect_1.2.0         \n [79] locfit_1.5-9.9            knitr_1.45               \n [81] gridExtra_2.3             edgeR_3.42.4             \n [83] xfun_0.42                 statmod_1.5.0            \n [85] DropletUtils_1.20.0       stringi_1.8.3            \n [87] yaml_2.3.8                evaluate_0.23            \n [89] codetools_0.2-19          cli_3.6.2                \n [91] uwot_0.1.16               munsell_0.5.0            \n [93] Rcpp_1.0.12               parallel_4.3.0           \n [95] sparseMatrixStats_1.12.2  bitops_1.0-7             \n [97] viridisLite_0.4.2         scales_1.3.0             \n [99] crayon_1.5.2              rlang_1.1.3"
  },
  {
    "objectID": "analysis/mergeImmCells.html",
    "href": "analysis/mergeImmCells.html",
    "title": "Merge human LN imm cells",
    "section": "",
    "text": "suppressPackageStartupMessages({\n  library(tidyverse)\n  library(Seurat)\n  library(magrittr)\n  library(dplyr)\n  library(purrr)\n  library(ggplot2)\n  library(here)\n  library(runSeurat3)\n  library(ggsci)\n})"
  },
  {
    "objectID": "analysis/mergeImmCells.html#set-dir",
    "href": "analysis/mergeImmCells.html#set-dir",
    "title": "Merge human LN imm cells",
    "section": "set dir",
    "text": "set dir\n\nbasedir <- here()\nmetaDat <- read_tsv(paste0(basedir, \"/data/metadataImm.txt\"), col_names = T)"
  },
  {
    "objectID": "analysis/mergeImmCells.html#load-and-assign-samples",
    "href": "analysis/mergeImmCells.html#load-and-assign-samples",
    "title": "Merge human LN imm cells",
    "section": "load and assign samples",
    "text": "load and assign samples\n\nassignSamples <- function(smpNam, basedirSmp, smpPat, smpGrp, smpOri,\n                          smpSort){\n  smpNamFull <- list.files(path = paste0(basedirSmp, \"/data/immune/\"),\n                 pattern = paste0(smpNam, \".*_seurat.rds\"))\n  seuratSmp <- readRDS(paste0(basedirSmp, \"/data/immune/\", smpNamFull))\n  seuratSmp$patient <- smpPat\n  seuratSmp$cond <- smpGrp\n  seuratSmp$origin <- smpOri\n  seuratSmp$sort <- smpSort\n  return(seuratSmp)\n}\n\n\n####################################################################\n\nfor(i in 1:length(metaDat$dataset)){\n  seuratX <- assignSamples(smpNam = metaDat$dataset[i],\n                           basedirSmp = basedir,\n                           smpPat =  metaDat$patient[i],\n                           smpGrp = metaDat$cond[i],\n                           smpOri = metaDat$origin[i],\n                           smpSort = metaDat$sort[i])\n  if(exists(\"seurat\")){\n    seurat <- merge(x = seurat, y = seuratX, project = \"LymphNode_IMM\")\n  }else{\n    seurat <- seuratX\n  }\n}\n\nremove(seuratX)"
  },
  {
    "objectID": "analysis/mergeImmCells.html#filter-cells",
    "href": "analysis/mergeImmCells.html#filter-cells",
    "title": "Merge human LN imm cells",
    "section": "filter cells",
    "text": "filter cells\n\ndim(seurat)\n\n[1]  36180 170115\n\nseurat$cond2 <- seurat$cond\nseurat$cond2[which(seurat$cond %in% c(\"chronic\", \"acute\"))] <- \"activated\"\n\n## reprocess\nres <- c(0.8,0.6,0.4,0.25)\n\nseurat <- NormalizeData(object = seurat)\nseurat <- FindVariableFeatures(object = seurat)\nseurat <- ScaleData(object = seurat, verbose = FALSE)\nseurat <- RunPCA(object = seurat, npcs = 30, verbose = FALSE)\nseurat <- RunTSNE(object = seurat, reduction = \"pca\", dims = 1:20)\nseurat <- RunUMAP(object = seurat, reduction = \"pca\", dims = 1:20)\nseurat <- FindNeighbors(object = seurat, reduction = \"pca\", \n                        dims = 1:20)\nfor (i in 1:length(res)) {\n    seurat <- FindClusters(object = seurat, resolution = res[i], \n                           random.seed = 1234)\n    }\n\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 170115\nNumber of edges: 4993624\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9138\nNumber of communities: 33\nElapsed time: 74 seconds\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 170115\nNumber of edges: 4993624\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9228\nNumber of communities: 31\nElapsed time: 72 seconds\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 170115\nNumber of edges: 4993624\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9348\nNumber of communities: 26\nElapsed time: 71 seconds\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 170115\nNumber of edges: 4993624\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9481\nNumber of communities: 14\nElapsed time: 75 seconds\n\n## remove cluster with high expression of COL1A1, PDPN, LTF, KRTs, PROX1, ..\n## PECAM1 + no PTPRC (stromal cells)\n\nseurat <- subset(seurat, RNA_snn_res.0.25 %in% c(\"10\", \"11\"), invert = T)\n\ndim(seurat)\n\n[1]  36180 168298\n\n## reprocess\nres <- c(0.8,0.6,0.4,0.25)\n\nseurat <- NormalizeData(object = seurat)\nseurat <- FindVariableFeatures(object = seurat)\nseurat <- ScaleData(object = seurat, verbose = FALSE)\nseurat <- RunPCA(object = seurat, npcs = 30, verbose = FALSE)\nseurat <- RunTSNE(object = seurat, reduction = \"pca\", dims = 1:20)\nseurat <- RunUMAP(object = seurat, reduction = \"pca\", dims = 1:20)\nseurat <- FindNeighbors(object = seurat, reduction = \"pca\", \n                        dims = 1:20)\nfor (i in 1:length(res)) {\n    seurat <- FindClusters(object = seurat, resolution = res[i], \n                           random.seed = 1234)\n    }\n\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 168298\nNumber of edges: 4986183\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9163\nNumber of communities: 32\nElapsed time: 72 seconds\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 168298\nNumber of edges: 4986183\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9252\nNumber of communities: 31\nElapsed time: 81 seconds\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 168298\nNumber of edges: 4986183\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9362\nNumber of communities: 24\nElapsed time: 75 seconds\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 168298\nNumber of edges: 4986183\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9495\nNumber of communities: 18\nElapsed time: 72 seconds"
  },
  {
    "objectID": "analysis/mergeImmCells.html#visualize-data",
    "href": "analysis/mergeImmCells.html#visualize-data",
    "title": "Merge human LN imm cells",
    "section": "visualize data",
    "text": "visualize data\n\nclustering\n\ncolPal <- c(pal_nejm()(8),pal_futurama()(12))[1:length(levels(seurat))]\nnames(colPal) <- levels(seurat)\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPal)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\npatient\n\ncolPat <- c(pal_jco()(10),pal_futurama()(12))[1:length(unique(seurat$patient))]\nnames(colPat) <- unique(seurat$patient)\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\ncondition\n\ncolCond <- pal_igv()(length(unique(seurat$cond)))\nnames(colCond) <- unique(seurat$cond)\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colCond, group.by = \"cond\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\norigin\n\ncolOrig <- pal_aaas()(length(unique(seurat$origin)))\nnames(colCond) <- unique(seurat$cond)\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colOrig, group.by = \"origin\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")"
  },
  {
    "objectID": "analysis/mergeImmCells.html#save-seurat-object",
    "href": "analysis/mergeImmCells.html#save-seurat-object",
    "title": "Merge human LN imm cells",
    "section": "save seurat object",
    "text": "save seurat object\n\nsaveRDS(seurat, file=paste0(basedir,\n                            \"/data/AllPatWithoutCM_IMMMerged_seurat.rds\"))"
  },
  {
    "objectID": "analysis/mergeImmCells.html#session-info",
    "href": "analysis/mergeImmCells.html#session-info",
    "title": "Merge human LN imm cells",
    "section": "session info",
    "text": "session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] ggsci_3.0.1        runSeurat3_0.1.0   here_1.0.1         magrittr_2.0.3     Seurat_5.0.2      \n [6] SeuratObject_5.0.1 sp_2.1-3           lubridate_1.9.3    forcats_1.0.0      stringr_1.5.1     \n[11] dplyr_1.1.4        purrr_1.0.2        readr_2.1.5        tidyr_1.3.1        tibble_3.2.1      \n[16] ggplot2_3.5.0      tidyverse_2.0.0   \n\nloaded via a namespace (and not attached):\n  [1] RColorBrewer_1.1-3          rstudioapi_0.15.0           jsonlite_1.8.8             \n  [4] spatstat.utils_3.0-4        farver_2.1.1                rmarkdown_2.26             \n  [7] zlibbioc_1.46.0             vctrs_0.6.5                 ROCR_1.0-11                \n [10] spatstat.explore_3.2-6      RCurl_1.98-1.14             S4Arrays_1.0.6             \n [13] htmltools_0.5.7             sctransform_0.4.1           parallelly_1.37.1          \n [16] KernSmooth_2.23-22          htmlwidgets_1.6.4           ica_1.0-3                  \n [19] plyr_1.8.9                  plotly_4.10.4               zoo_1.8-12                 \n [22] igraph_2.0.2                mime_0.12                   lifecycle_1.0.4            \n [25] pkgconfig_2.0.3             Matrix_1.6-5                R6_2.5.1                   \n [28] fastmap_1.1.1               GenomeInfoDbData_1.2.10     MatrixGenerics_1.12.3      \n [31] fitdistrplus_1.1-11         future_1.33.1               shiny_1.8.0                \n [34] digest_0.6.34               colorspace_2.1-0            S4Vectors_0.40.1           \n [37] patchwork_1.2.0             rprojroot_2.0.4             tensor_1.5                 \n [40] RSpectra_0.16-1             irlba_2.3.5.1               GenomicRanges_1.52.1       \n [43] labeling_0.4.3              progressr_0.14.0            fansi_1.0.6                \n [46] spatstat.sparse_3.0-3       timechange_0.3.0            httr_1.4.7                 \n [49] polyclip_1.10-6             abind_1.4-5                 compiler_4.3.0             \n [52] bit64_4.0.5                 withr_3.0.0                 fastDummies_1.7.3          \n [55] MASS_7.3-60.0.1             DelayedArray_0.26.7         tools_4.3.0                \n [58] lmtest_0.9-40               httpuv_1.6.14               future.apply_1.11.1        \n [61] goftest_1.2-3               glue_1.7.0                  nlme_3.1-164               \n [64] promises_1.2.1              grid_4.3.0                  Rtsne_0.17                 \n [67] cluster_2.1.6               reshape2_1.4.4              generics_0.1.3             \n [70] gtable_0.3.4                spatstat.data_3.0-4         tzdb_0.4.0                 \n [73] data.table_1.15.2           hms_1.1.3                   XVector_0.40.0             \n [76] utf8_1.2.4                  BiocGenerics_0.48.0         spatstat.geom_3.2-9        \n [79] RcppAnnoy_0.0.22            ggrepel_0.9.5               RANN_2.6.1                 \n [82] pillar_1.9.0                vroom_1.6.5                 spam_2.10-0                \n [85] RcppHNSW_0.6.0              later_1.3.2                 splines_4.3.0              \n [88] lattice_0.22-5              bit_4.0.5                   survival_3.5-8             \n [91] deldir_2.0-4                tidyselect_1.2.0            SingleCellExperiment_1.22.0\n [94] miniUI_0.1.1.1              pbapply_1.7-2               knitr_1.45                 \n [97] gridExtra_2.3               IRanges_2.36.0              SummarizedExperiment_1.30.2\n[100] scattermore_1.2             stats4_4.3.0                xfun_0.42                  \n[103] Biobase_2.60.0              matrixStats_1.2.0           pheatmap_1.0.12            \n[106] stringi_1.8.3               lazyeval_0.2.2              yaml_2.3.8                 \n[109] evaluate_0.23               codetools_0.2-19            cli_3.6.2                  \n[112] uwot_0.1.16                 xtable_1.8-4                reticulate_1.35.0          \n[115] munsell_0.5.0               GenomeInfoDb_1.36.4         Rcpp_1.0.12                \n[118] globals_0.16.2              spatstat.random_3.2-3       png_0.1-8                  \n[121] parallel_4.3.0              ellipsis_0.3.2              dotCall64_1.1-1            \n[124] bitops_1.0-7                listenv_0.9.1               viridisLite_0.4.2          \n[127] scales_1.3.0                ggridges_0.5.6              crayon_1.5.2               \n[130] leiden_0.4.3.1              rlang_1.1.3                 cowplot_1.1.3              \n\ndate()\n\n[1] \"Wed Mar 13 21:29:08 2024\""
  },
  {
    "objectID": "analysis/visRestingImmCellsIntegrated.html#load-packages",
    "href": "analysis/visRestingImmCellsIntegrated.html#load-packages",
    "title": "visualize resting immune cells human LN",
    "section": "Load packages",
    "text": "Load packages\n\n## load packages \nsuppressPackageStartupMessages({\n  library(dplyr)\n  library(reshape2)\n  library(ggplot2)\n  library(cowplot)\n  library(purrr)\n  library(Seurat)\n  library(tidyverse)\n  library(ggpubr)\n  library(runSeurat3)\n  library(here)\n  library(ggsci)\n  library(pheatmap)\n  library(scater)\n})"
  },
  {
    "objectID": "analysis/visRestingImmCellsIntegrated.html#load-seurat-object",
    "href": "analysis/visRestingImmCellsIntegrated.html#load-seurat-object",
    "title": "visualize resting immune cells human LN",
    "section": "load seurat object",
    "text": "load seurat object\n\nbasedir <- here()\nseurat <- readRDS(file= paste0(basedir,\n                            \"/data/AllPatWithoutCM_IMMMerged_integrated_label\",\n                            \"_seurat.rds\"))\n\nIdents(seurat) <- seurat$label\nseurat <- subset(seurat, cond2 == \"resting\")\n\n## set col palettes\ncolPal <- colPal <- c(pal_flatui()(10), pal_frontiers()(8),\n                      pal_nejm()(8))[1:length(unique(seurat$RNA_snn_res.0.25))]\nnames(colPal) <- unique(seurat$RNA_snn_res.0.25)\n\n\ncolPat <- c(pal_nejm()(7),pal_futurama()(12))[1:length(unique(seurat$patient))]\nnames(colPat) <- unique(seurat$patient)\ncolCond <- c(\"#6692a3\",\"#971c1c\",\"#d17d67\")\nnames(colCond) <- unique(seurat$cond)\ncolOri <- pal_npg()(length(unique(seurat$origin)))\nnames(colOri) <- unique(seurat$origin)\ncolCond2 <- c(\"#6692a3\",\"#971c1c\")\nnames(colCond2) <- c(\"resting\", \"activated\")\n\ncolLab <- c(\"#2a3b30\", \"#0b6647\", \"#54907e\", \"#94c78a\", \"#6f9568\", \n            \"#8f2810\", \"#a83e0b\", \"#ce6915\",\"#d08821\", \"#d0ac21\",\"#b9bb20\",\n            \"#486584\",\"#56799e\", \"#4b5397\", \"#8873d3\", \"#6e3e7a\")\n            \nnames(colLab) <- c(\"preB\", \"naiveB\", \"GCB\", \"MBC\", \"plasmaCell\",\n                   \"naiveCD4-1\", \"naiveCD4-2\", \"naiveCD4-3\", \"Treg\", \"CD8Tcm\",\n                    \"CTL/NKcell\",\n                   \"ILC3\",\"pDC-1\", \"pDC-2\", \"Mph/DC-1\", \"Mph/DC-2\")"
  },
  {
    "objectID": "analysis/visRestingImmCellsIntegrated.html#visualize-data",
    "href": "analysis/visRestingImmCellsIntegrated.html#visualize-data",
    "title": "visualize resting immune cells human LN",
    "section": "visualize data",
    "text": "visualize data\n\nDimPlot(seurat, reduction = \"umap\", cols=colLab)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colLab, pt.size=0.5)+\n  theme_void()\n\n\n\n\n\nclustering\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPal, group.by = \"RNA_snn_res.0.25\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colPal, pt.size=0.5)+\n  theme_void()\n\n\n\n\n\n\npatient\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\",\n        pt.size=0.5, shuffle = T)+\n  theme_void()"
  },
  {
    "objectID": "analysis/visRestingImmCellsIntegrated.html#vis-selected-immune-cell-marker",
    "href": "analysis/visRestingImmCellsIntegrated.html#vis-selected-immune-cell-marker",
    "title": "visualize resting immune cells human LN",
    "section": "vis selected immune cell marker",
    "text": "vis selected immune cell marker\n\ngenes <- data.frame(gene=rownames(seurat)) %>% \n    mutate(geneID=gsub(\"^.*\\\\.\", \"\", gene)) \n\nselGenesAll <- read_tsv(file = paste0(basedir,\n                                      \"/data/overallImmuneCellMarker.txt\")) %>% \n  left_join(., genes, by = \"geneID\")\n\nseurat$label <- factor(seurat$label, levels = names(colLab))\nIdents(seurat) <- seurat$label\n\npOut <- avgHeatmap(seurat = seurat, selGenes = selGenesAll,\n                  colVecIdent = colLab, \n                  ordVec=levels(seurat),\n                  gapVecR=NULL, gapVecC=NULL,cc=F,\n                  cr=F, condCol=F)\n\n\n\n\n\nDotplot\n\nDotPlot(seurat, assay=\"RNA\", features = rev(selGenesAll$gene), scale =T,\n        cluster.idents = F) +\n  scale_color_viridis_c() +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  scale_x_discrete(breaks=rev(selGenesAll$gene), labels=rev(selGenesAll$geneID)) +\n  xlab(\"\") + ylab(\"\")\n\n\n\nDotPlot(seurat, assay=\"RNA\", features = rev(selGenesAll$gene), scale =F,\n        cluster.idents = F) +\n  scale_color_viridis_c() +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  scale_x_discrete(breaks=rev(selGenesAll$gene), labels=rev(selGenesAll$geneID)) +\n  xlab(\"\") + ylab(\"\")\n\n\n\n\n\n\nFeatureplot\n\npList <- sapply(selGenesAll$gene, function(x){\np <- FeaturePlot(seurat, reduction = \"umap\", \n            features = x,\n            cols=c(\"lightgrey\", \"darkred\"),\n            order = F)+\n  theme(legend.position=\"right\")\n  plot(p)\n})"
  },
  {
    "objectID": "analysis/visRestingImmCellsIntegrated.html#session-info",
    "href": "analysis/visRestingImmCellsIntegrated.html#session-info",
    "title": "visualize resting immune cells human LN",
    "section": "session info",
    "text": "session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] scater_1.28.0               scuttle_1.10.3              SingleCellExperiment_1.22.0\n [4] SummarizedExperiment_1.30.2 Biobase_2.60.0              GenomicRanges_1.52.1       \n [7] GenomeInfoDb_1.36.4         IRanges_2.36.0              S4Vectors_0.40.1           \n[10] BiocGenerics_0.48.0         MatrixGenerics_1.12.3       matrixStats_1.2.0          \n[13] pheatmap_1.0.12             ggsci_3.0.1                 here_1.0.1                 \n[16] runSeurat3_0.1.0            ggpubr_0.6.0                lubridate_1.9.3            \n[19] forcats_1.0.0               stringr_1.5.1               readr_2.1.5                \n[22] tidyr_1.3.1                 tibble_3.2.1                tidyverse_2.0.0            \n[25] Seurat_5.0.2                SeuratObject_5.0.1          sp_2.1-3                   \n[28] purrr_1.0.2                 cowplot_1.1.3               ggplot2_3.5.0              \n[31] reshape2_1.4.4              dplyr_1.1.4                \n\nloaded via a namespace (and not attached):\n  [1] RcppAnnoy_0.0.22          splines_4.3.0             later_1.3.2              \n  [4] bitops_1.0-7              polyclip_1.10-6           fastDummies_1.7.3        \n  [7] lifecycle_1.0.4           rstatix_0.7.2             rprojroot_2.0.4          \n [10] vroom_1.6.5               globals_0.16.2            lattice_0.22-5           \n [13] MASS_7.3-60.0.1           backports_1.4.1           magrittr_2.0.3           \n [16] plotly_4.10.4             rmarkdown_2.26            yaml_2.3.8               \n [19] httpuv_1.6.14             sctransform_0.4.1         spam_2.10-0              \n [22] spatstat.sparse_3.0-3     reticulate_1.35.0         pbapply_1.7-2            \n [25] RColorBrewer_1.1-3        abind_1.4-5               zlibbioc_1.46.0          \n [28] Rtsne_0.17                RCurl_1.98-1.14           GenomeInfoDbData_1.2.10  \n [31] ggrepel_0.9.5             irlba_2.3.5.1             listenv_0.9.1            \n [34] spatstat.utils_3.0-4      goftest_1.2-3             RSpectra_0.16-1          \n [37] spatstat.random_3.2-3     fitdistrplus_1.1-11       parallelly_1.37.1        \n [40] DelayedMatrixStats_1.22.6 leiden_0.4.3.1            codetools_0.2-19         \n [43] DelayedArray_0.26.7       tidyselect_1.2.0          farver_2.1.1             \n [46] viridis_0.6.5             ScaledMatrix_1.8.1        spatstat.explore_3.2-6   \n [49] jsonlite_1.8.8            BiocNeighbors_1.18.0      ellipsis_0.3.2           \n [52] progressr_0.14.0          ggridges_0.5.6            survival_3.5-8           \n [55] tools_4.3.0               ica_1.0-3                 Rcpp_1.0.12              \n [58] glue_1.7.0                gridExtra_2.3             xfun_0.42                \n [61] withr_3.0.0               fastmap_1.1.1             fansi_1.0.6              \n [64] rsvd_1.0.5                digest_0.6.34             timechange_0.3.0         \n [67] R6_2.5.1                  mime_0.12                 colorspace_2.1-0         \n [70] scattermore_1.2           tensor_1.5                spatstat.data_3.0-4      \n [73] utf8_1.2.4                generics_0.1.3            data.table_1.15.2        \n [76] httr_1.4.7                htmlwidgets_1.6.4         S4Arrays_1.0.6           \n [79] uwot_0.1.16               pkgconfig_2.0.3           gtable_0.3.4             \n [82] lmtest_0.9-40             XVector_0.40.0            htmltools_0.5.7          \n [85] carData_3.0-5             dotCall64_1.1-1           scales_1.3.0             \n [88] png_0.1-8                 knitr_1.45                rstudioapi_0.15.0        \n [91] tzdb_0.4.0                nlme_3.1-164              zoo_1.8-12               \n [94] KernSmooth_2.23-22        vipor_0.4.7               parallel_4.3.0           \n [97] miniUI_0.1.1.1            pillar_1.9.0              grid_4.3.0               \n[100] vctrs_0.6.5               RANN_2.6.1                promises_1.2.1           \n[103] BiocSingular_1.16.0       car_3.1-2                 beachmat_2.16.0          \n[106] xtable_1.8-4              cluster_2.1.6             beeswarm_0.4.0           \n[109] evaluate_0.23             cli_3.6.2                 compiler_4.3.0           \n[112] rlang_1.1.3               crayon_1.5.2              future.apply_1.11.1      \n[115] ggsignif_0.6.4            labeling_0.4.3            ggbeeswarm_0.7.2         \n[118] plyr_1.8.9                stringi_1.8.3             BiocParallel_1.34.2      \n[121] viridisLite_0.4.2         deldir_2.0-4              munsell_0.5.0            \n[124] lazyeval_0.2.2            spatstat.geom_3.2-9       Matrix_1.6-5             \n[127] RcppHNSW_0.6.0            hms_1.1.3                 patchwork_1.2.0          \n[130] bit64_4.0.5               sparseMatrixStats_1.12.2  future_1.33.1            \n[133] shiny_1.8.0               ROCR_1.0-11               igraph_2.0.2             \n[136] broom_1.0.5               bit_4.0.5                \n\ndate()\n\n[1] \"Wed Mar 13 21:36:11 2024\""
  },
  {
    "objectID": "analysis/QCplusNorm_SThumanLN_B2.html",
    "href": "analysis/QCplusNorm_SThumanLN_B2.html",
    "title": "merge ST data human LN - batch2",
    "section": "",
    "text": "Load and merge spe objects\n\nbasedir <- here()\nmetaDat <- read_tsv(paste0(basedir, \"/data/ST/metadataB2.txt\"), col_names = T)\n\nassignSamples <- function(smpNam, basedirSmp){\n  smpNamFull <- list.files(path = paste0(basedirSmp, \"/data/ST/\"),\n                 pattern = paste0(smpNam, \".*_spe.rds\"))\n  speSmp <- readRDS(paste0(basedirSmp, \"/data/ST/\", smpNamFull))\n  return(speSmp)\n}\n\n####################################################################\n\nfor(i in 1:length(metaDat$Sample)){\n  speX <- assignSamples(smpNam = metaDat$Sample[i],\n                           basedirSmp = basedir)\n  if(exists(\"spe\")){\n    spe <- cbind(spe, speX)\n  }else{\n    spe <- speX\n  }\n}\n\nremove(speX)\n\n\n\nExamine samples before removal of low quality spots\n\n## before QC\ntable(spe@colData$sample_id)\n\n\n334131_11-1_20231103_Hu_pat03_07_squA 334131_12-2_20231103_Hu_pat03_10_squB \n                                 4992                                  4992 \n334131_13-3_20231103_Hu_pat03_9a_squC 334131_14-4_20231103_Hu_pat03_11_squD \n                                 4992                                  4992 \n\ndim(spe)\n\n[1] 60666 19968\n\nplotSpots(spe) + facet_grid(~ sample_id)\n\n\n\n# subset to keep only spots over tissue\nspe <- spe[, colData(spe)$in_tissue == 1]\ndim(spe)\n\n[1] 60666  7632\n\ntable(spe@colData$sample_id)\n\n\n334131_11-1_20231103_Hu_pat03_07_squA 334131_12-2_20231103_Hu_pat03_10_squB \n                                 1143                                  2823 \n334131_13-3_20231103_Hu_pat03_9a_squC 334131_14-4_20231103_Hu_pat03_11_squD \n                                 1997                                  1669 \n\nplotSpots(spe) + facet_grid(~ sample_id)\n\n\n\n\n\n\nrun QC\n\n# identify mitochondrial genes\nis_mito <- grepl(\"(^MT-)|(^mt-)\", rowData(spe)$symbol)\ntable(is_mito)\n\nis_mito\nFALSE  TRUE \n60629    37 \n\nrowData(spe)$symbol[is_mito]\n\n [1] \"MT-TF\"   \"MT-RNR1\" \"MT-TV\"   \"MT-RNR2\" \"MT-TL1\"  \"MT-ND1\"  \"MT-TI\"  \n [8] \"MT-TQ\"   \"MT-TM\"   \"MT-ND2\"  \"MT-TW\"   \"MT-TA\"   \"MT-TN\"   \"MT-TC\"  \n[15] \"MT-TY\"   \"MT-CO1\"  \"MT-TS1\"  \"MT-TD\"   \"MT-CO2\"  \"MT-TK\"   \"MT-ATP8\"\n[22] \"MT-ATP6\" \"MT-CO3\"  \"MT-TG\"   \"MT-ND3\"  \"MT-TR\"   \"MT-ND4L\" \"MT-ND4\" \n[29] \"MT-TH\"   \"MT-TS2\"  \"MT-TL2\"  \"MT-ND5\"  \"MT-ND6\"  \"MT-TE\"   \"MT-CYB\" \n[36] \"MT-TT\"   \"MT-TP\"  \n\n# run QC parameters per sample\nspeList <- lapply(unique(colData(spe)$sample_id), function(sid){\n  speSub <- spe[, which(colData(spe)$sample_id == sid)]\n  \n  speSub <- addPerCellQC(speSub, subsets = list(mito = is_mito))\n  hist(colData(speSub)$sum, breaks = 50,\n       main = paste0(\"sum - \", sid), xlab = \"sum\")\n  hist(colData(speSub)$detected, breaks = 50,\n       main = paste0(\"detected - \", sid), xlab = \"detected\")\n  hist(colData(speSub)$subsets_mito_percent, breaks = 50,\n       main = paste0(\"subsets_mito_percent - \", sid),\n       xlab = \"subsets_mito_percent\")\n  \n  ## remove spots with high deviation from median\n  speSub@colData$total_counts_drop <- isOutlier(speSub@colData$sum, nmads = 5,\n                                     type = \"both\", log = TRUE)\n  speSub@colData$total_features_drop <- isOutlier(speSub@colData$detected,\n                                                  nmads = 5, type = \"both\",\n                                                  log = TRUE)\n  speSub@colData$mito_drop <- isOutlier(speSub@colData$subsets_mito_percent,\n                                        nmads = 10, type = \"higher\",\n                                        log = FALSE)\n  speSub@colData$mito_drop <- FALSE\n  speSub <- speSub\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## vis spots with low quality\nlapply(speList, function(speSub){\n  p <- plotQC(speSub, type = \"spots\", \n       discard = \"total_counts_drop\") +\n    ggtitle(speSub@colData$sample_id)\n  p\n})\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\nlapply(speList, function(speSub){\n  p <- plotQC(speSub, type = \"spots\", \n       discard = \"total_features_drop\") +\n    ggtitle(speSub@colData$sample_id)\n  p\n})\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\nlapply(speList, function(speSub){\n  p <- plotQC(speSub, type = \"spots\", \n       discard = \"mito_drop\") +\n    ggtitle(speSub@colData$sample_id)\n  p\n})\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\n## cnt spots with low quality\nlapply(speList, function(speSub){\n  table(speSub@colData$total_counts_drop)\n})\n\n[[1]]\n\nFALSE \n 1143 \n\n[[2]]\n\nFALSE  TRUE \n 2820     3 \n\n[[3]]\n\nFALSE  TRUE \n 1992     5 \n\n[[4]]\n\nFALSE \n 1669 \n\nlapply(speList, function(speSub){\n  table(speSub@colData$total_features_drop)\n})\n\n[[1]]\n\nFALSE \n 1143 \n\n[[2]]\n\nFALSE  TRUE \n 2809    14 \n\n[[3]]\n\nFALSE  TRUE \n 1992     5 \n\n[[4]]\n\nFALSE \n 1669 \n\nlapply(speList, function(speSub){\n  table(speSub@colData$mito_drop)\n})\n\n[[1]]\n\nFALSE \n 1143 \n\n[[2]]\n\nFALSE \n 2823 \n\n[[3]]\n\nFALSE \n 1997 \n\n[[4]]\n\nFALSE \n 1669 \n\n## remove plots with low quality\nspeList <- lapply(speList, function(speSub){\n  speSub <- speSub[, !(speSub@colData$total_counts_drop |\n                         speSub@colData$total_features_drop |\n                         speSub@colData$mito_drop)]\n  sid <- unique(colData(speSub)$sample_id)\n  ## after QC\n  hist(colData(speSub)$sum, breaks = 50,\n       main = paste0(\"sum after QC - \", sid), xlab = \"sum\")\n  hist(colData(speSub)$detected, breaks = 50,\n       main = paste0(\"detected after QC - \", sid), xlab = \"detected\")\n  hist(colData(speSub)$subsets_mito_percent, breaks = 50,\n       main = paste0(\"subsets_mito_percent after QC - \", sid),\n       xlab = \"subsets_mito_percent\")\n  speSub <- speSub\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnames(speList) <- unique(colData(spe)$sample_id)\n\n\n\nExamine samples after removal of low quality spots\n\n## vis spots after QC\nlapply(speList, function(speSub){\n  p <- plotSpots(speSub) +\n    ggtitle(speSub@colData$sample_id)\n  p\n\n})\n\n$`334131_11-1_20231103_Hu_pat03_07_squA`\n\n\n\n\n\n\n$`334131_12-2_20231103_Hu_pat03_10_squB`\n\n\n\n\n\n\n$`334131_13-3_20231103_Hu_pat03_9a_squC`\n\n\n\n\n\n\n$`334131_14-4_20231103_Hu_pat03_11_squD`\n\n\n\n\n## cnt spots after QC\nlapply(speList, function(speSub){\n  dim(speSub)\n})\n\n$`334131_11-1_20231103_Hu_pat03_07_squA`\n[1] 60666  1143\n\n$`334131_12-2_20231103_Hu_pat03_10_squB`\n[1] 60666  2809\n\n$`334131_13-3_20231103_Hu_pat03_9a_squC`\n[1] 60666  1992\n\n$`334131_14-4_20231103_Hu_pat03_11_squD`\n[1] 60666  1669\n\n\n\n\nNormalization\n\nspeList <- lapply(speList, function(speSub){\n  speSub <- computeLibraryFactors(speSub)\n  summary(sizeFactors(speSub))\n  sid <- unique(colData(speSub)$sample_id)\n  hist(sizeFactors(speSub), breaks = 20, main = sid)\n  speSub <- logNormCounts(speSub)\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFeature selection\n\nhvgList <- lapply(speList, function(speSub){\n  # fit mean-variance relationship\n  dec <- modelGeneVar(speSub)\n\n  # visualize mean-variance relationship\n  fit <- metadata(dec)\n  plot(fit$mean, fit$var, \n     xlab = \"mean of log-expression\", ylab = \"variance of log-expression\")\n  curve(fit$trend(x), col = \"dodgerblue\", add = TRUE, lwd = 2)\n  top_hvgs <- getTopHVGs(dec, prop = 0.1)\n})\n\n\n\n\n\n\n\n\n\n\n\n\nnames(hvgList) <- names(speList)\nlengths(hvgList)\n\n334131_11-1_20231103_Hu_pat03_07_squA 334131_12-2_20231103_Hu_pat03_10_squB \n                                 1150                                  1592 \n334131_13-3_20231103_Hu_pat03_9a_squC 334131_14-4_20231103_Hu_pat03_11_squD \n                                 1620                                  1055 \n\n\n\n\nDimensionality reduction\n\nspeList <- lapply(speList, function(speSub){\n  sid <- unique(colData(speSub)$sample_id)\n  top_hvgs <- hvgList[[sid]]\n  speSub <- runPCA(speSub, subset_row = top_hvgs)\n  speSub <- runUMAP(speSub, dimred = \"PCA\")\n  colnames(reducedDim(speSub, \"UMAP\")) <- paste0(\"UMAP\", 1:2)\n  speSub <- speSub\n})\n\nlapply(speList, function(speSub){\n  sid <- unique(colData(speSub)$sample_id)\n  plotDimRed(speSub, type = \"PCA\") + \n    ggtitle(sid)\n})\n\n$`334131_11-1_20231103_Hu_pat03_07_squA`\n\n\n\n\n\n\n$`334131_12-2_20231103_Hu_pat03_10_squB`\n\n\n\n\n\n\n$`334131_13-3_20231103_Hu_pat03_9a_squC`\n\n\n\n\n\n\n$`334131_14-4_20231103_Hu_pat03_11_squD`\n\n\n\n\nlapply(speList, function(speSub){\n  sid <- unique(colData(speSub)$sample_id)\n  plotDimRed(speSub, type = \"UMAP\") + \n    ggtitle(sid)\n})\n\n$`334131_11-1_20231103_Hu_pat03_07_squA`\n\n\n\n\n\n\n$`334131_12-2_20231103_Hu_pat03_10_squB`\n\n\n\n\n\n\n$`334131_13-3_20231103_Hu_pat03_9a_squC`\n\n\n\n\n\n\n$`334131_14-4_20231103_Hu_pat03_11_squD`\n\n\n\n\n\n\n\nclustering\n\nspeList <- lapply(speList, function(speSub){\n  # graph-based clustering\n  k <- 15\n  g <- buildSNNGraph(speSub, k = k, use.dimred = \"PCA\")\n  g_walk <- igraph::cluster_walktrap(g)\n  clus <- g_walk$membership\n  table(clus)\n  colLabels(speSub) <- factor(clus)\n  speSub <- speSub\n})\n\ncolPal <- c(\"#F0027F\", \"#377EB8\", \"#4DAF4A\", \"#984EA3\", \"#FFD700\", \"#FF7F00\",\n            \"#1A1A1A\", \"#666666\", pal_futurama()(10))\nlapply(speList, function(speSub){\n  sid <- unique(colData(speSub)$sample_id)\n  plotSpots(speSub, annotate = \"label\", \n          palette = colPal) + \n    ggtitle(sid)\n})\n\n$`334131_11-1_20231103_Hu_pat03_07_squA`\n\n\n\n\n\n\n$`334131_12-2_20231103_Hu_pat03_10_squB`\n\n\n\n\n\n\n$`334131_13-3_20231103_Hu_pat03_9a_squC`\n\n\n\n\n\n\n$`334131_14-4_20231103_Hu_pat03_11_squD`\n\n\n\n\nlapply(speList, function(speSub){\n  sid <- unique(colData(speSub)$sample_id)\n  plotDimRed(speSub, type = \"UMAP\", \n           annotate = \"label\", palette = colPal) + \n    ggtitle(sid)\n})\n\n$`334131_11-1_20231103_Hu_pat03_07_squA`\n\n\n\n\n\n\n$`334131_12-2_20231103_Hu_pat03_10_squB`\n\n\n\n\n\n\n$`334131_13-3_20231103_Hu_pat03_9a_squC`\n\n\n\n\n\n\n$`334131_14-4_20231103_Hu_pat03_11_squD`\n\n\n\n\nlapply(speList, function(speSub){\n  sid <- unique(colData(speSub)$sample_id)\n  plotDimRed(speSub, type = \"PCA\", \n           annotate = \"label\", palette = colPal) + \n    ggtitle(sid)\n})\n\n$`334131_11-1_20231103_Hu_pat03_07_squA`\n\n\n\n\n\n\n$`334131_12-2_20231103_Hu_pat03_10_squB`\n\n\n\n\n\n\n$`334131_13-3_20231103_Hu_pat03_9a_squC`\n\n\n\n\n\n\n$`334131_14-4_20231103_Hu_pat03_11_squD`\n\n\n\n\n\n\n\nMarker genes\n\nmarkerList <- lapply(speList, function(speSub){\n  rownames(speSub) <- rowData(speSub)$symbol\n  markers <- findMarkers(speSub, test = \"binom\", direction = \"up\")\n})\n\nnames(markerList) <- names(speList)\n\n\n\nSave data\n\nsaveRDS(speList, file = paste0(basedir, \"/data/speAllLNB2.rds\"))\nsaveRDS(markerList, file = paste0(basedir, \"/data/markerAllLNB2.rds\"))\n\n\n\nsession info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] Matrix_1.6-5                pheatmap_1.0.12            \n [3] ggsci_3.0.1                 ggpubr_0.6.0               \n [5] scran_1.28.2                scater_1.28.0              \n [7] scuttle_1.10.3              ggspavis_1.6.0             \n [9] here_1.0.1                  SpatialExperiment_1.10.0   \n[11] SingleCellExperiment_1.22.0 SummarizedExperiment_1.30.2\n[13] Biobase_2.60.0              GenomicRanges_1.52.1       \n[15] GenomeInfoDb_1.36.4         IRanges_2.36.0             \n[17] S4Vectors_0.40.1            BiocGenerics_0.48.0        \n[19] MatrixGenerics_1.12.3       matrixStats_1.2.0          \n[21] lubridate_1.9.3             forcats_1.0.0              \n[23] stringr_1.5.1               dplyr_1.1.4                \n[25] purrr_1.0.2                 readr_2.1.5                \n[27] tidyr_1.3.1                 tibble_3.2.1               \n[29] ggplot2_3.5.0               tidyverse_2.0.0            \n\nloaded via a namespace (and not attached):\n  [1] RColorBrewer_1.1-3        rstudioapi_0.15.0        \n  [3] jsonlite_1.8.8            magrittr_2.0.3           \n  [5] ggbeeswarm_0.7.2          magick_2.8.3             \n  [7] farver_2.1.1              rmarkdown_2.26           \n  [9] zlibbioc_1.46.0           vctrs_0.6.5              \n [11] DelayedMatrixStats_1.22.6 RCurl_1.98-1.14          \n [13] rstatix_0.7.2             htmltools_0.5.7          \n [15] S4Arrays_1.0.6            BiocNeighbors_1.18.0     \n [17] broom_1.0.5               Rhdf5lib_1.22.1          \n [19] rhdf5_2.44.0              htmlwidgets_1.6.4        \n [21] igraph_2.0.2              lifecycle_1.0.4          \n [23] ggside_0.3.1              pkgconfig_2.0.3          \n [25] rsvd_1.0.5                R6_2.5.1                 \n [27] fastmap_1.1.1             GenomeInfoDbData_1.2.10  \n [29] digest_0.6.34             colorspace_2.1-0         \n [31] rprojroot_2.0.4           dqrng_0.3.2              \n [33] irlba_2.3.5.1             beachmat_2.16.0          \n [35] labeling_0.4.3            fansi_1.0.6              \n [37] timechange_0.3.0          abind_1.4-5              \n [39] compiler_4.3.0            bit64_4.0.5              \n [41] withr_3.0.0               backports_1.4.1          \n [43] BiocParallel_1.34.2       carData_3.0-5            \n [45] viridis_0.6.5             HDF5Array_1.28.1         \n [47] R.utils_2.12.3            ggsignif_0.6.4           \n [49] DelayedArray_0.26.7       rjson_0.2.21             \n [51] bluster_1.10.0            tools_4.3.0              \n [53] vipor_0.4.7               beeswarm_0.4.0           \n [55] R.oo_1.26.0               glue_1.7.0               \n [57] rhdf5filters_1.12.1       grid_4.3.0               \n [59] cluster_2.1.6             generics_0.1.3           \n [61] gtable_0.3.4              tzdb_0.4.0               \n [63] R.methodsS3_1.8.2         hms_1.1.3                \n [65] BiocSingular_1.16.0       ScaledMatrix_1.8.1       \n [67] metapod_1.8.0             car_3.1-2                \n [69] utf8_1.2.4                XVector_0.40.0           \n [71] ggrepel_0.9.5             pillar_1.9.0             \n [73] vroom_1.6.5               limma_3.56.2             \n [75] lattice_0.22-5            FNN_1.1.4                \n [77] bit_4.0.5                 tidyselect_1.2.0         \n [79] locfit_1.5-9.9            knitr_1.45               \n [81] gridExtra_2.3             edgeR_3.42.4             \n [83] xfun_0.42                 statmod_1.5.0            \n [85] DropletUtils_1.20.0       stringi_1.8.3            \n [87] yaml_2.3.8                evaluate_0.23            \n [89] codetools_0.2-19          cli_3.6.2                \n [91] uwot_0.1.16               munsell_0.5.0            \n [93] Rcpp_1.0.12               parallel_4.3.0           \n [95] sparseMatrixStats_1.12.2  bitops_1.0-7             \n [97] viridisLite_0.4.2         scales_1.3.0             \n [99] crayon_1.5.2              rlang_1.1.3"
  },
  {
    "objectID": "analysis/runCellchat_act_vs_res_PI16.html#load-packages",
    "href": "analysis/runCellchat_act_vs_res_PI16.html#load-packages",
    "title": "run cellchat scRNAseq data on PI16+RC",
    "section": "Load packages",
    "text": "Load packages\n\n## load packages \nsuppressPackageStartupMessages({\n  library(dplyr)\n  library(reshape2)\n  library(ggplot2)\n  library(purrr)\n  library(Seurat)\n  library(tidyverse)\n  library(ggpubr)\n  library(runSeurat3)\n  library(here)\n  library(ggsci)\n  library(pheatmap)\n  library(scater)\n  library(SingleCellExperiment)\n  library(scran)\n  library(CellChat)\n  library(patchwork)\n  library(ComplexHeatmap)\n})"
  },
  {
    "objectID": "analysis/runCellchat_act_vs_res_PI16.html#load-seurat-object",
    "href": "analysis/runCellchat_act_vs_res_PI16.html#load-seurat-object",
    "title": "run cellchat scRNAseq data on PI16+RC",
    "section": "load seurat object",
    "text": "load seurat object\n\nbasedir <- here()\n\nseuratFRC <- readRDS(file= paste0(basedir,\n                            \"/data/AllPatWithoutCM_FRConly_intOrig\", \n                            \"_seurat.rds\"))\nseuratIMM <- readRDS(file= paste0(basedir,\n                            \"/data/AllPatWithoutCM_IMMMerged_integrated_label\",\n                       \"_seurat.rds\"))\n\n## add label FRCs\nseuratFRC$label <- \"medRCIFRC\"\nseuratFRC$label[which(seuratFRC$intCluster == \"7\")] <- \"BRC\"\nseuratFRC$label[which(seuratFRC$intCluster == \"2\")] <- \"TRC\"\nseuratFRC$label[which(seuratFRC$intCluster == \"3\")] <- \"ACTA2+PRC\"\nseuratFRC$label[which(seuratFRC$intCluster == \"4\")] <- \"VSMC\"\nseuratFRC$label[which(seuratFRC$intCluster == \"5\")] <- \"PI16+RC\"\nseuratFRC$label[which(seuratFRC$intCluster == \"6\")] <- \"PRC1\"\n\nseuratFRC$cond2 <- seuratFRC$cond\nseuratFRC$cond2[which(seuratFRC$cond %in% c(\"acute\", \"chronic\"))] <- \"activated\"\n\n## group imm cells\nseuratIMM$label2 <- seuratIMM$label\nseuratIMM$label <- as.character(seuratIMM$label)\nseuratIMM$label[which(seuratIMM$label %in% c(\"naiveCD4-2\", \"naiveCD4-3\",\n                                             \"naiveCD4-1\", \"Treg\" ))] <- \"CD4T\"\nseuratIMM$label[which(seuratIMM$label %in% c(\"pDC-2\", \"pDC-1\" ))] <- \"pDC\"\nseuratIMM$label[which(seuratIMM$label %in% c(\"naiveB\", \"preB\" ))] <- \"naiveB\"\n\n\nseurat <- merge(seuratFRC, c(seuratIMM))\nseurat$label_plus_cond <- paste0(seurat$label, \"_\", seurat$cond2)\ntable(seurat$label_plus_cond)\n\n\n ACTA2+PRC_activated    ACTA2+PRC_resting        BRC_activated          BRC_resting \n                4244                 1560                 1487                  390 \n      CD4T_activated         CD4T_resting     CD8Tcm_activated       CD8Tcm_resting \n               38543                39380                 6234                 4006 \nCTL/NKcell_activated   CTL/NKcell_resting        GCB_activated          GCB_resting \n                4129                10339                  687                  869 \n      ILC3_activated         ILC3_resting        MBC_activated          MBC_resting \n                  79                 1819                10732                17174 \n medRCIFRC_activated    medRCIFRC_resting   Mph/DC-1_activated     Mph/DC-1_resting \n               10342                10129                  118                 2952 \n  Mph/DC-2_activated     Mph/DC-2_resting     naiveB_activated       naiveB_resting \n                 157                  980                 8295                14118 \n       pDC_activated          pDC_resting    PI16+RC_activated      PI16+RC_resting \n                 558                 6750                 1917                  986 \nplasmaCell_activated   plasmaCell_resting       PRC1_activated         PRC1_resting \n                  53                  326                 1528                  760 \n       TRC_activated          TRC_resting       VSMC_activated         VSMC_resting \n                3164                 3773                 2767                  724 \n\nIdents(seurat) <- seurat$label_plus_cond\nseurat <- subset(x = seurat, downsample = 500)\ntable(seurat$label_plus_cond)\n\n\n ACTA2+PRC_activated    ACTA2+PRC_resting        BRC_activated          BRC_resting \n                 500                  500                  500                  390 \n      CD4T_activated         CD4T_resting     CD8Tcm_activated       CD8Tcm_resting \n                 500                  500                  500                  500 \nCTL/NKcell_activated   CTL/NKcell_resting        GCB_activated          GCB_resting \n                 500                  500                  500                  500 \n      ILC3_activated         ILC3_resting        MBC_activated          MBC_resting \n                  79                  500                  500                  500 \n medRCIFRC_activated    medRCIFRC_resting   Mph/DC-1_activated     Mph/DC-1_resting \n                 500                  500                  118                  500 \n  Mph/DC-2_activated     Mph/DC-2_resting     naiveB_activated       naiveB_resting \n                 157                  500                  500                  500 \n       pDC_activated          pDC_resting    PI16+RC_activated      PI16+RC_resting \n                 500                  500                  500                  500 \nplasmaCell_activated   plasmaCell_resting       PRC1_activated         PRC1_resting \n                  53                  326                  500                  500 \n       TRC_activated          TRC_resting       VSMC_activated         VSMC_resting \n                 500                  500                  500                  500 \n\ntable(seurat$patient)\n\n\nP_20200220 P_20200722 P_20200909 P_20210113 P_20210224 P_20220201 P_20220202     ucd010      ucd13 \n      1482        600       1282       1925       1474       2251       2658       1939       1046 \n     ucd14 \n      1466 \n\ndim(seurat)\n\n[1] 39642 16123\n\nremove(seuratIMM, seuratFRC)\nseurat <- NormalizeData(object = seurat)\nseurat <- FindVariableFeatures(object = seurat)\nseurat <- ScaleData(object = seurat, verbose = FALSE)\nseurat <- RunPCA(object = seurat, npcs = 30, verbose = FALSE)\nseurat <- RunTSNE(object = seurat, reduction = \"pca\", dims = 1:20)\nseurat <- RunUMAP(object = seurat, reduction = \"pca\", dims = 1:20)"
  },
  {
    "objectID": "analysis/runCellchat_act_vs_res_PI16.html#set-color-palettes",
    "href": "analysis/runCellchat_act_vs_res_PI16.html#set-color-palettes",
    "title": "run cellchat scRNAseq data on PI16+RC",
    "section": "set color palettes",
    "text": "set color palettes\n\ncolFRC <- c(\"#800000FF\", \"#FFA319FF\",\"#8A9045FF\", \"#155F83FF\",\n            \"#C16622FF\", \"#6692a3\", \"#3b7f60\")\nnames(colFRC) <- c(\"medRCIFRC\", \"TRC\", \"ACTA2+PRC\", \"VSMC\", \"PI16+RC\", \"PRC1\",\n                   \"BRC\")\n\n\ncolImm <- c(\"#0b6647\", \"#54907e\", \"#94c78a\", \"#6f9568\", \n            \"#8f2810\", \"#d0ac21\",\"#9e9f0b\", \"#486584\",\n            \"#4b5397\", \"#8873d3\", \"#6e3e7a\")\n            \nnames(colImm) <- c(\"naiveB\", \"GCB\", \"MBC\", \"plasmaCell\",\n                   \"CD4T\", \"CD8Tcm\", \"CTL/NKcell\", \"ILC3\", \"pDC\", \n                   \"Mph/DC-1\", \"Mph/DC-2\")\n\ncolAll <- c(colFRC, colImm) \n\ncolPal <- c(pal_uchicago()(6), \"#6692a3\", \"#3b7f60\")\nnames(colPal) <- c(\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\")\ncolPat <- c(pal_nejm()(7),pal_futurama()(12))[1:length(unique(seurat$patient))]\nnames(colPat) <- unique(seurat$patient)\ncolCond <- c(\"#6692a3\",\"#971c1c\",\"#d17d67\")\nnames(colCond) <- unique(seurat$cond)\ncolOri <- pal_npg()(length(unique(seurat$origin)))\nnames(colOri) <- unique(seurat$origin)\ncolCond2 <- c(\"#6692a3\",\"#971c1c\")\nnames(colCond2) <- c(\"resting\", \"activated\")"
  },
  {
    "objectID": "analysis/runCellchat_act_vs_res_PI16.html#visualize-data",
    "href": "analysis/runCellchat_act_vs_res_PI16.html#visualize-data",
    "title": "run cellchat scRNAseq data on PI16+RC",
    "section": "visualize data",
    "text": "visualize data\n\nlabel\n\nDimPlot(seurat, reduction = \"umap\", cols=colAll, group.by = \"label\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\npatient\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\ncond2\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colCond2, group.by = \"cond2\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\norigin\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colOri, group.by = \"origin\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")"
  },
  {
    "objectID": "analysis/runCellchat_act_vs_res_PI16.html#load-cellchat-object",
    "href": "analysis/runCellchat_act_vs_res_PI16.html#load-cellchat-object",
    "title": "run cellchat scRNAseq data on PI16+RC",
    "section": "load cellchat object",
    "text": "load cellchat object\n\ncellchat.merge <- readRDS(file = paste0(basedir,\"/data/cellchat/FRCplusImmune_\",\n                                      \"resPlusActMerge_cellchat.rds\"))\n\ncellchat.res <- readRDS(file = paste0(basedir, \"/data/cellchat/FRCplusImmune_\",\n                                      \"resOnly_cellchat.rds\"))\n\ncellchat.act <- readRDS(file = paste0(basedir, \"/data/cellchat/FRCplusImmune_\",\n                                      \"actOnly_cellchat.rds\"))\nobject.list <- list(act = cellchat.act, res = cellchat.res)\n\n\ncompare interaction counts/strength\n\ncolCond3 <- colCond2\nnames(colCond3) <- c(\"res\", \"act\")\ngg1 <- compareInteractions(cellchat.merge, show.legend = F,\n                           group = c(\"act\",\"res\")) + \n  scale_fill_manual(values = colCond3)\ngg2 <- compareInteractions(cellchat.merge, show.legend = F, \n                           group = c(\"act\",\"res\"), measure = \"weight\") + \n  scale_fill_manual(values = colCond3)\ngg1 + gg2\n\n\n\nnetVisual_diffInteraction(cellchat.merge, weight.scale = T)\n\n\n\nnetVisual_diffInteraction(cellchat.merge, weight.scale = T, measure = \"weight\")\n\n\n\ngg1 <- netVisual_heatmap(cellchat.merge)\ngg2 <- netVisual_heatmap(cellchat.merge, measure = \"weight\")\ngg1 + gg2\n\n\n\npar(mfrow = c(1,2), xpd=TRUE)\nfor(i in 1:length(colCond3)) {\n  groupSize <- as.numeric(table(cellchat.merge@idents[i])[c(\"PI16+RC\",names(colImm))])\n  matPre <- cellchat.merge@net[[i]]$weight\n  mat <- matPre[c(\"PI16+RC\",names(colImm)), c(\"PI16+RC\",names(colImm))] \n  mat2 <- matrix(0, nrow = nrow(mat), ncol = ncol(mat), dimnames = dimnames(mat))\n  mat2[\"PI16+RC\", ] <- mat[\"PI16+RC\", ]\n  netVisual_circle(mat2, vertex.weight = groupSize, weight.scale = T,\n                   edge.weight.max = max(mat), title.name = names(colCond3)[i],\n                   color.use = colAll[c(\"PI16+RC\",names(colImm))])\n}\n\n\n\npar(mfrow = c(1,2), xpd=TRUE)\nfor(i in 1:length(colCond3)) {\n  groupSize <- as.numeric(table(cellchat.merge@idents[i])[c(\"PI16+RC\",names(colImm))])\n  matPre <- cellchat.merge@net[[i]]$count\n  mat <- matPre[c(\"PI16+RC\",names(colImm)), c(\"PI16+RC\",names(colImm))] \n  mat2 <- matrix(0, nrow = nrow(mat), ncol = ncol(mat), dimnames = dimnames(mat))\n  mat2[\"PI16+RC\", ] <- mat[\"PI16+RC\", ]\n  netVisual_circle(mat2, vertex.weight = groupSize, weight.scale = T,\n                   edge.weight.max = max(mat), title.name = names(colCond3)[i],\n                   color.use = colAll[c(\"PI16+RC\",names(colImm))])\n}\n\n\n\n\n\n\nchanges in signaling of subsets\n\nnum.link <- sapply(object.list, function(x) {rowSums(x@net$count) + \n    colSums(x@net$count)-diag(x@net$count)})\nweight.MinMax <- c(min(num.link), max(num.link)) \n\ngg <- list()\nfor (i in 1:length(object.list)) {\n  gg[[i]] <- netAnalysis_signalingRole_scatter(object.list[[i]],\n                                               title = names(object.list)[i],\n                                               weight.MinMax = weight.MinMax)\n}\npatchwork::wrap_plots(plots = gg)\n\n\n\ngg <- list()\nfor (i in 1:length(object.list)) {\n  object.list[[i]] <- netAnalysis_computeCentrality(object.list[[i]], slot.name = \"net\")\n  gg[[i]] <- netAnalysis_signalingRole_scatter(object.list[[i]],\n                                               title = names(object.list)[i],\n                                               weight.MinMax = weight.MinMax,\n                                               slot.name = \"net\")\n}\npatchwork::wrap_plots(plots = gg)\n\n\n\ngg1 <- netAnalysis_signalingChanges_scatter(cellchat.merge,\n                                            idents.use = \"PI16+RC\")\ngg1\n\n\n\ngg1 <- netAnalysis_signalingChanges_scatter(cellchat.merge,\n                                            idents.use = \"PI16+RC\",\n                                            xlims = c(-0.01, 0.001),\n                                            ylims = c(-0.01, 0.001),\n                                            top.label=1)\ngg1\n\n\n\n\n\n\nsignaling pathways between cond\n\nnetVisual_embeddingPairwise(cellchat.merge, type = \"functional\", label.size = 2,\n                            top.label=100)\n\n2D visualization of signaling networks from datasets 1 2 \n\n\n\n\nnetVisual_embeddingPairwise(cellchat.merge, type = \"structural\", label.size = 2)\n\n2D visualization of signaling networks from datasets 1 2 \n\n\n\n\nrankSimilarity(cellchat.merge, type = \"functional\")\n\nCompute the distance of signaling networks between datasets 1 2 \n\n\n\n\n\n\n\ndiff usage of PW PI16+ to imm cells\n\ngg1 <- rankNet(cellchat.merge, mode = \"comparison\", stacked = T, do.stat = TRUE,\n               color.use = colCond3, measure = \"weight\",\n               sources.use = \"PI16+RC\", targets.use = c(names(colImm)))\ngg3 <- rankNet(cellchat.merge, mode = \"comparison\", stacked = T, do.stat = TRUE,\n               color.use = colCond3, measure = \"count\",\n               sources.use = \"PI16+RC\", targets.use = c(names(colImm)))\ngg2 <- rankNet(cellchat.merge, mode = \"comparison\", stacked = F, do.stat = TRUE,\n               color.use = colCond3,\n               sources.use = \"PI16+RC\", targets.use = c(names(colImm)))\ngg4 <- rankNet(cellchat.merge, mode = \"comparison\", stacked = F, do.stat = TRUE,\n               color.use = colCond3, measure = \"count\",\n               sources.use = \"PI16+RC\", targets.use = c(names(colImm)))\ngg1\n\n\n\ngg2\n\n\n\ngg3\n\n\n\ngg4\n\n\n\n\n\n\nIF filtered for top PW PI16 to IMM\n\n## Information flow based on interaction strength\nIFweight <- rankNet(cellchat.merge, mode = \"comparison\", stacked = T, do.stat = TRUE,\n               color.use = colCond3, measure = \"weight\", return.data = T,\n               sources.use = \"PI16+RC\", targets.use = c(names(colImm)))\n\n### filter for Sign PW with IF sign diff and top 10 scaled contribution\nIFweightFilAct <- IFweight$signaling.contribution %>% \n  filter(pvalues < 0.01 & contribution.relative.1 < 1 & group == \"act\") %>% \n  slice_max(order_by = contribution.scaled, n = 10)\n\nIFweightFilRes <- IFweight$signaling.contribution %>% \n  filter(pvalues < 0.01 & contribution.relative.1 > 1 & group == \"res\") %>% \n  slice_max(order_by = contribution.scaled, n = 10)\n\n### filter for Sign PW with IF sign diff and top rel contribution\nIFweightFilAct2 <- IFweight$signaling.contribution %>% \n  filter(pvalues < 0.01 & contribution.relative.1 < 1 & group == \"act\") \n\ngg1 <- rankNet(cellchat.merge, mode = \"comparison\", stacked = T, do.stat = F,\n               color.use = colCond3, measure = \"weight\",\n               signaling = c(IFweightFilAct$name, IFweightFilRes$name),\n               sources.use = \"PI16+RC\", targets.use = c(names(colImm)))\ngg2 <- rankNet(cellchat.merge, mode = \"comparison\", stacked = F, do.stat = TRUE,\n               color.use = colCond3, , measure = \"weight\",\n               signaling = c(IFweightFilAct$name, IFweightFilRes$name),\n               sources.use = \"PI16+RC\", targets.use = c(names(colImm)))\ngg3 <- rankNet(cellchat.merge, mode = \"comparison\", stacked = T, do.stat = F,\n               color.use = colCond3, measure = \"weight\",\n               signaling = IFweightFilAct2$name,\n               sources.use = \"PI16+RC\", targets.use = c(names(colImm)))\ngg1\n\n\n\ngg2\n\n\n\ngg3\n\n\n\n## Information flow based on interaction counts\nIFcnts <- rankNet(cellchat.merge, mode = \"comparison\", stacked = T, do.stat = TRUE,\n               color.use = colCond3, measure = \"count\", return.data = T,\n               sources.use = \"PI16+RC\", targets.use = c(names(colImm)))\n\n### filter for Sign PW with IF sign diff and top 10 rel contribution\nIFcntsFilAct <- IFcnts$signaling.contribution %>% \n  filter(pvalues < 0.01 & contribution.relative.1 < 1 & group == \"act\") %>% \n  slice_max(order_by = contribution.scaled, n = 10)\n\nIFcntsFilRes <- IFcnts$signaling.contribution %>% \n  filter(pvalues < 0.01 & contribution.relative.1 > 1 & group == \"res\") %>% \n  slice_max(order_by = contribution.scaled, n = 10)\n\n### filter for Sign PW with IF sign diff and top rel contribution\nIFcntsFilAct2 <- IFcnts$signaling.contribution %>% \n  filter(pvalues < 0.01 & contribution.relative.1 < 1 & group == \"act\") %>% \n  slice_min(order_by = contribution.relative.1, n = 10)\n\ngg1 <- rankNet(cellchat.merge, mode = \"comparison\", stacked = T, do.stat = F,\n               color.use = colCond3, measure = \"weight\",\n               signaling = c(IFcntsFilAct$name, IFcntsFilRes$name),\n               sources.use = \"PI16+RC\", targets.use = c(names(colImm)))\ngg2 <- rankNet(cellchat.merge, mode = \"comparison\", stacked = F, do.stat = TRUE,\n               color.use = colCond3, measure = \"weight\",\n               signaling = c(IFcntsFilAct$name, IFcntsFilRes$name),\n               sources.use = \"PI16+RC\", targets.use = names(colImm))\ngg3 <- rankNet(cellchat.merge, mode = \"comparison\", stacked = T, do.stat = F,\n               color.use = colCond3, measure = \"weight\",\n               signaling = IFcntsFilAct2$name,\n               sources.use = \"PI16+RC\", targets.use = c(names(colImm)))\ngg1\n\n\n\ngg2\n\n\n\ngg3\n\n\n\n\n\nvis exp of RL pairs top PW PI16 to IMM\n\n## filter R-L pairs based on PW\nLRpairDat <- cellchat.merge@LR[[\"act\"]][[\"LRsig\"]] %>%\n  filter(pathway_name %in% IFweightFilAct2$name) %>% \n  dplyr::select(interaction_name)\n\nnetVisual_bubble(cellchat.merge, sources.use = \"PI16+RC\",\n                 targets.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\", \"ILC3\",\n                                 \"naiveB\", \"MBC\", \"plasmaCell\", \"CD8Tcm\",\n                                 \"Mph/DC-1\", \"Mph/DC-2\"),\n                 comparison = c(1, 2), angle.x = 45,\n                 pairLR.use = LRpairDat)\n\n\n\nLRint <- netVisual_bubble(cellchat.merge, sources.use = \"PI16+RC\",\n                 targets.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\", \"ILC3\",\n                                 \"naiveB\", \"MBC\", \"plasmaCell\", \"CD8Tcm\",\n                                 \"Mph/DC-1\", \"Mph/DC-2\"),\n                 comparison = c(1, 2), angle.x = 45, return.data=T,\n                 pairLR.use = LRpairDat)\n\nLRintFil <- LRint$communication %>%\n  dplyr::select(target, interaction_name, dataset, prob) %>% \n  dplyr::group_by(target, interaction_name,) %>% \n  dplyr::slice(which.max(prob)) %>%\n  ungroup() %>% filter(dataset==\"act\") %>% \n  dplyr::select(interaction_name)\n\nnetVisual_bubble(cellchat.merge, sources.use = \"PI16+RC\",\n                 targets.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\", \"ILC3\",\n                                 \"naiveB\", \"MBC\", \"plasmaCell\", \"CD8Tcm\",\n                                 \"Mph/DC-1\", \"Mph/DC-2\"),\n                 comparison = c(1, 2), angle.x = 45,\n                 pairLR.use = LRintFil)\n\n\n\n\n\n\n\ndiff usage of PW imm cells to Pi16\n\ngg1 <- rankNet(cellchat.merge, mode = \"comparison\", stacked = T, do.stat = TRUE,\n               color.use = colCond3, measure = \"weight\",\n               targets.use = \"PI16+RC\", sources.use = c(names(colImm),\"PI16+RC\"))\ngg3 <- rankNet(cellchat.merge, mode = \"comparison\", stacked = T, do.stat = TRUE,\n               color.use = colCond3, measure = \"count\",\n               targets.use = \"PI16+RC\", sources.use = c(names(colImm),\"PI16+RC\"))\ngg2 <- rankNet(cellchat.merge, mode = \"comparison\", stacked = F, do.stat = TRUE,\n               color.use = colCond3,\n               targets.use = \"PI16+RC\", sources.use = c(names(colImm), \"PI16+RC\"))\ngg4 <- rankNet(cellchat.merge, mode = \"comparison\", stacked = F, do.stat = TRUE,\n               color.use = colCond3, measure = \"count\",\n               targets.use = \"PI16+RC\", sources.use = c(names(colImm), \"PI16+RC\"))\ngg1\n\n\n\ngg2\n\n\n\ngg3\n\n\n\ngg4\n\n\n\n### sources only imm\ngg1 <- rankNet(cellchat.merge, mode = \"comparison\", stacked = T, do.stat = TRUE,\n               color.use = colCond3, measure = \"weight\",\n               targets.use = \"PI16+RC\", sources.use = c(names(colImm)))\ngg3 <- rankNet(cellchat.merge, mode = \"comparison\", stacked = T, do.stat = TRUE,\n               color.use = colCond3, measure = \"count\",\n               targets.use = \"PI16+RC\", sources.use = c(names(colImm)))\ngg2 <- rankNet(cellchat.merge, mode = \"comparison\", stacked = F, do.stat = TRUE,\n               color.use = colCond3,\n               targets.use = \"PI16+RC\", sources.use = c(names(colImm)))\ngg4 <- rankNet(cellchat.merge, mode = \"comparison\", stacked = F, do.stat = TRUE,\n               color.use = colCond3, measure = \"count\",\n               targets.use = \"PI16+RC\", sources.use = c(names(colImm)))\ngg1\n\n\n\ngg2\n\n\n\ngg3\n\n\n\ngg4\n\n\n\n\n\n\nIF filtered for top PW IMM plus PI16 to PI16\n\n## Information flow based on interaction strength\nIFweight <- rankNet(cellchat.merge, mode = \"comparison\", stacked = T, do.stat = TRUE,\n               color.use = colCond3, measure = \"weight\", return.data = T,\n               targets.use = \"PI16+RC\", sources.use = c(names(colImm), \"PI16+RC\"))\n\n### filter for Sign PW with IF sign diff and top 10 scaled contribution\nIFweightFilAct <- IFweight$signaling.contribution %>% \n  filter(pvalues < 0.01 & contribution.relative.1 < 1 & group == \"act\") %>% \n  slice_max(order_by = contribution.scaled, n = 10)\n\nIFweightFilRes <- IFweight$signaling.contribution %>% \n  filter(pvalues < 0.01 & contribution.relative.1 > 1 & group == \"res\") %>% \n  slice_max(order_by = contribution.scaled, n = 10)\n\n### filter for Sign PW with IF sign diff and top rel contribution\nIFweightFilAct2 <- IFweight$signaling.contribution %>% \n  filter(pvalues < 0.01 & contribution.relative.1 < 1 & group == \"act\") \n\ngg1 <- rankNet(cellchat.merge, mode = \"comparison\", stacked = T, do.stat = F,\n               color.use = colCond3, measure = \"weight\",\n               signaling = c(IFweightFilAct$name, IFweightFilRes$name),\n               targets.use = \"PI16+RC\", sources.use = c(names(colImm), \"PI16+RC\"))\ngg2 <- rankNet(cellchat.merge, mode = \"comparison\", stacked = F, do.stat = TRUE,\n               color.use = colCond3, measure = \"weight\",\n               signaling = c(IFweightFilAct$name, IFweightFilRes$name),\n               targets.use = \"PI16+RC\", sources.use = c(names(colImm), \"PI16+RC\"))\ngg3 <- rankNet(cellchat.merge, mode = \"comparison\", stacked = T, do.stat = F,\n               color.use = colCond3, measure = \"weight\",\n               signaling = IFweightFilAct2$name,\n               targets.use = \"PI16+RC\", sources.use = c(names(colImm), \"PI16+RC\"))\ngg1\n\n\n\ngg2\n\n\n\ngg3\n\n\n\n## Information flow based on interaction counts\nIFcnts <- rankNet(cellchat.merge, mode = \"comparison\", stacked = T, do.stat = TRUE,\n               color.use = colCond3, measure = \"count\", return.data = T,\n               targets.use = \"PI16+RC\", sources.use = c(names(colImm), \"PI16+RC\"))\n\n### filter for Sign PW with IF sign diff and top 10 rel contribution\nIFcntsFilAct <- IFcnts$signaling.contribution %>% \n  filter(pvalues < 0.01 & contribution.relative.1 < 1 & group == \"act\") %>% \n  slice_max(order_by = contribution.scaled, n = 10)\n\nIFcntsFilRes <- IFcnts$signaling.contribution %>% \n  filter(pvalues < 0.01 & contribution.relative.1 > 1 & group == \"res\") %>% \n  slice_max(order_by = contribution.scaled, n = 10)\n\n### filter for Sign PW with IF sign diff and top rel contribution\nIFcntsFilAct2 <- IFcnts$signaling.contribution %>% \n  filter(pvalues < 0.01 & contribution.relative.1 < 1 & group == \"act\") %>% \n  slice_min(order_by = contribution.relative.1, n = 10)\n\ngg1 <- rankNet(cellchat.merge, mode = \"comparison\", stacked = T, do.stat = F,\n               color.use = colCond3, measure = \"weight\",\n               signaling = c(IFcntsFilAct$name, IFcntsFilRes$name),\n               targets.use = \"PI16+RC\", sources.use = c(names(colImm), \"PI16+RC\"))\ngg2 <- rankNet(cellchat.merge, mode = \"comparison\", stacked = F, do.stat = TRUE,\n               color.use = colCond3, measure = \"weight\",\n               signaling = c(IFcntsFilAct$name, IFcntsFilRes$name),\n               targets.use = \"PI16+RC\", sources.use = c(names(colImm), \"PI16+RC\"))\ngg3 <- rankNet(cellchat.merge, mode = \"comparison\", stacked = T, do.stat = F,\n               color.use = colCond3, measure = \"weight\",\n               signaling = IFcntsFilAct2$name,\n               targets.use = \"PI16+RC\", sources.use = c(names(colImm), \"PI16+RC\"))\ngg1\n\n\n\ngg2\n\n\n\ngg3\n\n\n\n\n\nvis exp of RL pairs top PW IMM plus PI16 to PI16\n\n## filter R-L pairs based on PW\nLRpairDat <- cellchat.merge@LR[[\"act\"]][[\"LRsig\"]] %>%\n  filter(pathway_name %in% IFweightFilAct2$name) %>% \n  dplyr::select(interaction_name)\n\nnetVisual_bubble(cellchat.merge, \n                 targets.use = \"PI16+RC\",\n                 sources.use = c(names(colImm), \"PI16+RC\"),\n                 comparison = c(1, 2), angle.x = 45,\n                 pairLR.use = LRpairDat)\n\n\n\nLRint <- netVisual_bubble(cellchat.merge, targets.use = \"PI16+RC\", \n                          sources.use = c(names(colImm), \"PI16+RC\"),\n                 comparison = c(1, 2), angle.x = 45, return.data=T,\n                 pairLR.use = LRpairDat)\n\nLRintFil <- LRint$communication %>%\n  dplyr::select(target, interaction_name, dataset, prob) %>% \n  dplyr::group_by(target, interaction_name,) %>% \n  dplyr::slice(which.max(prob)) %>%\n  ungroup() %>% filter(dataset==\"act\") %>% \n  dplyr::select(interaction_name)\n\nnetVisual_bubble(cellchat.merge, targets.use = \"PI16+RC\",\n                 sources.use = c(names(colImm), \"PI16+RC\"),\n                 comparison = c(1, 2), angle.x = 45,\n                 pairLR.use = LRintFil)\n\n\n\n\n\n\n\nIF filtered for top PW IMM to PI16\n\n## Information flow based on interaction strength\nIFweight <- rankNet(cellchat.merge, mode = \"comparison\", stacked = T, do.stat = TRUE,\n               color.use = colCond3, measure = \"weight\", return.data = T,\n               targets.use = \"PI16+RC\", sources.use = c(names(colImm)))\n\n\n### filter for Sign PW with IF sign diff and top rel contribution\nIFweightFilAct2 <- IFweight$signaling.contribution %>% \n  filter(pvalues < 0.01 & contribution.relative.1 < 1 & group == \"act\") \n\ngg3 <- rankNet(cellchat.merge, mode = \"comparison\", stacked = T, do.stat = F,\n               color.use = colCond3, measure = \"weight\",\n               signaling = IFweightFilAct2$name,\n               targets.use = \"PI16+RC\", sources.use = c(names(colImm)))\ngg3\n\n\n\n\n\nvis exp of RL pairs top PW IMM to PI16\n\n## filter R-L pairs based on PW - source only imm cells\nLRpairDat <- cellchat.merge@LR[[\"act\"]][[\"LRsig\"]] %>%\n  filter(pathway_name %in% IFweightFilAct2$name) %>% \n  dplyr::select(interaction_name)\n\nnetVisual_bubble(cellchat.merge, \n                 targets.use = \"PI16+RC\",\n                 sources.use = c(names(colImm)),\n                 comparison = c(1, 2), angle.x = 45,\n                 pairLR.use = LRpairDat)\n\n\n\nLRint <- netVisual_bubble(cellchat.merge, targets.use = \"PI16+RC\", \n                          sources.use = c(names(colImm)),\n                 comparison = c(1, 2), angle.x = 45, return.data=T,\n                 pairLR.use = LRpairDat)\n\nLRintFil <- LRint$communication %>%\n  dplyr::select(target, interaction_name, dataset, prob) %>% \n  dplyr::group_by(target, interaction_name,) %>% \n  dplyr::slice(which.max(prob)) %>%\n  ungroup() %>% filter(dataset==\"act\") %>% \n  dplyr::select(interaction_name)\n\nnetVisual_bubble(cellchat.merge, targets.use = \"PI16+RC\",\n                 sources.use = c(names(colImm)),\n                 comparison = c(1, 2), angle.x = 45,\n                 pairLR.use = LRintFil)\n\n\n\n\n\n\n\nin out signalling\n\ni = 1\npathway.union <- union(object.list[[i]]@netP$pathways, object.list[[i+1]]@netP$pathways)\nht1 = netAnalysis_signalingRole_heatmap(object.list[[i]], pattern = \"outgoing\",\n                                        signaling = pathway.union,\n                                        title = names(object.list)[i],\n                                        width = 12, height = 26)\nht2 = netAnalysis_signalingRole_heatmap(object.list[[i+1]],\n                                        pattern = \"outgoing\",\n                                        signaling = pathway.union,\n                                        title = names(object.list)[i+1],\n                                        width = 12, height = 26)\ndraw(ht1 + ht2, ht_gap = unit(0.5, \"cm\"))\n\n\n\nht1 = netAnalysis_signalingRole_heatmap(object.list[[i]], pattern = \"incoming\",\n                                        signaling = pathway.union,\n                                        title = names(object.list)[i],\n                                        width = 12, height = 26,\n                                        color.heatmap = \"GnBu\")\nht2 = netAnalysis_signalingRole_heatmap(object.list[[i+1]],\n                                        pattern = \"incoming\",\n                                        signaling = pathway.union,\n                                        title = names(object.list)[i+1],\n                                        width = 12, height = 26, \n                                        color.heatmap = \"GnBu\")\ndraw(ht1 + ht2, ht_gap = unit(0.5, \"cm\"))\n\n\n\n\n\n\nR L pairs\n\nvis exp of RL pairs\n\nnetVisual_bubble(cellchat.merge, sources.use = \"PI16+RC\",\n                 targets.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\", \"ILC3\",\n                                 \"naiveB\", \"MBC\", \"plasmaCell\", \"CD8Tcm\",\n                                 \"Mph/DC-1\", \"Mph/DC-2\"),\n                 comparison = c(1, 2), angle.x = 45)\n\n\n\nnetVisual_bubble(cellchat.merge, sources.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\", \"ILC3\",\n                                 \"naiveB\", \"MBC\", \"plasmaCell\", \"CD8Tcm\",\n                                 \"Mph/DC-1\", \"Mph/DC-2\"),\n                 targets.use = \"PI16+RC\",\n                 comparison = c(1, 2), angle.x = 45)\n\n\n\n\n\n\nvis exp of diff RL pairs\n\n##### ----------------- FRC to immune cells ------------------- ######\n\ngg1 <- netVisual_bubble(cellchat.merge, sources.use = \"PI16+RC\",\n                        targets.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\", \"ILC3\",\n                                 \"naiveB\", \"MBC\", \"plasmaCell\", \"CD8Tcm\",\n                                 \"Mph/DC-1\", \"Mph/DC-2\"), \n                        comparison = c(1, 2), max.dataset = 2,\n                        title.name = \"Increased signaling in resting\", angle.x = 45,\n                        remove.isolate = T)\ngg2 <- netVisual_bubble(cellchat.merge, sources.use = \"PI16+RC\",\n                        targets.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\", \"ILC3\",\n                                 \"naiveB\", \"MBC\", \"plasmaCell\", \"CD8Tcm\",\n                                 \"Mph/DC-1\", \"Mph/DC-2\"),\n                        comparison = c(1, 2), max.dataset = 1,\n                        title.name = \"Increased signaling in activated\", angle.x = 45,\n                        remove.isolate = T)\ngg1 + gg2\n\n\n\n##### ----------------- Immune cells to FRCs ------------------- ######\n\ngg1 <- netVisual_bubble(cellchat.merge, sources.use = c(\"CD4T\", \"CTL/NKcell\",\n                                                        \"GCB\", \"ILC3\",\n                                 \"naiveB\", \"MBC\", \"plasmaCell\", \"CD8Tcm\",\n                                 \"Mph/DC-1\", \"Mph/DC-2\"),\n                        targets.use = \"PI16+RC\", \n                        comparison = c(1, 2), max.dataset = 2,\n                        title.name = \"Increased signaling in resting\", angle.x = 45,\n                        remove.isolate = T)\ngg2 <- netVisual_bubble(cellchat.merge, sources.use = c(\"CD4T\", \"CTL/NKcell\",\n                                                        \"GCB\", \"ILC3\",\n                                 \"naiveB\", \"MBC\", \"plasmaCell\", \"CD8Tcm\",\n                                 \"Mph/DC-1\", \"Mph/DC-2\"),\n                        targets.use = \"PI16+RC\",\n                        comparison = c(1, 2), max.dataset = 1,\n                        title.name = \"Increased signaling in activated\", angle.x = 45,\n                        remove.isolate = T)\ngg1 + gg2"
  },
  {
    "objectID": "analysis/runCellchat_act_vs_res_PI16.html#session-info",
    "href": "analysis/runCellchat_act_vs_res_PI16.html#session-info",
    "title": "run cellchat scRNAseq data on PI16+RC",
    "section": "session info",
    "text": "session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] grid      stats4    stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] ComplexHeatmap_2.16.0       patchwork_1.2.0             CellChat_1.6.1             \n [4] igraph_2.0.2                scran_1.28.2                scater_1.28.0              \n [7] scuttle_1.10.3              SingleCellExperiment_1.22.0 SummarizedExperiment_1.30.2\n[10] Biobase_2.60.0              GenomicRanges_1.52.1        GenomeInfoDb_1.36.4        \n[13] IRanges_2.36.0              S4Vectors_0.40.1            BiocGenerics_0.48.0        \n[16] MatrixGenerics_1.12.3       matrixStats_1.2.0           pheatmap_1.0.12            \n[19] ggsci_3.0.1                 here_1.0.1                  runSeurat3_0.1.0           \n[22] ggpubr_0.6.0                lubridate_1.9.3             forcats_1.0.0              \n[25] stringr_1.5.1               readr_2.1.5                 tidyr_1.3.1                \n[28] tibble_3.2.1                tidyverse_2.0.0             Seurat_5.0.2               \n[31] SeuratObject_5.0.1          sp_2.1-3                    purrr_1.0.2                \n[34] ggplot2_3.5.0               reshape2_1.4.4              dplyr_1.1.4                \n\nloaded via a namespace (and not attached):\n  [1] spatstat.sparse_3.0-3     bitops_1.0-7              httr_1.4.7               \n  [4] RColorBrewer_1.1-3        doParallel_1.0.17         tools_4.3.0              \n  [7] sctransform_0.4.1         backports_1.4.1           utf8_1.2.4               \n [10] R6_2.5.1                  lazyeval_0.2.2            uwot_0.1.16              \n [13] GetoptLong_1.0.5          withr_3.0.0               gridExtra_2.3            \n [16] progressr_0.14.0          cli_3.6.2                 Cairo_1.6-2              \n [19] spatstat.explore_3.2-6    fastDummies_1.7.3         network_1.18.2           \n [22] labeling_0.4.3            spatstat.data_3.0-4       ggridges_0.5.6           \n [25] pbapply_1.7-2             systemfonts_1.0.5         svglite_2.1.3            \n [28] parallelly_1.37.1         limma_3.56.2              rstudioapi_0.15.0        \n [31] FNN_1.1.4                 generics_0.1.3            shape_1.4.6.1            \n [34] ica_1.0-3                 spatstat.random_3.2-3     car_3.1-2                \n [37] Matrix_1.6-5              ggbeeswarm_0.7.2          fansi_1.0.6              \n [40] abind_1.4-5               lifecycle_1.0.4           yaml_2.3.8               \n [43] edgeR_3.42.4              carData_3.0-5             Rtsne_0.17               \n [46] promises_1.2.1            dqrng_0.3.2               crayon_1.5.2             \n [49] miniUI_0.1.1.1            lattice_0.22-5            beachmat_2.16.0          \n [52] cowplot_1.1.3             magick_2.8.3              sna_2.7-2                \n [55] pillar_1.9.0              knitr_1.45                metapod_1.8.0            \n [58] rjson_0.2.21              future.apply_1.11.1       codetools_0.2-19         \n [61] leiden_0.4.3.1            glue_1.7.0                data.table_1.15.2        \n [64] vctrs_0.6.5               png_0.1-8                 spam_2.10-0              \n [67] gtable_0.3.4              xfun_0.42                 S4Arrays_1.0.6           \n [70] mime_0.12                 coda_0.19-4.1             survival_3.5-8           \n [73] iterators_1.0.14          statmod_1.5.0             bluster_1.10.0           \n [76] ellipsis_0.3.2            fitdistrplus_1.1-11       ROCR_1.0-11              \n [79] nlme_3.1-164              RcppAnnoy_0.0.22          rprojroot_2.0.4          \n [82] irlba_2.3.5.1             vipor_0.4.7               KernSmooth_2.23-22       \n [85] colorspace_2.1-0          tidyselect_1.2.0          compiler_4.3.0           \n [88] BiocNeighbors_1.18.0      DelayedArray_0.26.7       plotly_4.10.4            \n [91] scales_1.3.0              lmtest_0.9-40             NMF_0.27                 \n [94] digest_0.6.34             goftest_1.2-3             spatstat.utils_3.0-4     \n [97] rmarkdown_2.26            XVector_0.40.0            htmltools_0.5.7          \n[100] pkgconfig_2.0.3           sparseMatrixStats_1.12.2  fastmap_1.1.1            \n[103] rlang_1.1.3               GlobalOptions_0.1.2       htmlwidgets_1.6.4        \n[106] shiny_1.8.0               DelayedMatrixStats_1.22.6 farver_2.1.1             \n[109] zoo_1.8-12                jsonlite_1.8.8            statnet.common_4.9.0     \n[112] BiocParallel_1.34.2       BiocSingular_1.16.0       RCurl_1.98-1.14          \n[115] magrittr_2.0.3            ggnetwork_0.5.13          GenomeInfoDbData_1.2.10  \n[118] dotCall64_1.1-1           munsell_0.5.0             Rcpp_1.0.12              \n[121] viridis_0.6.5             reticulate_1.35.0         stringi_1.8.3            \n[124] ggalluvial_0.12.5         zlibbioc_1.46.0           MASS_7.3-60.0.1          \n[127] plyr_1.8.9                parallel_4.3.0            listenv_0.9.1            \n[130] ggrepel_0.9.5             deldir_2.0-4              splines_4.3.0            \n[133] tensor_1.5                hms_1.1.3                 circlize_0.4.16          \n[136] locfit_1.5-9.9            spatstat.geom_3.2-9       ggsignif_0.6.4           \n[139] RcppHNSW_0.6.0            rngtools_1.5.2            ScaledMatrix_1.8.1       \n[142] evaluate_0.23             tzdb_0.4.0                foreach_1.5.2            \n[145] httpuv_1.6.14             RANN_2.6.1                polyclip_1.10-6          \n[148] future_1.33.1             clue_0.3-65               scattermore_1.2          \n[151] gridBase_0.4-7            rsvd_1.0.5                broom_1.0.5              \n[154] xtable_1.8-4              RSpectra_0.16-1           rstatix_0.7.2            \n[157] later_1.3.2               viridisLite_0.4.2         beeswarm_0.4.0           \n[160] registry_0.5-1            cluster_2.1.6             timechange_0.3.0         \n[163] globals_0.16.2           \n\ndate()\n\n[1] \"Wed Mar 13 21:44:56 2024\""
  },
  {
    "objectID": "analysis/visBECMarkerGenes_woCM.html#load-packages",
    "href": "analysis/visBECMarkerGenes_woCM.html#load-packages",
    "title": "visualize BEC marker human LN",
    "section": "Load packages",
    "text": "Load packages\n\n## load packages \nsuppressPackageStartupMessages({\n  library(dplyr)\n  library(reshape2)\n  library(ggplot2)\n  library(cowplot)\n  library(purrr)\n  library(Seurat)\n  library(tidyverse)\n  library(ggpubr)\n  library(runSeurat3)\n  library(here)\n  library(ggsci)\n  library(pheatmap)\n  library(scater)\n})"
  },
  {
    "objectID": "analysis/visBECMarkerGenes_woCM.html#load-seurat-object",
    "href": "analysis/visBECMarkerGenes_woCM.html#load-seurat-object",
    "title": "visualize BEC marker human LN",
    "section": "load seurat object",
    "text": "load seurat object\n\nbasedir <- here()\n\nseurat <- readRDS(file= paste0(basedir,\n                            \"/data/AllPatWithoutCM_BEConly_intOrig_seurat.rds\"))\n\nDefaultAssay(object = seurat) <- \"RNA\"\nseurat$intCluster <- seurat$integrated_snn_res.0.4\nIdents(seurat) <- seurat$intCluster\n\n\n## set col palettes\ncolPal <- colPal <- c(pal_nejm()(8))[1:length(unique(seurat$intCluster))]\nnames(colPal) <- unique(seurat$intCluster)\n\ncolLab <- c(\"#79AF97FF\",\"#374E55FF\",\"#B24745FF\",\"#DF8F44FF\",\"#6A6599FF\",\n             \"#D595A7FF\")\nnames(colLab) <- c(\"SCScLEC\",\"MedCapsLEC\",  \"SCSfLEC\", \"MedSinusLEC\",  \n                   \"ParacortLEC\",\"ValveLEC\")\n\ncolPat <- c(pal_nejm()(7),pal_futurama()(12))[1:length(unique(seurat$patient))]\nnames(colPat) <- unique(seurat$patient)\ncolCond <- c(\"#6692a3\",\"#971c1c\",\"#d17d67\")\nnames(colCond) <- unique(seurat$cond)\ncolGrp <- pal_uchicago()(length(unique(seurat$grp)))\nnames(colGrp) <- unique(seurat$grp)\ncolOri <- pal_npg()(length(unique(seurat$origin)))\nnames(colOri) <- unique(seurat$origin)\n\ncolCond2 <- c(\"#6692a3\",\"#971c1c\")\nnames(colCond2) <- c(\"resting\", \"activated\")"
  },
  {
    "objectID": "analysis/visBECMarkerGenes_woCM.html#visualize-data",
    "href": "analysis/visBECMarkerGenes_woCM.html#visualize-data",
    "title": "visualize BEC marker human LN",
    "section": "visualize data",
    "text": "visualize data\n\nclustering\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPal)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colPal, pt.size=0.5)+\n  theme_void()\n\n\n\n\n\n\ncluster split by cond\n\nDimPlot(seurat, reduction = \"umap\", cols=colPal, pt.size=0.5,\n        split.by = \"cond2\")+\n  theme_void()\n\n\n\n\n\n\npatient\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\",\n        pt.size=0.5, shuffle = T)+\n  theme_void()\n\n\n\n\n\n\ncond\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colCond2, group.by = \"cond2\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colCond2, group.by = \"cond2\",\n        pt.size=0.5, shuffle = T)+\n  theme_void()\n\n\n\n\n\n\ngrp\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colGrp, group.by = \"grp\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\norigin\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colOri, group.by = \"origin\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")"
  },
  {
    "objectID": "analysis/visBECMarkerGenes_woCM.html#vis-cluster-marker",
    "href": "analysis/visBECMarkerGenes_woCM.html#vis-cluster-marker",
    "title": "visualize BEC marker human LN",
    "section": "vis cluster marker",
    "text": "vis cluster marker\n\nmarker genes\n\nseurat_markers_all <- FindAllMarkers(object = seurat, assay =\"RNA\",\n                                     only.pos = TRUE, min.pct = 0.25,\n                                     logfc.threshold = 0.25,\n                                     test.use = \"wilcox\")\n\n\n\navg heatmap\n\ncluster <- levels(seurat)\nselGenesAll <- seurat_markers_all %>% group_by(cluster) %>% \n  top_n(-20, p_val_adj) %>% \n  top_n(20, avg_log2FC)\nselGenesAll <- selGenesAll %>% mutate(geneIDval=gsub(\"^.*\\\\.\", \"\", gene)) %>% filter(nchar(geneIDval)>1)\n\nIdents(seurat) <- seurat$intCluster\npOut <- avgHeatmap(seurat = seurat, selGenes = selGenesAll,\n                  colVecIdent = colPal, \n                  ordVec=levels(seurat),\n                  gapVecR=NULL, gapVecC=NULL,cc=FALSE,\n                  cr=T, condCol=F)"
  },
  {
    "objectID": "analysis/visBECMarkerGenes_woCM.html#write-table",
    "href": "analysis/visBECMarkerGenes_woCM.html#write-table",
    "title": "visualize BEC marker human LN",
    "section": "write table",
    "text": "write table\n\nwrite.table(seurat_markers_all,\n            file=paste0(basedir,\n                        \"/data/AllPatWithoutCM_LEConly_intOrig_markerGenes.txt\"),\n            row.names = FALSE, col.names = TRUE, quote = FALSE, sep = \"\\t\")"
  },
  {
    "objectID": "analysis/visBECMarkerGenes_woCM.html#asign-labels",
    "href": "analysis/visBECMarkerGenes_woCM.html#asign-labels",
    "title": "visualize BEC marker human LN",
    "section": "asign labels",
    "text": "asign labels\n\nseurat$label <- \"ABEC\"\nseurat$label[which(seurat$intCluster %in% c(\"3\"))] <- \"aBEC\"\nseurat$label[which(seurat$intCluster %in% c(\"2\"))] <- \"cBEC\"\nseurat$label[which(seurat$intCluster %in% c(\"9\"))] <- \"CapIfn\"\nseurat$label[which(seurat$intCluster %in% c(\"6\"))] <- \"VBEC\"\nseurat$label[which(seurat$intCluster %in% c(\"0\"))] <- \"aHEV\"\nseurat$label[which(seurat$intCluster %in% c(\"1\"))] <- \"hHEV1\"\nseurat$label[which(seurat$intCluster %in% c(\"4\"))] <- \"hHEV2\"\n\n\nseurat$label2 <- \"Venous\"\nseurat$label2[which(seurat$intCluster %in% c(\"2\", \"9\"))] <- \"Cappilary\"\nseurat$label2[which(seurat$intCluster %in% c(\"5\", \"3\"))] <- \"Arterial\"\n\n\ncolLab <- c(\"#74242a\", \"#a74a51\", \"#c79113\", \"#71530b\", \"#242b3f\", \"#3f4a6e\",\n                     \"#5f6a8e\", \"#a4aabf\")\nnames(colLab) <- c(\"ABEC\",\"aBEC\",  \"cBEC\", \"CapIfn\", \"VBEC\", \"hHEV1\", \n                   \"hHEV2\", \"aHEV\")\n\ncolLab2 <- c(\"#48557e\", \"#e3a616\",\"#9a3038\")\nnames(colLab2) <- c(\"Venous\", \"Cappilary\", \"Arterial\")"
  },
  {
    "objectID": "analysis/visBECMarkerGenes_woCM.html#visualize-label",
    "href": "analysis/visBECMarkerGenes_woCM.html#visualize-label",
    "title": "visualize BEC marker human LN",
    "section": "visualize label",
    "text": "visualize label\n\nIdents(seurat) <- seurat$label\n\nDimPlot(seurat, reduction = \"umap\", cols=colLab)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colLab, pt.size=0.5)+\n  theme_void()"
  },
  {
    "objectID": "analysis/visBECMarkerGenes_woCM.html#visualize-label2",
    "href": "analysis/visBECMarkerGenes_woCM.html#visualize-label2",
    "title": "visualize BEC marker human LN",
    "section": "visualize label2",
    "text": "visualize label2\n\nIdents(seurat) <- seurat$label2\n\nDimPlot(seurat, reduction = \"umap\", cols=colLab2)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colLab2, pt.size=0.5)+\n  theme_void()"
  },
  {
    "objectID": "analysis/visBECMarkerGenes_woCM.html#vis-selected-bec-marker",
    "href": "analysis/visBECMarkerGenes_woCM.html#vis-selected-bec-marker",
    "title": "visualize BEC marker human LN",
    "section": "vis selected BEC marker",
    "text": "vis selected BEC marker\n\ngenes <- data.frame(gene=rownames(seurat)) %>% \n    mutate(geneID=gsub(\"^.*\\\\.\", \"\", gene)) \n\nselGenesAll <- read_tsv(file = paste0(basedir,\n                                      \"/data/overallBECMarker.txt\")) %>% \n  left_join(., genes, by = \"geneID\")\n\nseurat$label <- factor(seurat$label, levels = names(colLab))\nIdents(seurat) <- seurat$label\n\npOut <- avgHeatmap(seurat = seurat, selGenes = selGenesAll,\n                  colVecIdent = colLab, \n                  ordVec=levels(seurat),\n                  gapVecR=NULL, gapVecC=NULL,cc=F,\n                  cr=F, condCol=F)\n\n\n\n\n\nDotplot\n\nDotPlot(seurat, assay=\"RNA\", features = rev(selGenesAll$gene), scale =T,\n        cluster.idents = F) +\n  scale_color_viridis_c() +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  scale_x_discrete(breaks=rev(selGenesAll$gene), labels=rev(selGenesAll$geneID)) +\n  xlab(\"\") + ylab(\"\")\n\n\n\nDotPlot(seurat, assay=\"RNA\", features = rev(selGenesAll$gene), scale =F,\n        cluster.idents = F) +\n  scale_color_viridis_c() +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  scale_x_discrete(breaks=rev(selGenesAll$gene), labels=rev(selGenesAll$geneID)) +\n  xlab(\"\") + ylab(\"\")\n\n\n\n\n\n\nFeatureplot\n\npList <- sapply(selGenesAll$gene, function(x){\np <- FeaturePlot(seurat, reduction = \"umap\", \n            features = x,\n            cols=c(\"lightgrey\", \"darkred\"),\n            order = F)+\n  theme(legend.position=\"right\")\n  plot(p)\n})"
  },
  {
    "objectID": "analysis/visBECMarkerGenes_woCM.html#save-labeled-seurat-object",
    "href": "analysis/visBECMarkerGenes_woCM.html#save-labeled-seurat-object",
    "title": "visualize BEC marker human LN",
    "section": "save labeled seurat object",
    "text": "save labeled seurat object\n\nsaveRDS(seurat, paste0(basedir,\n                            \"/data/AllPatWithoutCM_BEConly_intOrig_label\",\n                       \"_seurat.rds\"))"
  },
  {
    "objectID": "analysis/visBECMarkerGenes_woCM.html#session-info",
    "href": "analysis/visBECMarkerGenes_woCM.html#session-info",
    "title": "visualize BEC marker human LN",
    "section": "session info",
    "text": "session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] scater_1.28.0               scuttle_1.10.3              SingleCellExperiment_1.22.0\n [4] SummarizedExperiment_1.30.2 Biobase_2.60.0              GenomicRanges_1.52.1       \n [7] GenomeInfoDb_1.36.4         IRanges_2.36.0              S4Vectors_0.40.1           \n[10] BiocGenerics_0.48.0         MatrixGenerics_1.12.3       matrixStats_1.2.0          \n[13] pheatmap_1.0.12             ggsci_3.0.1                 here_1.0.1                 \n[16] runSeurat3_0.1.0            ggpubr_0.6.0                lubridate_1.9.3            \n[19] forcats_1.0.0               stringr_1.5.1               readr_2.1.5                \n[22] tidyr_1.3.1                 tibble_3.2.1                tidyverse_2.0.0            \n[25] Seurat_5.0.2                SeuratObject_5.0.1          sp_2.1-3                   \n[28] purrr_1.0.2                 cowplot_1.1.3               ggplot2_3.5.0              \n[31] reshape2_1.4.4              dplyr_1.1.4                \n\nloaded via a namespace (and not attached):\n  [1] RcppAnnoy_0.0.22          splines_4.3.0             later_1.3.2              \n  [4] bitops_1.0-7              polyclip_1.10-6           fastDummies_1.7.3        \n  [7] lifecycle_1.0.4           rstatix_0.7.2             rprojroot_2.0.4          \n [10] vroom_1.6.5               globals_0.16.2            lattice_0.22-5           \n [13] MASS_7.3-60.0.1           backports_1.4.1           magrittr_2.0.3           \n [16] limma_3.56.2              plotly_4.10.4             rmarkdown_2.26           \n [19] yaml_2.3.8                httpuv_1.6.14             sctransform_0.4.1        \n [22] spam_2.10-0               spatstat.sparse_3.0-3     reticulate_1.35.0        \n [25] pbapply_1.7-2             RColorBrewer_1.1-3        abind_1.4-5              \n [28] zlibbioc_1.46.0           Rtsne_0.17                presto_1.0.0             \n [31] RCurl_1.98-1.14           GenomeInfoDbData_1.2.10   ggrepel_0.9.5            \n [34] irlba_2.3.5.1             listenv_0.9.1             spatstat.utils_3.0-4     \n [37] goftest_1.2-3             RSpectra_0.16-1           spatstat.random_3.2-3    \n [40] fitdistrplus_1.1-11       parallelly_1.37.1         DelayedMatrixStats_1.22.6\n [43] leiden_0.4.3.1            codetools_0.2-19          DelayedArray_0.26.7      \n [46] tidyselect_1.2.0          farver_2.1.1              viridis_0.6.5            \n [49] ScaledMatrix_1.8.1        spatstat.explore_3.2-6    jsonlite_1.8.8           \n [52] BiocNeighbors_1.18.0      ellipsis_0.3.2            progressr_0.14.0         \n [55] ggridges_0.5.6            survival_3.5-8            tools_4.3.0              \n [58] ica_1.0-3                 Rcpp_1.0.12               glue_1.7.0               \n [61] gridExtra_2.3             xfun_0.42                 withr_3.0.0              \n [64] fastmap_1.1.1             fansi_1.0.6               rsvd_1.0.5               \n [67] digest_0.6.34             timechange_0.3.0          R6_2.5.1                 \n [70] mime_0.12                 colorspace_2.1-0          scattermore_1.2          \n [73] tensor_1.5                spatstat.data_3.0-4       utf8_1.2.4               \n [76] generics_0.1.3            data.table_1.15.2         httr_1.4.7               \n [79] htmlwidgets_1.6.4         S4Arrays_1.0.6            uwot_0.1.16              \n [82] pkgconfig_2.0.3           gtable_0.3.4              lmtest_0.9-40            \n [85] XVector_0.40.0            htmltools_0.5.7           carData_3.0-5            \n [88] dotCall64_1.1-1           scales_1.3.0              png_0.1-8                \n [91] knitr_1.45                rstudioapi_0.15.0         tzdb_0.4.0               \n [94] nlme_3.1-164              zoo_1.8-12                KernSmooth_2.23-22       \n [97] vipor_0.4.7               parallel_4.3.0            miniUI_0.1.1.1           \n[100] pillar_1.9.0              grid_4.3.0                vctrs_0.6.5              \n[103] RANN_2.6.1                promises_1.2.1            BiocSingular_1.16.0      \n[106] car_3.1-2                 beachmat_2.16.0           xtable_1.8-4             \n[109] cluster_2.1.6             beeswarm_0.4.0            evaluate_0.23            \n[112] cli_3.6.2                 compiler_4.3.0            rlang_1.1.3              \n[115] crayon_1.5.2              future.apply_1.11.1       ggsignif_0.6.4           \n[118] labeling_0.4.3            ggbeeswarm_0.7.2          plyr_1.8.9               \n[121] stringi_1.8.3             BiocParallel_1.34.2       viridisLite_0.4.2        \n[124] deldir_2.0-4              munsell_0.5.0             lazyeval_0.2.2           \n[127] spatstat.geom_3.2-9       Matrix_1.6-5              RcppHNSW_0.6.0           \n[130] hms_1.1.3                 patchwork_1.2.0           bit64_4.0.5              \n[133] sparseMatrixStats_1.12.2  future_1.33.1             shiny_1.8.0              \n[136] ROCR_1.0-11               igraph_2.0.2              broom_1.0.5              \n[139] bit_4.0.5                \n\ndate()\n\n[1] \"Wed Mar 13 21:46:43 2024\""
  },
  {
    "objectID": "analysis/visFRCMarkerGenes_woCMResting.html#load-packages",
    "href": "analysis/visFRCMarkerGenes_woCMResting.html#load-packages",
    "title": "visualize marker genes stromal cells - resting LN only",
    "section": "Load packages",
    "text": "Load packages\n\n## load packages \nsuppressPackageStartupMessages({\n  library(dplyr)\n  library(reshape2)\n  library(ggplot2)\n  library(cowplot)\n  library(purrr)\n  library(Seurat)\n  library(tidyverse)\n  library(ggpubr)\n  library(runSeurat3)\n  library(here)\n  library(ggsci)\n  library(pheatmap)\n  library(scater)\n})"
  },
  {
    "objectID": "analysis/visFRCMarkerGenes_woCMResting.html#load-seurat-object",
    "href": "analysis/visFRCMarkerGenes_woCMResting.html#load-seurat-object",
    "title": "visualize marker genes stromal cells - resting LN only",
    "section": "load seurat object",
    "text": "load seurat object\n\nbasedir <- here()\n\n## load seurat object from previous analysis\nseurat <- readRDS(file=paste0(basedir,\n                              \"/data/AllPatWithoutCM_LNFSCMerged_seurat.rds\"))\nseurat <- subset(seurat, cond==\"resting\")\n## set col palettes\ncolPal <- c(pal_nejm()(7),pal_futurama()(12))[1:length(levels(seurat))]\ncolPal <- c(\"#c29f2d\", \"#cb6021\", \"#893149\", \"#524b86\", \"#1f84aa\",\n            \"#d38c6e\",\"#50a565\",\"#242a8b\",\"#297563\",\"#667c63\",\"#c94141\")\nnames(colPal) <- levels(seurat)\ncolPat <- c(pal_nejm()(7),pal_futurama()(12))[1:length(unique(seurat$patient))]\nnames(colPat) <- unique(seurat$patient)\ncolCond <- c(\"#6692a3\",\"#971c1c\",\"#d17d67\")\nnames(colCond) <- unique(seurat$cond)\ncolGrp <- pal_uchicago()(length(unique(seurat$grp)))\nnames(colGrp) <- unique(seurat$grp)\ncolOri <- pal_npg()(length(unique(seurat$origin)))\nnames(colOri) <- unique(seurat$origin)"
  },
  {
    "objectID": "analysis/visFRCMarkerGenes_woCMResting.html#visualize-data",
    "href": "analysis/visFRCMarkerGenes_woCMResting.html#visualize-data",
    "title": "visualize marker genes stromal cells - resting LN only",
    "section": "visualize data",
    "text": "visualize data\n\nclustering\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPal)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colPal, pt.size=0.5)+\n  theme_void()\n\n\n\n\n\n\npatient\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\",\n        pt.size=0.5, shuffle = T)+\n  theme_void()\n\n\n\n\n\n\ngrp\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colGrp, group.by = \"grp\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")"
  },
  {
    "objectID": "analysis/visFRCMarkerGenes_woCMResting.html#vis-selected-stroma-marker",
    "href": "analysis/visFRCMarkerGenes_woCMResting.html#vis-selected-stroma-marker",
    "title": "visualize marker genes stromal cells - resting LN only",
    "section": "vis selected stroma marker",
    "text": "vis selected stroma marker\n\ngenes <- data.frame(gene=rownames(seurat)) %>% \n    mutate(geneID=gsub(\"^.*\\\\.\", \"\", gene)) \n\nselGenesAll <- read_tsv(file = paste0(basedir,\n                                      \"/data/overallStromaMarkerRest.txt\")) %>% \n  left_join(., genes, by = \"geneID\")\nselGenesAll <- selGenesAll %>% filter(!gene == \"ENSG00000232995.RGS5\")\n\nseurat$RNA_snn_res.0.25 <- factor(seurat$RNA_snn_res.0.25,\n                                  levels = c(\"1\", \"8\", \"4\", \"0\", \"2\", \"5\", \"11\",\n                                             \"7\", \"9\", \"3\", \"6\"))\n\nIdents(seurat) <- seurat$RNA_snn_res.0.25\npOut <- avgHeatmap(seurat = seurat, selGenes = selGenesAll,\n                  colVecIdent = colPal, \n                  ordVec=levels(seurat),\n                  gapVecR=NULL, gapVecC=NULL,cc=T,\n                  cr=F, condCol=F)\n\n\n\n\n\nDotplot\n\nDotPlot(seurat, assay=\"RNA\", features = selGenesAll$gene, scale =T,\n        cluster.idents = T) +\n  scale_color_viridis_c() +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  scale_x_discrete(breaks=selGenesAll$gene, labels=selGenesAll$geneID) +\n  xlab(\"\") + ylab(\"\")\n\n\n\nDotPlot(seurat, assay=\"RNA\", features = selGenesAll$gene, scale =F,\n        cluster.idents = T) +\n  scale_color_viridis_c() +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  scale_x_discrete(breaks=selGenesAll$gene, labels=selGenesAll$geneID) +\n  xlab(\"\") + ylab(\"\")\n\n\n\nselGenesAll <- selGenesAll %>% filter(!geneID == \"CCL21\")\n\nDotPlot(seurat, assay=\"RNA\", features = selGenesAll$gene, scale =F,\n        cluster.idents = T) +\n  scale_color_gradientn(colors=colorRampPalette(c(viridis::viridis(12),\"#FDE725FF\"))(50)) +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  scale_x_discrete(breaks=selGenesAll$gene, labels=selGenesAll$geneID) +\n  xlab(\"\") + ylab(\"\")"
  },
  {
    "objectID": "analysis/visFRCMarkerGenes_woCMResting.html#session-info",
    "href": "analysis/visFRCMarkerGenes_woCMResting.html#session-info",
    "title": "visualize marker genes stromal cells - resting LN only",
    "section": "session info",
    "text": "session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] scater_1.28.0               scuttle_1.10.3              SingleCellExperiment_1.22.0\n [4] SummarizedExperiment_1.30.2 Biobase_2.60.0              GenomicRanges_1.52.1       \n [7] GenomeInfoDb_1.36.4         IRanges_2.36.0              S4Vectors_0.40.1           \n[10] BiocGenerics_0.48.0         MatrixGenerics_1.12.3       matrixStats_1.2.0          \n[13] pheatmap_1.0.12             ggsci_3.0.1                 here_1.0.1                 \n[16] runSeurat3_0.1.0            ggpubr_0.6.0                lubridate_1.9.3            \n[19] forcats_1.0.0               stringr_1.5.1               readr_2.1.5                \n[22] tidyr_1.3.1                 tibble_3.2.1                tidyverse_2.0.0            \n[25] Seurat_5.0.2                SeuratObject_5.0.1          sp_2.1-3                   \n[28] purrr_1.0.2                 cowplot_1.1.3               ggplot2_3.5.0              \n[31] reshape2_1.4.4              dplyr_1.1.4                \n\nloaded via a namespace (and not attached):\n  [1] RcppAnnoy_0.0.22          splines_4.3.0             later_1.3.2              \n  [4] bitops_1.0-7              polyclip_1.10-6           fastDummies_1.7.3        \n  [7] lifecycle_1.0.4           rstatix_0.7.2             rprojroot_2.0.4          \n [10] vroom_1.6.5               globals_0.16.2            lattice_0.22-5           \n [13] MASS_7.3-60.0.1           backports_1.4.1           magrittr_2.0.3           \n [16] plotly_4.10.4             rmarkdown_2.26            yaml_2.3.8               \n [19] httpuv_1.6.14             sctransform_0.4.1         spam_2.10-0              \n [22] spatstat.sparse_3.0-3     reticulate_1.35.0         pbapply_1.7-2            \n [25] RColorBrewer_1.1-3        abind_1.4-5               zlibbioc_1.46.0          \n [28] Rtsne_0.17                RCurl_1.98-1.14           GenomeInfoDbData_1.2.10  \n [31] ggrepel_0.9.5             irlba_2.3.5.1             listenv_0.9.1            \n [34] spatstat.utils_3.0-4      goftest_1.2-3             RSpectra_0.16-1          \n [37] spatstat.random_3.2-3     fitdistrplus_1.1-11       parallelly_1.37.1        \n [40] DelayedMatrixStats_1.22.6 leiden_0.4.3.1            codetools_0.2-19         \n [43] DelayedArray_0.26.7       tidyselect_1.2.0          farver_2.1.1             \n [46] viridis_0.6.5             ScaledMatrix_1.8.1        spatstat.explore_3.2-6   \n [49] jsonlite_1.8.8            BiocNeighbors_1.18.0      ellipsis_0.3.2           \n [52] progressr_0.14.0          ggridges_0.5.6            survival_3.5-8           \n [55] tools_4.3.0               ica_1.0-3                 Rcpp_1.0.12              \n [58] glue_1.7.0                gridExtra_2.3             xfun_0.42                \n [61] withr_3.0.0               fastmap_1.1.1             fansi_1.0.6              \n [64] rsvd_1.0.5                digest_0.6.34             timechange_0.3.0         \n [67] R6_2.5.1                  mime_0.12                 colorspace_2.1-0         \n [70] scattermore_1.2           tensor_1.5                spatstat.data_3.0-4      \n [73] utf8_1.2.4                generics_0.1.3            data.table_1.15.2        \n [76] httr_1.4.7                htmlwidgets_1.6.4         S4Arrays_1.0.6           \n [79] uwot_0.1.16               pkgconfig_2.0.3           gtable_0.3.4             \n [82] lmtest_0.9-40             XVector_0.40.0            htmltools_0.5.7          \n [85] carData_3.0-5             dotCall64_1.1-1           scales_1.3.0             \n [88] png_0.1-8                 knitr_1.45                rstudioapi_0.15.0        \n [91] tzdb_0.4.0                nlme_3.1-164              zoo_1.8-12               \n [94] KernSmooth_2.23-22        vipor_0.4.7               parallel_4.3.0           \n [97] miniUI_0.1.1.1            pillar_1.9.0              grid_4.3.0               \n[100] vctrs_0.6.5               RANN_2.6.1                promises_1.2.1           \n[103] BiocSingular_1.16.0       car_3.1-2                 beachmat_2.16.0          \n[106] xtable_1.8-4              cluster_2.1.6             beeswarm_0.4.0           \n[109] evaluate_0.23             cli_3.6.2                 compiler_4.3.0           \n[112] rlang_1.1.3               crayon_1.5.2              future.apply_1.11.1      \n[115] ggsignif_0.6.4            labeling_0.4.3            ggbeeswarm_0.7.2         \n[118] plyr_1.8.9                stringi_1.8.3             BiocParallel_1.34.2      \n[121] viridisLite_0.4.2         deldir_2.0-4              munsell_0.5.0            \n[124] lazyeval_0.2.2            spatstat.geom_3.2-9       Matrix_1.6-5             \n[127] RcppHNSW_0.6.0            hms_1.1.3                 patchwork_1.2.0          \n[130] bit64_4.0.5               sparseMatrixStats_1.12.2  future_1.33.1            \n[133] shiny_1.8.0               ROCR_1.0-11               igraph_2.0.2             \n[136] broom_1.0.5               bit_4.0.5                \n\ndate()\n\n[1] \"Wed Mar 13 21:47:22 2024\""
  },
  {
    "objectID": "analysis/characterizeImmCellsIntegrated.html#load-packages",
    "href": "analysis/characterizeImmCellsIntegrated.html#load-packages",
    "title": "characterize immune cells human LN",
    "section": "Load packages",
    "text": "Load packages\n\n## load packages \nsuppressPackageStartupMessages({\n  library(dplyr)\n  library(reshape2)\n  library(ggplot2)\n  library(cowplot)\n  library(purrr)\n  library(Seurat)\n  library(tidyverse)\n  library(ggpubr)\n  library(runSeurat3)\n  library(here)\n  library(ggsci)\n  library(pheatmap)\n  library(scater)\n})"
  },
  {
    "objectID": "analysis/characterizeImmCellsIntegrated.html#load-seurat-object",
    "href": "analysis/characterizeImmCellsIntegrated.html#load-seurat-object",
    "title": "characterize immune cells human LN",
    "section": "load seurat object",
    "text": "load seurat object\n\nbasedir <- here()\n\nseurat <- readRDS(file=paste0(basedir,\n                      \"/data/AllPatWithoutCM_IMMMerged_integrated_seurat.rds\"))\nseurat$intCluster <- seurat$integrated_snn_res.0.4\nIdents(seurat) <- seurat$intCluster\n## set col palettes\ncolPal <- colPal <- c(pal_flatui()(10), pal_frontiers()(8),\n                      pal_nejm()(8))[1:length(unique(seurat$intCluster))]\nnames(colPal) <- unique(seurat$intCluster)\n\ncolPat <- c(pal_nejm()(7),pal_futurama()(12))[1:length(unique(seurat$patient))]\nnames(colPat) <- unique(seurat$patient)\ncolCond <- c(\"#6692a3\",\"#971c1c\",\"#d17d67\")\nnames(colCond) <- unique(seurat$cond)\ncolOri <- pal_npg()(length(unique(seurat$origin)))\nnames(colOri) <- unique(seurat$origin)\ncolCond2 <- c(\"#6692a3\",\"#971c1c\")\nnames(colCond2) <- c(\"resting\", \"activated\")"
  },
  {
    "objectID": "analysis/characterizeImmCellsIntegrated.html#visualize-data",
    "href": "analysis/characterizeImmCellsIntegrated.html#visualize-data",
    "title": "characterize immune cells human LN",
    "section": "visualize data",
    "text": "visualize data\n\nclustering\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPal, raster = F)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colPal, pt.size=0.5, raster = F)+\n  theme_void()\n\n\n\n\n\n\ncluster split by cond\n\nDimPlot(seurat, reduction = \"umap\", cols=colPal, pt.size=0.5,\n        split.by = \"cond2\", raster = F)+\n  theme_void()\n\n\n\n\n\n\npatient\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\",\n        raster = F)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\",\n        pt.size=0.5, shuffle = T, raster = F)+\n  theme_void()\n\n\n\n\n\n\ncond\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colCond2, group.by = \"cond2\", raster = F)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colCond2, group.by = \"cond2\",\n        pt.size=0.5, shuffle = T, raster = F)+\n  theme_void()\n\n\n\n\n\n\norigin\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colOri, group.by = \"origin\",\n        raster = F)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")"
  },
  {
    "objectID": "analysis/characterizeImmCellsIntegrated.html#vis-cluster-marker",
    "href": "analysis/characterizeImmCellsIntegrated.html#vis-cluster-marker",
    "title": "characterize immune cells human LN",
    "section": "vis cluster marker",
    "text": "vis cluster marker\n\nmarker genes\n\nseurat_markers_all <- FindAllMarkers(object = seurat, assay =\"RNA\",\n                                     only.pos = TRUE, min.pct = 0.25,\n                                     logfc.threshold = 0.25,\n                                     test.use = \"wilcox\")\n\n\n\navg heatmap\n\ncluster <- levels(seurat)\nselGenesAll <- seurat_markers_all %>% group_by(cluster) %>% \n  top_n(-20, p_val_adj) %>% \n  top_n(20, avg_log2FC)\nselGenesAll <- selGenesAll %>% mutate(geneIDval=gsub(\"^.*\\\\.\", \"\", gene)) %>% filter(nchar(geneIDval)>1)\n\nIdents(seurat) <- seurat$RNA_snn_res.0.25\npOut <- avgHeatmap(seurat = seurat, selGenes = selGenesAll,\n                  colVecIdent = colPal, \n                  ordVec=levels(seurat),\n                  gapVecR=NULL, gapVecC=NULL,cc=FALSE,\n                  cr=T, condCol=F)"
  },
  {
    "objectID": "analysis/characterizeImmCellsIntegrated.html#write-table",
    "href": "analysis/characterizeImmCellsIntegrated.html#write-table",
    "title": "characterize immune cells human LN",
    "section": "write table",
    "text": "write table\n\nwrite.table(seurat_markers_all,\n            file=paste0(basedir,\n                        \"/data/AllPatWithoutCM_IMMMerged_int_markerGenes.txt\"),\n            row.names = FALSE, col.names = TRUE, quote = FALSE, sep = \"\\t\")"
  },
  {
    "objectID": "analysis/characterizeImmCellsIntegrated.html#assign-labels",
    "href": "analysis/characterizeImmCellsIntegrated.html#assign-labels",
    "title": "characterize immune cells human LN",
    "section": "assign labels",
    "text": "assign labels\n\nseurat$intCluster <- seurat$integrated_snn_res.0.4\n\nseurat$label <- \"naiveCD4-1\"\nseurat$label[which(seurat$intCluster %in% c(\"2\"))] <- \"naiveCD4-2\"\nseurat$label[which(seurat$intCluster %in% c(\"7\"))] <- \"naiveCD4-3\"\nseurat$label[which(seurat$intCluster %in% c(\"6\"))] <- \"CD8Tcm\"\nseurat$label[which(seurat$intCluster %in% c(\"4\"))] <- \"CTL/NKcell\"\nseurat$label[which(seurat$intCluster %in% c(\"5\"))] <- \"Treg\"\n\nseurat$label[which(seurat$intCluster %in% c(\"1\"))] <- \"MBC\"\nseurat$label[which(seurat$intCluster %in% c(\"3\"))] <- \"naiveB\"\nseurat$label[which(seurat$intCluster %in% c(\"11\"))] <- \"GCB\"\nseurat$label[which(seurat$intCluster %in% c(\"14\"))] <- \"plasmaCell\"\nseurat$label[which(seurat$intCluster %in% c(\"15\"))] <- \"preB\"\n\nseurat$label[which(seurat$intCluster %in% c(\"9\"))] <- \"Mph/DC-1\"\nseurat$label[which(seurat$intCluster %in% c(\"10\"))] <- \"ILC3\"\nseurat$label[which(seurat$intCluster %in% c(\"8\"))] <- \"pDC-1\"\nseurat$label[which(seurat$intCluster %in% c(\"13\"))] <- \"pDC-2\"\nseurat$label[which(seurat$intCluster %in% c(\"12\"))] <- \"Mph/DC-2\"\n\ncolLab <- c(\"#2a3b30\", \"#0b6647\", \"#54907e\", \"#94c78a\", \"#6f9568\", \n            \"#8f2810\", \"#a83e0b\", \"#ce6915\",\"#d08821\", \"#d0ac21\",\"#b9bb20\",\n            \"#486584\",\"#56799e\", \"#4b5397\", \"#8873d3\", \"#6e3e7a\")\n            \nnames(colLab) <- c(\"preB\", \"naiveB\", \"GCB\", \"MBC\", \"plasmaCell\",\n                   \"naiveCD4-1\", \"naiveCD4-2\", \"naiveCD4-3\", \"Treg\", \"CD8Tcm\",\n                    \"CTL/NKcell\",\n                   \"ILC3\",\"pDC-1\", \"pDC-2\", \"Mph/DC-1\", \"Mph/DC-2\")"
  },
  {
    "objectID": "analysis/characterizeImmCellsIntegrated.html#visualize-label",
    "href": "analysis/characterizeImmCellsIntegrated.html#visualize-label",
    "title": "characterize immune cells human LN",
    "section": "visualize label",
    "text": "visualize label\n\nIdents(seurat) <- seurat$label\n\nDimPlot(seurat, reduction = \"umap\", cols=colLab, raster = F)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colLab, pt.size=0.5, raster = F)+\n  theme_void()"
  },
  {
    "objectID": "analysis/characterizeImmCellsIntegrated.html#vis-selected-immune-cell-marker",
    "href": "analysis/characterizeImmCellsIntegrated.html#vis-selected-immune-cell-marker",
    "title": "characterize immune cells human LN",
    "section": "vis selected immune cell marker",
    "text": "vis selected immune cell marker\n\ngenes <- data.frame(gene=rownames(seurat)) %>% \n    mutate(geneID=gsub(\"^.*\\\\.\", \"\", gene)) \n\nselGenesAll <- read_tsv(file = paste0(basedir,\n                                      \"/data/overallImmuneCellMarker.txt\")) %>% \n  left_join(., genes, by = \"geneID\")\n\nseurat$label <- factor(seurat$label, levels = names(colLab))\nIdents(seurat) <- seurat$label\n\npOut <- avgHeatmap(seurat = seurat, selGenes = selGenesAll,\n                  colVecIdent = colLab, \n                  ordVec=levels(seurat),\n                  gapVecR=NULL, gapVecC=NULL,cc=F,\n                  cr=F, condCol=F)\n\n\n\n\n\nDotplot\n\nDotPlot(seurat, assay=\"RNA\", features = rev(selGenesAll$gene), scale =T,\n        cluster.idents = F) +\n  scale_color_viridis_c() +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  scale_x_discrete(breaks=rev(selGenesAll$gene), labels=rev(selGenesAll$geneID)) +\n  xlab(\"\") + ylab(\"\")\n\n\n\nDotPlot(seurat, assay=\"RNA\", features = rev(selGenesAll$gene), scale =F,\n        cluster.idents = F) +\n  scale_color_viridis_c() +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  scale_x_discrete(breaks=rev(selGenesAll$gene), labels=rev(selGenesAll$geneID)) +\n  xlab(\"\") + ylab(\"\")\n\n\n\n\n\n\nFeatureplot\n\npList <- sapply(selGenesAll$gene, function(x){\np <- FeaturePlot(seurat, reduction = \"umap\", \n            features = x,\n            cols=c(\"lightgrey\", \"darkred\"),\n            order = F)+\n  theme(legend.position=\"right\")\n  plot(p)\n})"
  },
  {
    "objectID": "analysis/characterizeImmCellsIntegrated.html#save-labeled-seurat-object",
    "href": "analysis/characterizeImmCellsIntegrated.html#save-labeled-seurat-object",
    "title": "characterize immune cells human LN",
    "section": "save labeled seurat object",
    "text": "save labeled seurat object\n\nsaveRDS(seurat, paste0(basedir,\n                            \"/data/AllPatWithoutCM_IMMMerged_integrated_label\",\n                       \"_seurat.rds\"))"
  },
  {
    "objectID": "analysis/characterizeImmCellsIntegrated.html#session-info",
    "href": "analysis/characterizeImmCellsIntegrated.html#session-info",
    "title": "characterize immune cells human LN",
    "section": "session info",
    "text": "session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] scater_1.28.0               scuttle_1.10.3              SingleCellExperiment_1.22.0\n [4] SummarizedExperiment_1.30.2 Biobase_2.60.0              GenomicRanges_1.52.1       \n [7] GenomeInfoDb_1.36.4         IRanges_2.36.0              S4Vectors_0.40.1           \n[10] BiocGenerics_0.48.0         MatrixGenerics_1.12.3       matrixStats_1.2.0          \n[13] pheatmap_1.0.12             ggsci_3.0.1                 here_1.0.1                 \n[16] runSeurat3_0.1.0            ggpubr_0.6.0                lubridate_1.9.3            \n[19] forcats_1.0.0               stringr_1.5.1               readr_2.1.5                \n[22] tidyr_1.3.1                 tibble_3.2.1                tidyverse_2.0.0            \n[25] Seurat_5.0.2                SeuratObject_5.0.1          sp_2.1-3                   \n[28] purrr_1.0.2                 cowplot_1.1.3               ggplot2_3.5.0              \n[31] reshape2_1.4.4              dplyr_1.1.4                \n\nloaded via a namespace (and not attached):\n  [1] RcppAnnoy_0.0.22          splines_4.3.0             later_1.3.2              \n  [4] bitops_1.0-7              polyclip_1.10-6           fastDummies_1.7.3        \n  [7] lifecycle_1.0.4           rstatix_0.7.2             rprojroot_2.0.4          \n [10] vroom_1.6.5               globals_0.16.2            lattice_0.22-5           \n [13] MASS_7.3-60.0.1           backports_1.4.1           magrittr_2.0.3           \n [16] plotly_4.10.4             rmarkdown_2.26            yaml_2.3.8               \n [19] httpuv_1.6.14             sctransform_0.4.1         spam_2.10-0              \n [22] spatstat.sparse_3.0-3     reticulate_1.35.0         pbapply_1.7-2            \n [25] RColorBrewer_1.1-3        abind_1.4-5               zlibbioc_1.46.0          \n [28] Rtsne_0.17                RCurl_1.98-1.14           GenomeInfoDbData_1.2.10  \n [31] ggrepel_0.9.5             irlba_2.3.5.1             listenv_0.9.1            \n [34] spatstat.utils_3.0-4      goftest_1.2-3             RSpectra_0.16-1          \n [37] spatstat.random_3.2-3     fitdistrplus_1.1-11       parallelly_1.37.1        \n [40] DelayedMatrixStats_1.22.6 leiden_0.4.3.1            codetools_0.2-19         \n [43] DelayedArray_0.26.7       tidyselect_1.2.0          farver_2.1.1             \n [46] viridis_0.6.5             ScaledMatrix_1.8.1        spatstat.explore_3.2-6   \n [49] jsonlite_1.8.8            BiocNeighbors_1.18.0      ellipsis_0.3.2           \n [52] progressr_0.14.0          ggridges_0.5.6            survival_3.5-8           \n [55] tools_4.3.0               ica_1.0-3                 Rcpp_1.0.12              \n [58] glue_1.7.0                gridExtra_2.3             xfun_0.42                \n [61] withr_3.0.0               fastmap_1.1.1             fansi_1.0.6              \n [64] rsvd_1.0.5                digest_0.6.34             timechange_0.3.0         \n [67] R6_2.5.1                  mime_0.12                 colorspace_2.1-0         \n [70] scattermore_1.2           tensor_1.5                spatstat.data_3.0-4      \n [73] utf8_1.2.4                generics_0.1.3            data.table_1.15.2        \n [76] httr_1.4.7                htmlwidgets_1.6.4         S4Arrays_1.0.6           \n [79] uwot_0.1.16               pkgconfig_2.0.3           gtable_0.3.4             \n [82] lmtest_0.9-40             XVector_0.40.0            htmltools_0.5.7          \n [85] carData_3.0-5             dotCall64_1.1-1           scales_1.3.0             \n [88] png_0.1-8                 knitr_1.45                rstudioapi_0.15.0        \n [91] tzdb_0.4.0                nlme_3.1-164              zoo_1.8-12               \n [94] KernSmooth_2.23-22        vipor_0.4.7               parallel_4.3.0           \n [97] miniUI_0.1.1.1            pillar_1.9.0              grid_4.3.0               \n[100] vctrs_0.6.5               RANN_2.6.1                promises_1.2.1           \n[103] BiocSingular_1.16.0       car_3.1-2                 beachmat_2.16.0          \n[106] xtable_1.8-4              cluster_2.1.6             beeswarm_0.4.0           \n[109] evaluate_0.23             cli_3.6.2                 compiler_4.3.0           \n[112] rlang_1.1.3               crayon_1.5.2              future.apply_1.11.1      \n[115] ggsignif_0.6.4            labeling_0.4.3            ggbeeswarm_0.7.2         \n[118] plyr_1.8.9                stringi_1.8.3             BiocParallel_1.34.2      \n[121] viridisLite_0.4.2         deldir_2.0-4              munsell_0.5.0            \n[124] lazyeval_0.2.2            spatstat.geom_3.2-9       Matrix_1.6-5             \n[127] RcppHNSW_0.6.0            hms_1.1.3                 patchwork_1.2.0          \n[130] bit64_4.0.5               sparseMatrixStats_1.12.2  future_1.33.1            \n[133] shiny_1.8.0               ROCR_1.0-11               igraph_2.0.2             \n[136] broom_1.0.5               bit_4.0.5                \n\ndate()\n\n[1] \"Wed Mar 13 21:59:22 2024\""
  },
  {
    "objectID": "analysis/visMarkerGenes_woCM.html#load-packages",
    "href": "analysis/visMarkerGenes_woCM.html#load-packages",
    "title": "visualize marker genes all stromal cells",
    "section": "Load packages",
    "text": "Load packages\n\n## load packages \nsuppressPackageStartupMessages({\n  library(dplyr)\n  library(reshape2)\n  library(ggplot2)\n  library(cowplot)\n  library(purrr)\n  library(Seurat)\n  library(tidyverse)\n  library(ggpubr)\n  library(runSeurat3)\n  library(here)\n  library(ggsci)\n  library(pheatmap)\n  library(scater)\n})"
  },
  {
    "objectID": "analysis/visMarkerGenes_woCM.html#load-seurat-object",
    "href": "analysis/visMarkerGenes_woCM.html#load-seurat-object",
    "title": "visualize marker genes all stromal cells",
    "section": "load seurat object",
    "text": "load seurat object\n\nbasedir <- here()\n\n## load seurat object from previous analysis\nseurat <- readRDS(file=paste0(basedir,\n                              \"/data/AllPatWithoutCM_LNFSCMerged_seurat.rds\"))\n\n## set col palettes\ncolPal <- c(pal_nejm()(7),pal_futurama()(12))[1:length(levels(seurat))]\ncolPal <- c(\"#c29f2d\", \"#cb6021\", \"#893149\", \"#524b86\", \"#1f84aa\",\n            \"#d38c6e\",\"#50a565\",\"#242a8b\",\"#297563\",\"#667c63\",\"#c94141\")\nnames(colPal) <- levels(seurat)\ncolPat <- c(pal_nejm()(7),pal_futurama()(12))[1:length(unique(seurat$patient))]\nnames(colPat) <- unique(seurat$patient)\ncolCond <- c(\"#6692a3\",\"#971c1c\",\"#d17d67\")\nnames(colCond) <- unique(seurat$cond)\ncolGrp <- pal_uchicago()(length(unique(seurat$grp)))\nnames(colGrp) <- unique(seurat$grp)\ncolOri <- pal_npg()(length(unique(seurat$origin)))\nnames(colOri) <- unique(seurat$origin)"
  },
  {
    "objectID": "analysis/visMarkerGenes_woCM.html#visualize-data",
    "href": "analysis/visMarkerGenes_woCM.html#visualize-data",
    "title": "visualize marker genes all stromal cells",
    "section": "visualize data",
    "text": "visualize data\n\nclustering\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPal)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colPal, pt.size=0.5)+\n  theme_void()\n\n\n\n\n\n\npatient\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\",\n        pt.size=0.5, shuffle = T)+\n  theme_void()\n\n\n\n\n\n\ncond\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colCond, group.by = \"cond\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colCond, group.by = \"cond\",\n        pt.size=0.5, shuffle = T)+\n  theme_void()\n\n\n\n\n\n\ngrp\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colGrp, group.by = \"grp\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\norigin\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colOri, group.by = \"origin\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")"
  },
  {
    "objectID": "analysis/visMarkerGenes_woCM.html#vis-cluster-marker",
    "href": "analysis/visMarkerGenes_woCM.html#vis-cluster-marker",
    "title": "visualize marker genes all stromal cells",
    "section": "vis cluster marker",
    "text": "vis cluster marker\n\nmarker genes\n\nseurat_markers_all <- FindAllMarkers(object = seurat, assay =\"RNA\",\n                                     only.pos = TRUE, min.pct = 0.25,\n                                     logfc.threshold = 0.25,\n                                     test.use = \"wilcox\")\n\n\n\navg heatmap\n\ncluster <- levels(seurat)\nselGenesAll <- seurat_markers_all %>% group_by(cluster) %>% \n  top_n(-15, p_val_adj) %>% \n  top_n(15, avg_log2FC)\nselGenesAll <- selGenesAll %>% mutate(geneIDval=gsub(\"^.*\\\\.\", \"\", gene)) %>% filter(nchar(geneIDval)>1)\n\nIdents(seurat) <- seurat$RNA_snn_res.0.25\npOut <- avgHeatmap(seurat = seurat, selGenes = selGenesAll,\n                  colVecIdent = colPal, \n                  ordVec=levels(seurat),\n                  gapVecR=NULL, gapVecC=NULL,cc=FALSE,\n                  cr=T, condCol=F)"
  },
  {
    "objectID": "analysis/visMarkerGenes_woCM.html#write-table",
    "href": "analysis/visMarkerGenes_woCM.html#write-table",
    "title": "visualize marker genes all stromal cells",
    "section": "write table",
    "text": "write table\n\nwrite.table(seurat_markers_all,\n            file=paste0(basedir,\n                        \"/data/AllPatWithoutCM_LNFSCMerged_markerGenes.txt\"),\n            row.names = FALSE, col.names = TRUE, quote = FALSE, sep = \"\\t\")"
  },
  {
    "objectID": "analysis/visMarkerGenes_woCM.html#vis-selected-stroma-marker",
    "href": "analysis/visMarkerGenes_woCM.html#vis-selected-stroma-marker",
    "title": "visualize marker genes all stromal cells",
    "section": "vis selected stroma marker",
    "text": "vis selected stroma marker\n\ngenes <- data.frame(gene=rownames(seurat)) %>% \n    mutate(geneID=gsub(\"^.*\\\\.\", \"\", gene)) \n\nselGenesAll <- read_tsv(file = paste0(basedir,\n                                      \"/data/overallStromaMarker.txt\")) %>% \n  left_join(., genes, by = \"geneID\")\nselGenesAll <- selGenesAll %>% filter(!gene == \"ENSG00000232995.RGS5\")\n\nIdents(seurat) <- seurat$RNA_snn_res.0.25\npOut <- avgHeatmap(seurat = seurat, selGenes = selGenesAll,\n                  colVecIdent = colPal, \n                  ordVec=levels(seurat),\n                  gapVecR=NULL, gapVecC=NULL,cc=T,\n                  cr=F, condCol=F)\n\n\n\n\n\nDotplot\n\nDotPlot(seurat, assay=\"RNA\", features = selGenesAll$gene, scale =T,\n        cluster.idents = T) +\n  scale_color_viridis_c() +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  scale_x_discrete(breaks=selGenesAll$gene, labels=selGenesAll$geneID) +\n  xlab(\"\") + ylab(\"\")\n\n\n\nDotPlot(seurat, assay=\"RNA\", features = selGenesAll$gene, scale =F,\n        cluster.idents = T) +\n  scale_color_viridis_c() +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  scale_x_discrete(breaks=selGenesAll$gene, labels=selGenesAll$geneID) +\n  xlab(\"\") + ylab(\"\")\n\n\n\nselGenesAll <- selGenesAll %>% filter(!geneID == \"CCL21\")\n\nDotPlot(seurat, assay=\"RNA\", features = selGenesAll$gene, scale =F,\n        cluster.idents = T) +\n  scale_color_gradientn(colors=colorRampPalette(c(viridis::viridis(12),\"#FDE725FF\"))(50)) +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  scale_x_discrete(breaks=selGenesAll$gene, labels=selGenesAll$geneID) +\n  xlab(\"\") + ylab(\"\")"
  },
  {
    "objectID": "analysis/visMarkerGenes_woCM.html#session-info",
    "href": "analysis/visMarkerGenes_woCM.html#session-info",
    "title": "visualize marker genes all stromal cells",
    "section": "session info",
    "text": "session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] scater_1.28.0               scuttle_1.10.3              SingleCellExperiment_1.22.0\n [4] SummarizedExperiment_1.30.2 Biobase_2.60.0              GenomicRanges_1.52.1       \n [7] GenomeInfoDb_1.36.4         IRanges_2.36.0              S4Vectors_0.40.1           \n[10] BiocGenerics_0.48.0         MatrixGenerics_1.12.3       matrixStats_1.2.0          \n[13] pheatmap_1.0.12             ggsci_3.0.1                 here_1.0.1                 \n[16] runSeurat3_0.1.0            ggpubr_0.6.0                lubridate_1.9.3            \n[19] forcats_1.0.0               stringr_1.5.1               readr_2.1.5                \n[22] tidyr_1.3.1                 tibble_3.2.1                tidyverse_2.0.0            \n[25] Seurat_5.0.2                SeuratObject_5.0.1          sp_2.1-3                   \n[28] purrr_1.0.2                 cowplot_1.1.3               ggplot2_3.5.0              \n[31] reshape2_1.4.4              dplyr_1.1.4                \n\nloaded via a namespace (and not attached):\n  [1] RcppAnnoy_0.0.22          splines_4.3.0             later_1.3.2              \n  [4] bitops_1.0-7              polyclip_1.10-6           fastDummies_1.7.3        \n  [7] lifecycle_1.0.4           rstatix_0.7.2             rprojroot_2.0.4          \n [10] vroom_1.6.5               globals_0.16.2            lattice_0.22-5           \n [13] MASS_7.3-60.0.1           backports_1.4.1           magrittr_2.0.3           \n [16] limma_3.56.2              plotly_4.10.4             rmarkdown_2.26           \n [19] yaml_2.3.8                httpuv_1.6.14             sctransform_0.4.1        \n [22] spam_2.10-0               spatstat.sparse_3.0-3     reticulate_1.35.0        \n [25] pbapply_1.7-2             RColorBrewer_1.1-3        abind_1.4-5              \n [28] zlibbioc_1.46.0           Rtsne_0.17                presto_1.0.0             \n [31] RCurl_1.98-1.14           GenomeInfoDbData_1.2.10   ggrepel_0.9.5            \n [34] irlba_2.3.5.1             listenv_0.9.1             spatstat.utils_3.0-4     \n [37] goftest_1.2-3             RSpectra_0.16-1           spatstat.random_3.2-3    \n [40] fitdistrplus_1.1-11       parallelly_1.37.1         DelayedMatrixStats_1.22.6\n [43] leiden_0.4.3.1            codetools_0.2-19          DelayedArray_0.26.7      \n [46] tidyselect_1.2.0          farver_2.1.1              viridis_0.6.5            \n [49] ScaledMatrix_1.8.1        spatstat.explore_3.2-6    jsonlite_1.8.8           \n [52] BiocNeighbors_1.18.0      ellipsis_0.3.2            progressr_0.14.0         \n [55] ggridges_0.5.6            survival_3.5-8            tools_4.3.0              \n [58] ica_1.0-3                 Rcpp_1.0.12               glue_1.7.0               \n [61] gridExtra_2.3             xfun_0.42                 withr_3.0.0              \n [64] fastmap_1.1.1             fansi_1.0.6               rsvd_1.0.5               \n [67] digest_0.6.34             timechange_0.3.0          R6_2.5.1                 \n [70] mime_0.12                 colorspace_2.1-0          scattermore_1.2          \n [73] tensor_1.5                spatstat.data_3.0-4       utf8_1.2.4               \n [76] generics_0.1.3            data.table_1.15.2         httr_1.4.7               \n [79] htmlwidgets_1.6.4         S4Arrays_1.0.6            uwot_0.1.16              \n [82] pkgconfig_2.0.3           gtable_0.3.4              lmtest_0.9-40            \n [85] XVector_0.40.0            htmltools_0.5.7           carData_3.0-5            \n [88] dotCall64_1.1-1           scales_1.3.0              png_0.1-8                \n [91] knitr_1.45                rstudioapi_0.15.0         tzdb_0.4.0               \n [94] nlme_3.1-164              zoo_1.8-12                KernSmooth_2.23-22       \n [97] vipor_0.4.7               parallel_4.3.0            miniUI_0.1.1.1           \n[100] pillar_1.9.0              grid_4.3.0                vctrs_0.6.5              \n[103] RANN_2.6.1                promises_1.2.1            BiocSingular_1.16.0      \n[106] car_3.1-2                 beachmat_2.16.0           xtable_1.8-4             \n[109] cluster_2.1.6             beeswarm_0.4.0            evaluate_0.23            \n[112] cli_3.6.2                 compiler_4.3.0            rlang_1.1.3              \n[115] crayon_1.5.2              future.apply_1.11.1       ggsignif_0.6.4           \n[118] labeling_0.4.3            ggbeeswarm_0.7.2          plyr_1.8.9               \n[121] stringi_1.8.3             BiocParallel_1.34.2       viridisLite_0.4.2        \n[124] deldir_2.0-4              munsell_0.5.0             lazyeval_0.2.2           \n[127] spatstat.geom_3.2-9       Matrix_1.6-5              RcppHNSW_0.6.0           \n[130] hms_1.1.3                 patchwork_1.2.0           bit64_4.0.5              \n[133] sparseMatrixStats_1.12.2  future_1.33.1             shiny_1.8.0              \n[136] ROCR_1.0-11               igraph_2.0.2              broom_1.0.5              \n[139] bit_4.0.5                \n\ndate()\n\n[1] \"Wed Mar 13 22:02:17 2024\""
  },
  {
    "objectID": "analysis/subsetLEC.html#load-packages",
    "href": "analysis/subsetLEC.html#load-packages",
    "title": "Subset LECs human LN",
    "section": "Load packages",
    "text": "Load packages\n\n## load packages \nsuppressPackageStartupMessages({\n  library(dplyr)\n  library(reshape2)\n  library(ggplot2)\n  library(cowplot)\n  library(purrr)\n  library(Seurat)\n  library(tidyverse)\n  library(ggpubr)\n  library(runSeurat3)\n  library(here)\n  library(ggsci)\n  library(pheatmap)\n  library(scater)\n})"
  },
  {
    "objectID": "analysis/subsetLEC.html#load-seurat-object",
    "href": "analysis/subsetLEC.html#load-seurat-object",
    "title": "Subset LECs human LN",
    "section": "load seurat object",
    "text": "load seurat object\n\nbasedir <- here()\n\n## load seurat object from previous analysis\nseurat <- readRDS(file=paste0(basedir, \"/data/AllPatWithoutCM_LNFSCMerged_seurat.rds\"))\n\ncolPal <- c(pal_nejm()(7),pal_futurama()(12))[1:length(levels(seurat))]\nnames(colPal) <- levels(seurat)\n\n## all activated in one grp\nseurat$cond2 <- seurat$cond\nseurat$cond2[which(seurat$cond %in% c(\"chronic\", \"acute\"))] <- \"activated\"\n\ncolCond2 <- c(\"#6692a3\",\"#971c1c\")\nnames(colCond2) <- c(\"resting\", \"activated\")"
  },
  {
    "objectID": "analysis/subsetLEC.html#visualize-data",
    "href": "analysis/subsetLEC.html#visualize-data",
    "title": "Subset LECs human LN",
    "section": "visualize data",
    "text": "visualize data\n\nclustering\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPal)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\npatient\n\ncolPat <- c(pal_jco()(10),pal_futurama()(12))[1:length(unique(seurat$patient))]\nnames(colPat) <- unique(seurat$patient)\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\ncond2\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colCond2, group.by = \"cond2\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\ngrp\n\ncolGrp <- pal_uchicago()(length(unique(seurat$grp)))\nnames(colGrp) <- unique(seurat$grp)\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colGrp, group.by = \"grp\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\norigin\n\ncolOri <- pal_npg()(length(unique(seurat$origin)))\nnames(colOri) <- unique(seurat$origin)\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colOri, group.by = \"origin\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")"
  },
  {
    "objectID": "analysis/subsetLEC.html#subset-on-lec",
    "href": "analysis/subsetLEC.html#subset-on-lec",
    "title": "Subset LECs human LN",
    "section": "subset on LEC",
    "text": "subset on LEC\n\ndim(seurat)\n\n[1] 36098 61459\n\nseurat <- subset(seurat, grp %in% c(\"LEC\"))\ndim(seurat)\n\n[1] 36098  5222\n\n## reprocess\nres <- c(0.8,0.6,0.4,0.25)\n\nseurat <- NormalizeData(object = seurat)\nseurat <- FindVariableFeatures(object = seurat)\nseurat <- ScaleData(object = seurat, verbose = FALSE)\nseurat <- RunPCA(object = seurat, npcs = 30, verbose = FALSE)\nseurat <- RunTSNE(object = seurat, reduction = \"pca\", dims = 1:20)\nseurat <- RunUMAP(object = seurat, reduction = \"pca\", dims = 1:20)\nseurat <- FindNeighbors(object = seurat, reduction = \"pca\", \n                        dims = 1:20)\nfor (i in 1:length(res)) {\n    seurat <- FindClusters(object = seurat, resolution = res[i], \n                           random.seed = 1234)\n}\n\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 5222\nNumber of edges: 179313\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.8442\nNumber of communities: 15\nElapsed time: 0 seconds\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 5222\nNumber of edges: 179313\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.8644\nNumber of communities: 13\nElapsed time: 0 seconds\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 5222\nNumber of edges: 179313\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.8885\nNumber of communities: 11\nElapsed time: 0 seconds\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 5222\nNumber of edges: 179313\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9089\nNumber of communities: 8\nElapsed time: 0 seconds"
  },
  {
    "objectID": "analysis/subsetLEC.html#visualize-data-1",
    "href": "analysis/subsetLEC.html#visualize-data-1",
    "title": "Subset LECs human LN",
    "section": "visualize data",
    "text": "visualize data\n\nclustering\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPal)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\npatient\n\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\",\n        shuffle = T)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\ncond2\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colCond2, group.by = \"cond2\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\ngrp\n\nDimPlot(seurat, reduction = \"umap\", cols=colGrp, group.by = \"grp\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\norigin\n\nDimPlot(seurat, reduction = \"umap\", cols=colOri, group.by = \"origin\",\n        shuffle = T)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")"
  },
  {
    "objectID": "analysis/subsetLEC.html#save-seurat-object",
    "href": "analysis/subsetLEC.html#save-seurat-object",
    "title": "Subset LECs human LN",
    "section": "save seurat object",
    "text": "save seurat object\n\nsaveRDS(seurat, file=paste0(basedir,\"/data/AllPatWithoutCM_LEConly_seurat.rds\"))"
  },
  {
    "objectID": "analysis/subsetLEC.html#integrate-data",
    "href": "analysis/subsetLEC.html#integrate-data",
    "title": "Subset LECs human LN",
    "section": "integrate data",
    "text": "integrate data\n\npatSel <- names(table(seurat$patient))[which(table(seurat$patient)>10)]\nseurat <- subset(seurat, patient %in% patSel)\ntable(seurat$patient)\n\n\nP_20200220 P_20220201 P_20220202     ucd010      ucd13      ucd14 \n      3628        612        104        262        264        340 \n\nIdents(seurat) <- seurat$patient\n\nseurat.list <- SplitObject(object = seurat, split.by = \"patient\")\nfor (i in 1:length(x = seurat.list)) {\n    seurat.list[[i]] <- NormalizeData(object = seurat.list[[i]],\n                                      verbose = FALSE)\n    seurat.list[[i]] <- FindVariableFeatures(object = seurat.list[[i]], \n        selection.method = \"vst\", nfeatures = 2000, verbose = FALSE)\n}\n\nseurat.anchors <- FindIntegrationAnchors(object.list = seurat.list, dims = 1:15)\nseurat.int <- IntegrateData(anchorset = seurat.anchors, dims = 1:15)\nDefaultAssay(object = seurat.int) <- \"integrated\"\n\n# rerun seurat\nseurat.int <- ScaleData(object = seurat.int, verbose = FALSE,\n                        features = rownames(seurat.int))\nseurat.int <- RunPCA(object = seurat.int, npcs = 20, verbose = FALSE)\nseurat.int <- RunTSNE(object = seurat.int, reduction = \"pca\", dims = 1:20)\nseurat.int <- RunUMAP(object = seurat.int, reduction = \"pca\", dims = 1:20)\n\nseurat.int <- FindNeighbors(object = seurat.int, reduction = \"pca\", dims = 1:20)\nres <- c(0.6,0.8,0.4,0.25)\nfor(i in 1:length(res)){\n  seurat.int <- FindClusters(object = seurat.int, resolution = res[i],\n                             random.seed = 1234)\n}\n\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 5210\nNumber of edges: 186531\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.8368\nNumber of communities: 12\nElapsed time: 0 seconds\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 5210\nNumber of edges: 186531\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.8105\nNumber of communities: 14\nElapsed time: 0 seconds\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 5210\nNumber of edges: 186531\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.8680\nNumber of communities: 10\nElapsed time: 0 seconds\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 5210\nNumber of edges: 186531\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9011\nNumber of communities: 8\nElapsed time: 0 seconds"
  },
  {
    "objectID": "analysis/subsetLEC.html#remove-becfrc-cluster",
    "href": "analysis/subsetLEC.html#remove-becfrc-cluster",
    "title": "Subset LECs human LN",
    "section": "remove BEC/FRC cluster",
    "text": "remove BEC/FRC cluster\n\n## remove 2 cluster with no LECs (based on CCL19, CD34, JAM2 expression) \n## described here: PMID 31402260\nseurat.int$intCluster <- seurat.int$integrated_snn_res.0.25\nseurat.int <- subset(seurat.int, intCluster %in% c(\"5\", \"6\"), invert=T)\n\nDefaultAssay(object = seurat.int) <- \"integrated\"\n\n# rerun seurat\nseurat.int <- ScaleData(object = seurat.int, verbose = FALSE,\n                        features = rownames(seurat.int))\nseurat.int <- RunPCA(object = seurat.int, npcs = 20, verbose = FALSE)\nseurat.int <- RunTSNE(object = seurat.int, reduction = \"pca\", dims = 1:20)\nseurat.int <- RunUMAP(object = seurat.int, reduction = \"pca\", dims = 1:20)"
  },
  {
    "objectID": "analysis/subsetLEC.html#save-int-object",
    "href": "analysis/subsetLEC.html#save-int-object",
    "title": "Subset LECs human LN",
    "section": "save int object",
    "text": "save int object\n\nDefaultAssay(object = seurat.int) <- \"RNA\"\nIdents(seurat.int) <- seurat.int$intCluster\n\nsaveRDS(seurat.int,\n        file= paste0(basedir,\n                     \"/data/AllPatWithoutCM_LEConly_intOrig_seurat.rds\"))"
  },
  {
    "objectID": "analysis/subsetLEC.html#visualize-int-data",
    "href": "analysis/subsetLEC.html#visualize-int-data",
    "title": "Subset LECs human LN",
    "section": "visualize int data",
    "text": "visualize int data\n\nclustering\n\ncolPal <- c(pal_nejm()(8),pal_futurama()(12))[1:length(levels(seurat.int))]\nnames(colPal) <- levels(seurat.int)\n\nDimPlot(seurat.int, reduction = \"umap\", cols=colPal)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\npatient\n\n## visualize input data\nDimPlot(seurat.int, reduction = \"umap\", cols=colPat, group.by = \"patient\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\ncond\n\nDimPlot(seurat.int, reduction = \"umap\", cols=colCond2, group.by = \"cond2\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")"
  },
  {
    "objectID": "analysis/subsetLEC.html#session-info",
    "href": "analysis/subsetLEC.html#session-info",
    "title": "Subset LECs human LN",
    "section": "session info",
    "text": "session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] scater_1.28.0               scuttle_1.10.3              SingleCellExperiment_1.22.0\n [4] SummarizedExperiment_1.30.2 Biobase_2.60.0              GenomicRanges_1.52.1       \n [7] GenomeInfoDb_1.36.4         IRanges_2.36.0              S4Vectors_0.40.1           \n[10] BiocGenerics_0.48.0         MatrixGenerics_1.12.3       matrixStats_1.2.0          \n[13] pheatmap_1.0.12             ggsci_3.0.1                 here_1.0.1                 \n[16] runSeurat3_0.1.0            ggpubr_0.6.0                lubridate_1.9.3            \n[19] forcats_1.0.0               stringr_1.5.1               readr_2.1.5                \n[22] tidyr_1.3.1                 tibble_3.2.1                tidyverse_2.0.0            \n[25] Seurat_5.0.2                SeuratObject_5.0.1          sp_2.1-3                   \n[28] purrr_1.0.2                 cowplot_1.1.3               ggplot2_3.5.0              \n[31] reshape2_1.4.4              dplyr_1.1.4                \n\nloaded via a namespace (and not attached):\n  [1] RcppAnnoy_0.0.22          splines_4.3.0             later_1.3.2              \n  [4] bitops_1.0-7              polyclip_1.10-6           fastDummies_1.7.3        \n  [7] lifecycle_1.0.4           rstatix_0.7.2             rprojroot_2.0.4          \n [10] globals_0.16.2            lattice_0.22-5            MASS_7.3-60.0.1          \n [13] backports_1.4.1           magrittr_2.0.3            plotly_4.10.4            \n [16] rmarkdown_2.26            yaml_2.3.8                httpuv_1.6.14            \n [19] sctransform_0.4.1         spam_2.10-0               spatstat.sparse_3.0-3    \n [22] reticulate_1.35.0         pbapply_1.7-2             RColorBrewer_1.1-3       \n [25] abind_1.4-5               zlibbioc_1.46.0           Rtsne_0.17               \n [28] RCurl_1.98-1.14           GenomeInfoDbData_1.2.10   ggrepel_0.9.5            \n [31] irlba_2.3.5.1             listenv_0.9.1             spatstat.utils_3.0-4     \n [34] goftest_1.2-3             RSpectra_0.16-1           spatstat.random_3.2-3    \n [37] fitdistrplus_1.1-11       parallelly_1.37.1         DelayedMatrixStats_1.22.6\n [40] leiden_0.4.3.1            codetools_0.2-19          DelayedArray_0.26.7      \n [43] tidyselect_1.2.0          farver_2.1.1              viridis_0.6.5            \n [46] ScaledMatrix_1.8.1        spatstat.explore_3.2-6    jsonlite_1.8.8           \n [49] BiocNeighbors_1.18.0      ellipsis_0.3.2            progressr_0.14.0         \n [52] ggridges_0.5.6            survival_3.5-8            tools_4.3.0              \n [55] ica_1.0-3                 Rcpp_1.0.12               glue_1.7.0               \n [58] gridExtra_2.3             xfun_0.42                 withr_3.0.0              \n [61] fastmap_1.1.1             fansi_1.0.6               rsvd_1.0.5               \n [64] digest_0.6.34             timechange_0.3.0          R6_2.5.1                 \n [67] mime_0.12                 colorspace_2.1-0          scattermore_1.2          \n [70] tensor_1.5                spatstat.data_3.0-4       utf8_1.2.4               \n [73] generics_0.1.3            data.table_1.15.2         httr_1.4.7               \n [76] htmlwidgets_1.6.4         S4Arrays_1.0.6            uwot_0.1.16              \n [79] pkgconfig_2.0.3           gtable_0.3.4              lmtest_0.9-40            \n [82] XVector_0.40.0            htmltools_0.5.7           carData_3.0-5            \n [85] dotCall64_1.1-1           scales_1.3.0              png_0.1-8                \n [88] knitr_1.45                rstudioapi_0.15.0         tzdb_0.4.0               \n [91] nlme_3.1-164              zoo_1.8-12                KernSmooth_2.23-22       \n [94] vipor_0.4.7               parallel_4.3.0            miniUI_0.1.1.1           \n [97] pillar_1.9.0              grid_4.3.0                vctrs_0.6.5              \n[100] RANN_2.6.1                promises_1.2.1            BiocSingular_1.16.0      \n[103] car_3.1-2                 beachmat_2.16.0           xtable_1.8-4             \n[106] cluster_2.1.6             beeswarm_0.4.0            evaluate_0.23            \n[109] cli_3.6.2                 compiler_4.3.0            rlang_1.1.3              \n[112] crayon_1.5.2              future.apply_1.11.1       ggsignif_0.6.4           \n[115] labeling_0.4.3            ggbeeswarm_0.7.2          plyr_1.8.9               \n[118] stringi_1.8.3             BiocParallel_1.34.2       viridisLite_0.4.2        \n[121] deldir_2.0-4              munsell_0.5.0             lazyeval_0.2.2           \n[124] spatstat.geom_3.2-9       Matrix_1.6-5              RcppHNSW_0.6.0           \n[127] hms_1.1.3                 patchwork_1.2.0           sparseMatrixStats_1.12.2 \n[130] future_1.33.1             shiny_1.8.0               ROCR_1.0-11              \n[133] igraph_2.0.2              broom_1.0.5              \n\ndate()\n\n[1] \"Wed Mar 13 22:07:01 2024\""
  },
  {
    "objectID": "analysis/integrateIMMcells_acrossPat.html",
    "href": "analysis/integrateIMMcells_acrossPat.html",
    "title": "Integrate human LN immune cells",
    "section": "",
    "text": "suppressPackageStartupMessages({\n  library(tidyverse)\n  library(Seurat)\n  library(magrittr)\n  library(dplyr)\n  library(purrr)\n  library(ggplot2)\n  library(here)\n  library(runSeurat3)\n  library(ggsci)\n})"
  },
  {
    "objectID": "analysis/integrateIMMcells_acrossPat.html#set-dir",
    "href": "analysis/integrateIMMcells_acrossPat.html#set-dir",
    "title": "Integrate human LN immune cells",
    "section": "set dir",
    "text": "set dir\n\nbasedir <- here()\nseurat <- readRDS(file=paste0(basedir,\n                            \"/data/AllPatWithoutCM_IMMMerged_seurat.rds\"))"
  },
  {
    "objectID": "analysis/integrateIMMcells_acrossPat.html#visualize-data",
    "href": "analysis/integrateIMMcells_acrossPat.html#visualize-data",
    "title": "Integrate human LN immune cells",
    "section": "visualize data",
    "text": "visualize data\n\nclustering\n\ncolPal <- c(pal_nejm()(8),pal_futurama()(12))[1:length(levels(seurat))]\nnames(colPal) <- levels(seurat)\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPal, raster = F)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\npatient\n\ncolPat <- c(pal_jco()(10),pal_futurama()(12))[1:length(unique(seurat$patient))]\nnames(colPat) <- unique(seurat$patient)\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\",\n        raster = F)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\ncondition\n\ncolCond <- pal_igv()(length(unique(seurat$cond)))\nnames(colCond) <- unique(seurat$cond)\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colCond, group.by = \"cond\", raster = F)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\norigin\n\ncolOrig <- pal_aaas()(length(unique(seurat$origin)))\nnames(colCond) <- unique(seurat$cond)\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colOrig, group.by = \"origin\", raster = F)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")"
  },
  {
    "objectID": "analysis/integrateIMMcells_acrossPat.html#integrate-across-patient",
    "href": "analysis/integrateIMMcells_acrossPat.html#integrate-across-patient",
    "title": "Integrate human LN immune cells",
    "section": "integrate across patient",
    "text": "integrate across patient\n\nIdents(seurat) <- seurat$patient\n\nseurat.list <- SplitObject(object = seurat, split.by = \"patient\")\nfor (i in 1:length(x = seurat.list)) {\n    seurat.list[[i]] <- NormalizeData(object = seurat.list[[i]],\n                                      verbose = FALSE)\n    seurat.list[[i]] <- FindVariableFeatures(object = seurat.list[[i]], \n        selection.method = \"vst\", nfeatures = 2000, verbose = FALSE)\n}\n\nseurat.anchors <- FindIntegrationAnchors(object.list = seurat.list, dims = 1:15)\nseurat.int <- IntegrateData(anchorset = seurat.anchors, dims = 1:15)\nDefaultAssay(object = seurat.int) <- \"integrated\"\n\n# rerun seurat\nseurat.int <- ScaleData(object = seurat.int, verbose = FALSE,\n                        features = rownames(seurat.int))\nseurat.int <- RunPCA(object = seurat.int, npcs = 20, verbose = FALSE)\nseurat.int <- RunTSNE(object = seurat.int, reduction = \"pca\", dims = 1:20)\nseurat.int <- RunUMAP(object = seurat.int, reduction = \"pca\", dims = 1:20)\n\nseurat.int <- FindNeighbors(object = seurat.int, reduction = \"pca\", dims = 1:20)\nres <- c(0.6,0.8,0.4,0.25)\nfor(i in 1:length(res)){\n  seurat.int <- FindClusters(object = seurat.int, resolution = res[i],\n                             random.seed = 1234)\n}\n\nDefaultAssay(object = seurat.int) <- \"RNA\"\nseurat.int$intCluster <- seurat.int$integrated_snn_res.0.25\nIdents(seurat.int) <- seurat.int$intCluster"
  },
  {
    "objectID": "analysis/integrateIMMcells_acrossPat.html#visualize-int-data",
    "href": "analysis/integrateIMMcells_acrossPat.html#visualize-int-data",
    "title": "Integrate human LN immune cells",
    "section": "visualize int data",
    "text": "visualize int data\n\nclustering\n\nseurat.int <- readRDS(file=paste0(basedir,\n                            \"/data/AllPatWithoutCM_IMMMerged_integrated_seurat.rds\"))\n\nIdents(seurat.int) <- seurat.int$intCluster\ncolPal <- c(pal_nejm()(8),pal_futurama()(12))[1:length(levels(seurat.int))]\nnames(colPal) <- levels(seurat.int)\n\n## visualize input data\nDimPlot(seurat.int, reduction = \"umap\", cols=colPal, raster = F)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\npatient\n\ncolPat <- c(pal_jco()(10),\n            pal_futurama()(12))[1:length(unique(seurat.int$patient))]\nnames(colPat) <- unique(seurat.int$patient)\n\n## visualize input data\nDimPlot(seurat.int, reduction = \"umap\", cols=colPat, group.by = \"patient\",\n        raster = F)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\ncond\n\ncolTon <- pal_igv()(length(unique(seurat.int$cond)))\nnames(colTon) <- unique(seurat.int$cond)\n\n## visualize input data\nDimPlot(seurat.int, reduction = \"umap\", cols=colTon, group.by = \"cond\", \n        raster = F)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")"
  },
  {
    "objectID": "analysis/integrateIMMcells_acrossPat.html#save-seurat-object",
    "href": "analysis/integrateIMMcells_acrossPat.html#save-seurat-object",
    "title": "Integrate human LN immune cells",
    "section": "save seurat object",
    "text": "save seurat object\n\nsaveRDS(seurat.int, file=paste0(basedir,\n                            \"/data/AllPatWithoutCM_IMMMerged_integrated_seurat.rds\"))"
  },
  {
    "objectID": "analysis/integrateIMMcells_acrossPat.html#session-info",
    "href": "analysis/integrateIMMcells_acrossPat.html#session-info",
    "title": "Integrate human LN immune cells",
    "section": "session info",
    "text": "session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] ggsci_3.0.1        runSeurat3_0.1.0   here_1.0.1         magrittr_2.0.3     Seurat_5.0.2      \n [6] SeuratObject_5.0.1 sp_2.1-3           lubridate_1.9.3    forcats_1.0.0      stringr_1.5.1     \n[11] dplyr_1.1.4        purrr_1.0.2        readr_2.1.5        tidyr_1.3.1        tibble_3.2.1      \n[16] ggplot2_3.5.0      tidyverse_2.0.0   \n\nloaded via a namespace (and not attached):\n  [1] RColorBrewer_1.1-3          rstudioapi_0.15.0           jsonlite_1.8.8             \n  [4] spatstat.utils_3.0-4        farver_2.1.1                rmarkdown_2.26             \n  [7] zlibbioc_1.46.0             vctrs_0.6.5                 ROCR_1.0-11                \n [10] spatstat.explore_3.2-6      RCurl_1.98-1.14             S4Arrays_1.0.6             \n [13] htmltools_0.5.7             sctransform_0.4.1           parallelly_1.37.1          \n [16] KernSmooth_2.23-22          htmlwidgets_1.6.4           ica_1.0-3                  \n [19] plyr_1.8.9                  plotly_4.10.4               zoo_1.8-12                 \n [22] igraph_2.0.2                mime_0.12                   lifecycle_1.0.4            \n [25] pkgconfig_2.0.3             Matrix_1.6-5                R6_2.5.1                   \n [28] fastmap_1.1.1               GenomeInfoDbData_1.2.10     MatrixGenerics_1.12.3      \n [31] fitdistrplus_1.1-11         future_1.33.1               shiny_1.8.0                \n [34] digest_0.6.34               colorspace_2.1-0            S4Vectors_0.40.1           \n [37] patchwork_1.2.0             rprojroot_2.0.4             tensor_1.5                 \n [40] RSpectra_0.16-1             irlba_2.3.5.1               GenomicRanges_1.52.1       \n [43] labeling_0.4.3              progressr_0.14.0            fansi_1.0.6                \n [46] spatstat.sparse_3.0-3       timechange_0.3.0            httr_1.4.7                 \n [49] polyclip_1.10-6             abind_1.4-5                 compiler_4.3.0             \n [52] withr_3.0.0                 fastDummies_1.7.3           MASS_7.3-60.0.1            \n [55] DelayedArray_0.26.7         tools_4.3.0                 lmtest_0.9-40              \n [58] httpuv_1.6.14               future.apply_1.11.1         goftest_1.2-3              \n [61] glue_1.7.0                  nlme_3.1-164                promises_1.2.1             \n [64] grid_4.3.0                  Rtsne_0.17                  cluster_2.1.6              \n [67] reshape2_1.4.4              generics_0.1.3              gtable_0.3.4               \n [70] spatstat.data_3.0-4         tzdb_0.4.0                  data.table_1.15.2          \n [73] hms_1.1.3                   XVector_0.40.0              utf8_1.2.4                 \n [76] BiocGenerics_0.48.0         spatstat.geom_3.2-9         RcppAnnoy_0.0.22           \n [79] ggrepel_0.9.5               RANN_2.6.1                  pillar_1.9.0               \n [82] spam_2.10-0                 RcppHNSW_0.6.0              later_1.3.2                \n [85] splines_4.3.0               lattice_0.22-5              survival_3.5-8             \n [88] deldir_2.0-4                tidyselect_1.2.0            SingleCellExperiment_1.22.0\n [91] miniUI_0.1.1.1              pbapply_1.7-2               knitr_1.45                 \n [94] gridExtra_2.3               IRanges_2.36.0              SummarizedExperiment_1.30.2\n [97] scattermore_1.2             stats4_4.3.0                xfun_0.42                  \n[100] Biobase_2.60.0              matrixStats_1.2.0           pheatmap_1.0.12            \n[103] stringi_1.8.3               lazyeval_0.2.2              yaml_2.3.8                 \n[106] evaluate_0.23               codetools_0.2-19            cli_3.6.2                  \n[109] uwot_0.1.16                 xtable_1.8-4                reticulate_1.35.0          \n[112] munsell_0.5.0               GenomeInfoDb_1.36.4         Rcpp_1.0.12                \n[115] globals_0.16.2              spatstat.random_3.2-3       png_0.1-8                  \n[118] parallel_4.3.0              ellipsis_0.3.2              dotCall64_1.1-1            \n[121] bitops_1.0-7                listenv_0.9.1               viridisLite_0.4.2          \n[124] scales_1.3.0                ggridges_0.5.6              crayon_1.5.2               \n[127] leiden_0.4.3.1              rlang_1.1.3                 cowplot_1.1.3              \n\ndate()\n\n[1] \"Wed Mar 13 22:09:31 2024\""
  },
  {
    "objectID": "analysis/runSpaTalkDecompB2_s4.html",
    "href": "analysis/runSpaTalkDecompB2_s4.html",
    "title": "Run spatalk decomposition - s4 batch2",
    "section": "",
    "text": "library(tidyverse)\nlibrary(SpatialExperiment)\nlibrary(here)\nlibrary(ggspavis)\nlibrary(scater)\nlibrary(ggsci)\nlibrary(scran)\nlibrary(pheatmap)\nlibrary(SpaTalk)\nlibrary(Matrix)\nlibrary(Seurat)\nlibrary(igraph)\nlibrary(biomaRt)"
  },
  {
    "objectID": "analysis/runSpaTalkDecompB2_s4.html#sample-4",
    "href": "analysis/runSpaTalkDecompB2_s4.html#sample-4",
    "title": "Run spatalk decomposition - s4 batch2",
    "section": "Sample 4",
    "text": "Sample 4\n\nLoad reference and spe object\n\nbasedir <- here()\n\n\nrefSeurat <- readRDS(paste0(basedir, \"/data/refSeurat_allCelltypesIntImm.rds\"))\n\nspeAll <- readRDS(paste0(basedir, \"/data/speAllLNB2.rds\"))\n\ngenes <- data.frame(geneLong=rownames(refSeurat)) %>%\n  mutate(EnsID=gsub(\"\\\\..*\", \"\", geneLong)) %>% \n  mutate(symbol=substr(geneLong, start=17, stop=nchar(geneLong)))\n\n\n\nset color palettes\n\ncolLEC <- c(\"#79AF97FF\",\"#B24745FF\",\"#DF8F44FF\")\nnames(colLEC) <- c(\"SCScLEC\", \"SCSfLEC\", \"MedSinusLEC\")\n\ncolBEC <- c(\"#48557e\", \"#e3a616\",\"#9a3038\")\nnames(colBEC) <- c(\"venBEC\", \"capBEC\", \"artBEC\")\n\n\ncolFRC <- c(\"#800000FF\", \"#FFA319FF\",\"#8A9045FF\", \"#155F83FF\",\n            \"#C16622FF\", \"#6692a3\", \"#3b7f60\")\nnames(colFRC) <- c(\"medRCIFRC\", \"TRC\", \"ACTA2+PRC\", \"VSMC\", \"PI16+RC\", \"PRC1\",\n                   \"BRC\")\n\n\ncolImm <- c(\"#0b6647\", \"#54907e\", \"#94c78a\", \"#6f9568\", \n            \"#8f2810\", \"#d0ac21\",\"#9e9f0b\", \"#486584\",\n            \"#4b5397\", \"#8873d3\", \"#6e3e7a\")\n            \nnames(colImm) <- c(\"naiveB\", \"GCB\", \"MBC\", \"plasmaCell\",\n                   \"CD4T\", \"CD8Tcm\", \"CTL/NKcell\", \"ILC3\", \"pDC\", \"Mph/DC-1\",\n                   \"Mph/DC-2\")\n\ncolAll <- c(colFRC, colBEC, colLEC, colImm) \n\ncolPal <- c(\"#F0027F\", \"#377EB8\", \"#4DAF4A\", \"#984EA3\", \"#FFD700\",\n            \"#FF7F00\", \"#1A1A1A\", \"#666666\", pal_futurama()(10))\n\n\n\nformat sc reference data\n\n## downsample\ndim(refSeurat)\n\n[1]  39642 122538\n\ntable(refSeurat$label)\n\n\n  ACTA2+PRC      artBEC         BRC      capBEC        CD4T      CD8Tcm \n       1560        1048         390        1091       39380        4006 \n CTL/NKcell         GCB        ILC3         MBC   medRCIFRC MedSinusLEC \n      10339         869        1819       17174       10129          42 \n   Mph/DC-1    Mph/DC-2      naiveB         pDC     PI16+RC  plasmaCell \n       2952         980       14118        6750         986         326 \n       PRC1     SCScLEC     SCSfLEC         TRC      venBEC        VSMC \n        760         332         129        3773        2861         724 \n\n#refSeurat$pat_plus_label <- paste0(refSeurat$patient, \"_\", refSeurat$label)\n#table(refSeurat$pat_plus_label)\n#Idents(refSeurat) <- refSeurat$pat_plus_label\nIdents(refSeurat) <- refSeurat$label\nrefSeurat <- subset(x = refSeurat, downsample = 500)\ndim(refSeurat)\n\n[1] 39642 10719\n\n#table(refSeurat$pat_plus_label)\ntable(refSeurat$label)\n\n\n  ACTA2+PRC      artBEC         BRC      capBEC        CD4T      CD8Tcm \n        500         500         390         500         500         500 \n CTL/NKcell         GCB        ILC3         MBC   medRCIFRC MedSinusLEC \n        500         500         500         500         500          42 \n   Mph/DC-1    Mph/DC-2      naiveB         pDC     PI16+RC  plasmaCell \n        500         500         500         500         500         326 \n       PRC1     SCScLEC     SCSfLEC         TRC      venBEC        VSMC \n        500         332         129         500         500         500 \n\n## counts\nsc_data <- refSeurat@assays$RNA@counts\nrownames(sc_data) <- substr(rownames(sc_data), start=17,\n                            stop=nchar(rownames(sc_data)))\n\n## celltypes\nsc_celltype <- refSeurat$label\n\n## remove CC marker\nCCmarker <- c(cc.genes.updated.2019$s.genes, cc.genes.updated.2019$g2m.genes)\ndim(sc_data)\n\n[1] 39642 10719\n\nsc_data <- sc_data[-which(rownames(sc_data) %in% CCmarker),]\ndim(sc_data)\n\n[1] 39545 10719\n\n## remove Mito and Ribosomal genes from reference\nmito.genes <- grep(pattern = \"^MT-\", x = rownames(sc_data), value = TRUE)\nRPS.genes <- grep(pattern = \"^RPS\", x = rownames(sc_data), value = TRUE)\nRPL.genes <- grep(pattern = \"^RPL\", x = rownames(sc_data), value = TRUE)\n\ndim(sc_data)\n\n[1] 39545 10719\n\nsc_data <- sc_data[-which(rownames(sc_data) %in% c(mito.genes, RPS.genes,\n                                                   RPL.genes)),]\ndim(sc_data)\n\n[1] 38478 10719\n\n\n\n\nvis input data\n\nref data\n\nIdents(refSeurat) <- refSeurat$label\nDimPlot(refSeurat, reduction = \"umap\", cols = colAll, raster = F, shuffle = T)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nremove(refSeurat)\n\n\n\nST data\n\ni <- 4\nsid <- names(speAll[i])\nspe <- speAll[[i]]\n\nplotSpots(spe, annotate = \"label\", \n          palette = colPal, size = 0.8) + \n    ggtitle(sid)\n\n\n\nremove(speAll)\n\n\n\n\nformat spatial data\n\n## counts\nst_data <- spe@assays@data$counts\n\n## transform gene names\ngenesST <- data.frame(EnsID=rownames(st_data)) %>%\n  left_join(., genes, by=\"EnsID\") \n\nmart <- useDataset(\"hsapiens_gene_ensembl\", useMart(\"ensembl\"))\ngene_IDs <- getBM(filters= \"ensembl_gene_id\", attributes= c(\"ensembl_gene_id\",\"hgnc_symbol\"),\n              values = genesST$EnsID, mart= mart, useCache = F)\n\ncolnames(gene_IDs) <- c(\"EnsID\", \"symbolMart\")\ngene_IDs <- gene_IDs[-which(duplicated(gene_IDs$EnsID)),]\n\ngenesST <- genesST %>% left_join(., gene_IDs, by=\"EnsID\") %>% \n  mutate(symbolFin=ifelse(is.na(symbol),ifelse(symbolMart ==\"\", EnsID, symbolMart),symbol))\nrownames(st_data) <- genesST$symbolFin\n\nst_data <- rev_gene(data = st_data,\n                         data_type = \"count\",\n                         species = \"Human\",\n                         geneinfo = geneinfo)\n## coords\nst_meta <- data.frame(spot=colnames(spe),\n                      x=spe@int_colData@listData$spatialCoords[,\"pxl_col_in_fullres\"],\n                     y=-1*(spe@int_colData@listData$spatialCoords[,\"pxl_row_in_fullres\"]))\n\nobj <- createSpaTalk(st_data = as.matrix(st_data),\n                     st_meta = st_meta,\n                     species = \"Human\",\n                     if_st_is_sc = F,\n                     spot_max_cell = 30)\n\n\n\nsave object to run CT on server\n\n\ncelltype decomposition\n\nremove(st_data)\nremove(st_meta)\nremove(mart)\n\nobj <- dec_celltype(object = obj,\n                    sc_data = sc_data,\n                    sc_celltype = sc_celltype,\n                    if_use_hvg = T,\n                    use_n_cores = 6,\n                    iter_num = 100,\n                    if_use_normalize_data = F)\n\n\nsaveRDS(obj, file=paste0(basedir, \"/data/ST/spatalk/spatalkDecompB2_s4.rds\"))"
  },
  {
    "objectID": "analysis/runSpaTalkDecompB2_s4.html#session-info",
    "href": "analysis/runSpaTalkDecompB2_s4.html#session-info",
    "title": "Run spatalk decomposition - s4 batch2",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] parallel  stats4    stats     graphics  grDevices utils     datasets \n[8] methods   base     \n\nother attached packages:\n [1] biomaRt_2.56.1              igraph_2.0.2               \n [3] Seurat_5.0.2                SeuratObject_5.0.1         \n [5] sp_2.1-3                    Matrix_1.6-5               \n [7] SpaTalk_1.0                 doParallel_1.0.17          \n [9] iterators_1.0.14            foreach_1.5.2              \n[11] ggalluvial_0.12.5           pheatmap_1.0.12            \n[13] scran_1.28.2                ggsci_3.0.1                \n[15] scater_1.28.0               scuttle_1.10.3             \n[17] ggspavis_1.6.0              here_1.0.1                 \n[19] SpatialExperiment_1.10.0    SingleCellExperiment_1.22.0\n[21] SummarizedExperiment_1.30.2 Biobase_2.60.0             \n[23] GenomicRanges_1.52.1        GenomeInfoDb_1.36.4        \n[25] IRanges_2.36.0              S4Vectors_0.40.1           \n[27] BiocGenerics_0.48.0         MatrixGenerics_1.12.3      \n[29] matrixStats_1.2.0           lubridate_1.9.3            \n[31] forcats_1.0.0               stringr_1.5.1              \n[33] dplyr_1.1.4                 purrr_1.0.2                \n[35] readr_2.1.5                 tidyr_1.3.1                \n[37] tibble_3.2.1                ggplot2_3.5.0              \n[39] tidyverse_2.0.0            \n\nloaded via a namespace (and not attached):\n  [1] spatstat.sparse_3.0-3     bitops_1.0-7             \n  [3] httr_1.4.7                RColorBrewer_1.1-3       \n  [5] backports_1.4.1           tools_4.3.0              \n  [7] sctransform_0.4.1         utf8_1.2.4               \n  [9] R6_2.5.1                  HDF5Array_1.28.1         \n [11] lazyeval_0.2.2            uwot_0.1.16              \n [13] rhdf5filters_1.12.1       withr_3.0.0              \n [15] prettyunits_1.2.0         gridExtra_2.3            \n [17] progressr_0.14.0          cli_3.6.2                \n [19] spatstat.explore_3.2-6    fastDummies_1.7.3        \n [21] scatterpie_0.2.1          labeling_0.4.3           \n [23] spatstat.data_3.0-4       ggridges_0.5.6           \n [25] pbapply_1.7-2             R.utils_2.12.3           \n [27] parallelly_1.37.1         limma_3.56.2             \n [29] RSQLite_2.3.5             rstudioapi_0.15.0        \n [31] generics_0.1.3            ica_1.0-3                \n [33] spatstat.random_3.2-3     car_3.1-2                \n [35] ggbeeswarm_0.7.2          fansi_1.0.6              \n [37] abind_1.4-5               R.methodsS3_1.8.2        \n [39] lifecycle_1.0.4           yaml_2.3.8               \n [41] edgeR_3.42.4              carData_3.0-5            \n [43] BiocFileCache_2.8.0       rhdf5_2.44.0             \n [45] Rtsne_0.17                blob_1.2.4               \n [47] grid_4.3.0                promises_1.2.1           \n [49] dqrng_0.3.2               crayon_1.5.2             \n [51] miniUI_0.1.1.1            lattice_0.22-5           \n [53] beachmat_2.16.0           cowplot_1.1.3            \n [55] KEGGREST_1.40.1           magick_2.8.3             \n [57] pillar_1.9.0              knitr_1.45               \n [59] metapod_1.8.0             rjson_0.2.21             \n [61] future.apply_1.11.1       codetools_0.2-19         \n [63] leiden_0.4.3.1            glue_1.7.0               \n [65] ggfun_0.1.4               data.table_1.15.2        \n [67] vctrs_0.6.5               png_0.1-8                \n [69] spam_2.10-0               gtable_0.3.4             \n [71] cachem_1.0.8              xfun_0.42                \n [73] S4Arrays_1.0.6            mime_0.12                \n [75] DropletUtils_1.20.0       NNLM_0.4.4               \n [77] ggside_0.3.1              survival_3.5-8           \n [79] statmod_1.5.0             bluster_1.10.0           \n [81] ellipsis_0.3.2            fitdistrplus_1.1-11      \n [83] ROCR_1.0-11               nlme_3.1-164             \n [85] bit64_4.0.5               filelock_1.0.3           \n [87] progress_1.2.3            RcppAnnoy_0.0.22         \n [89] rprojroot_2.0.4           irlba_2.3.5.1            \n [91] vipor_0.4.7               KernSmooth_2.23-22       \n [93] DBI_1.2.2                 colorspace_2.1-0         \n [95] tidyselect_1.2.0          curl_5.2.1               \n [97] bit_4.0.5                 compiler_4.3.0           \n [99] BiocNeighbors_1.18.0      xml2_1.3.6               \n[101] DelayedArray_0.26.7       plotly_4.10.4            \n[103] scales_1.3.0              lmtest_0.9-40            \n[105] rappdirs_0.3.3            digest_0.6.34            \n[107] goftest_1.2-3             spatstat.utils_3.0-4     \n[109] rmarkdown_2.26            XVector_0.40.0           \n[111] htmltools_0.5.7           pkgconfig_2.0.3          \n[113] sparseMatrixStats_1.12.2  dbplyr_2.4.0             \n[115] fastmap_1.1.1             rlang_1.1.3              \n[117] htmlwidgets_1.6.4         shiny_1.8.0              \n[119] DelayedMatrixStats_1.22.6 farver_2.1.1             \n[121] zoo_1.8-12                jsonlite_1.8.8           \n[123] BiocParallel_1.34.2       R.oo_1.26.0              \n[125] BiocSingular_1.16.0       RCurl_1.98-1.14          \n[127] magrittr_2.0.3            GenomeInfoDbData_1.2.10  \n[129] dotCall64_1.1-1           patchwork_1.2.0          \n[131] Rhdf5lib_1.22.1           munsell_0.5.0            \n[133] Rcpp_1.0.12               viridis_0.6.5            \n[135] reticulate_1.35.0         stringi_1.8.3            \n[137] zlibbioc_1.46.0           MASS_7.3-60.0.1          \n[139] plyr_1.8.9                listenv_0.9.1            \n[141] ggrepel_0.9.5             deldir_2.0-4             \n[143] Biostrings_2.68.1         splines_4.3.0            \n[145] tensor_1.5                hms_1.1.3                \n[147] locfit_1.5-9.9            ggpubr_0.6.0             \n[149] spatstat.geom_3.2-9       ggsignif_0.6.4           \n[151] RcppHNSW_0.6.0            reshape2_1.4.4           \n[153] ScaledMatrix_1.8.1        XML_3.99-0.16.1          \n[155] evaluate_0.23             tzdb_0.4.0               \n[157] tweenr_2.0.3              httpuv_1.6.14            \n[159] RANN_2.6.1                polyclip_1.10-6          \n[161] future_1.33.1             scattermore_1.2          \n[163] ggforce_0.4.2             ggExtra_0.10.1           \n[165] rsvd_1.0.5                broom_1.0.5              \n[167] xtable_1.8-4              RSpectra_0.16-1          \n[169] rstatix_0.7.2             later_1.3.2              \n[171] viridisLite_0.4.2         memoise_2.0.1            \n[173] AnnotationDbi_1.62.2      beeswarm_0.4.0           \n[175] cluster_2.1.6             timechange_0.3.0         \n[177] globals_0.16.2           \n\ndate()\n\n[1] \"Wed Mar 13 22:10:36 2024\""
  },
  {
    "objectID": "analysis/vis_plus_sum_data_woCD.html#load-packages",
    "href": "analysis/vis_plus_sum_data_woCD.html#load-packages",
    "title": "visualize data human LN without CD patients",
    "section": "Load packages",
    "text": "Load packages\n\n## load packages \nsuppressPackageStartupMessages({\n  library(dplyr)\n  library(reshape2)\n  library(ggplot2)\n  library(cowplot)\n  library(purrr)\n  library(Seurat)\n  library(tidyverse)\n  library(ggpubr)\n  library(runSeurat3)\n  library(here)\n  library(ggsci)\n  library(pheatmap)\n  library(scater)\n})"
  },
  {
    "objectID": "analysis/vis_plus_sum_data_woCD.html#load-seurat-object",
    "href": "analysis/vis_plus_sum_data_woCD.html#load-seurat-object",
    "title": "visualize data human LN without CD patients",
    "section": "load seurat object",
    "text": "load seurat object\n\nbasedir <- here()\n\n## load seurat object from previous analysis\nseurat <- readRDS(file=paste0(basedir, \"/data/AllPatCM_LNFSCMerged_seurat.rds\"))"
  },
  {
    "objectID": "analysis/vis_plus_sum_data_woCD.html#remove-cd-pat",
    "href": "analysis/vis_plus_sum_data_woCD.html#remove-cd-pat",
    "title": "visualize data human LN without CD patients",
    "section": "remove CD pat",
    "text": "remove CD pat\n\ndim(seurat)\n\n[1]  36098 117137\n\nseurat <- subset(seurat, cond %in% c(\"UCD\", \"CDsusp\"), invert=T)\nseurat <- subset(seurat, patient %in% c(\"ucd003\"), invert=T)\ndim(seurat)\n\n[1] 36098 62604\n\n## reprocess\nres <- c(0.8,0.6,0.4,0.25)\n\nseurat <- NormalizeData(object = seurat)\nseurat <- FindVariableFeatures(object = seurat)\nseurat <- ScaleData(object = seurat, verbose = FALSE)\nseurat <- RunPCA(object = seurat, npcs = 30, verbose = FALSE)\nseurat <- RunTSNE(object = seurat, reduction = \"pca\", dims = 1:20)\nseurat <- RunUMAP(object = seurat, reduction = \"pca\", dims = 1:20)\nseurat <- FindNeighbors(object = seurat, reduction = \"pca\", \n                        dims = 1:20)\nfor (i in 1:length(res)) {\n    seurat <- FindClusters(object = seurat, resolution = res[i], \n                           random.seed = 1234)\n    }\n\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 62604\nNumber of edges: 2073920\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9061\nNumber of communities: 24\nElapsed time: 17 seconds\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 62604\nNumber of edges: 2073920\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9177\nNumber of communities: 20\nElapsed time: 18 seconds\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 62604\nNumber of edges: 2073920\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9322\nNumber of communities: 17\nElapsed time: 17 seconds\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 62604\nNumber of edges: 2073920\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9468\nNumber of communities: 12\nElapsed time: 16 seconds\n\n## remove contaminating epithelial cells from UPENN\nseurat <- subset(seurat, RNA_snn_res.0.25 %in% c(\"10\"), invert=T)\ndim(seurat)\n\n[1] 36098 61459\n\nseurat <- RunPCA(object = seurat, npcs = 30, verbose = FALSE)\nseurat <- RunTSNE(object = seurat, reduction = \"pca\", dims = 1:20)\nseurat <- RunUMAP(object = seurat, reduction = \"pca\", dims = 1:20)\n\ncolPal <- c(pal_nejm()(7),pal_futurama()(12))[1:length(levels(seurat))]\nnames(colPal) <- levels(seurat)"
  },
  {
    "objectID": "analysis/vis_plus_sum_data_woCD.html#assign-groups",
    "href": "analysis/vis_plus_sum_data_woCD.html#assign-groups",
    "title": "visualize data human LN without CD patients",
    "section": "assign groups",
    "text": "assign groups\n\nseurat$grp <- \"FRC\"\nseurat$grp[which(seurat$seurat_clusters %in% c(\"3\", \"6\"))] <- \"BEC\"\nseurat$grp[which(seurat$seurat_clusters %in% c(\"7\", \"9\"))] <- \"LEC\"\nseurat$grp[which(seurat$seurat_clusters %in% c(\"1\"))] <- \"SMC\""
  },
  {
    "objectID": "analysis/vis_plus_sum_data_woCD.html#visualize-data",
    "href": "analysis/vis_plus_sum_data_woCD.html#visualize-data",
    "title": "visualize data human LN without CD patients",
    "section": "visualize data",
    "text": "visualize data\n\nclustering\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPal)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\npatient\n\ncolPat <- c(pal_jco()(10),pal_futurama()(12))[1:length(unique(seurat$patient))]\nnames(colPat) <- unique(seurat$patient)\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\ncond\n\ncolTon <- pal_igv()(length(unique(seurat$cond)))\nnames(colTon) <- unique(seurat$cond)\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colTon, group.by = \"cond\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\ngrp\n\ncolGrp <- pal_uchicago()(length(unique(seurat$grp)))\nnames(colGrp) <- unique(seurat$grp)\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colGrp, group.by = \"grp\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\norigin\n\ncolOri <- pal_npg()(length(unique(seurat$origin)))\nnames(colOri) <- unique(seurat$origin)\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colOri, group.by = \"origin\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")"
  },
  {
    "objectID": "analysis/vis_plus_sum_data_woCD.html#cnt-tables",
    "href": "analysis/vis_plus_sum_data_woCD.html#cnt-tables",
    "title": "visualize data human LN without CD patients",
    "section": "cnt tables",
    "text": "cnt tables\n\ncol Grp\n\ngrps_per_Pat <- data.frame(table(seurat$patient, seurat$grp))\ncolnames(grps_per_Pat) <- c(\"patient\", \"group\", \"cnt\")\n\nggplot(grps_per_Pat, aes(x = patient, y = cnt)) +\n  geom_bar(aes(color = group, fill = group, alpha = 0.8),\n           stat = \"identity\") +\n  scale_color_manual(values = colGrp) +\n  scale_fill_manual(values = colGrp) +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\n\n\n\n\n\ncol Pat\n\nggplot(grps_per_Pat, aes(x = patient, y = cnt)) +\n  geom_bar(aes(color = patient, fill = patient),\n           stat = \"identity\") +\n  scale_color_manual(values = colPat) +\n  scale_fill_manual(values = colPat) +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\n\n\n\n\n\ncol Cond\n\ngrps_per_Pat <- data.frame(table(seurat$patient, seurat$cond))\ncolnames(grps_per_Pat) <- c(\"patient\", \"cond\", \"cnt\")\n\nggplot(grps_per_Pat, aes(x = patient, y = cnt)) +\n  geom_bar(aes(color = cond, fill = cond),\n           stat = \"identity\") +\n  scale_color_manual(values = colTon) +\n  scale_fill_manual(values = colTon) +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\n\n\n\n\n\ncol dataset\n\ngrps_per_Pat <- data.frame(table(seurat$patient, seurat$dataset))\ncolnames(grps_per_Pat) <- c(\"patient\", \"dataset\", \"cnt\")\ncolDat <- c(pal_npg()(10),pal_futurama()(12))[1:length(unique(seurat$dataset))]\nnames(colDat) <- unique(seurat$dataset)\n\nggplot(grps_per_Pat, aes(x = patient, y = cnt)) +\n  geom_bar(aes(color = dataset, fill = dataset),\n           stat = \"identity\") +\n  scale_color_manual(values = colDat) +\n  scale_fill_manual(values = colDat) +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))"
  },
  {
    "objectID": "analysis/vis_plus_sum_data_woCD.html#vis-cluster-characterization",
    "href": "analysis/vis_plus_sum_data_woCD.html#vis-cluster-characterization",
    "title": "visualize data human LN without CD patients",
    "section": "vis cluster characterization",
    "text": "vis cluster characterization\n\navgHeatmap <- function(seurat, selGenes, colVecIdent, colVecCond=NULL,\n                       ordVec=NULL, gapVecR=NULL, gapVecC=NULL,cc=FALSE,\n                       cr=FALSE, condCol=FALSE){\n  \n  selGenes <- selGenes$gene\n  \n  ## assay data\n  clusterAssigned <- as.data.frame(Idents(seurat)) %>%\n  dplyr::mutate(cell=rownames(.))\n  colnames(clusterAssigned)[1] <- \"ident\"\n  seuratDat <- GetAssayData(seurat)\n  \n  ## genes of interest\n  genes <- data.frame(gene=rownames(seurat)) %>% \n    mutate(geneID=gsub(\"^.*\\\\.\", \"\", gene)) %>% filter(geneID %in% selGenes)\n\n  ## matrix with averaged cnts per ident\n  logNormExpres <- as.data.frame(t(as.matrix(\n    seuratDat[which(rownames(seuratDat) %in% genes$gene),])))\n  logNormExpres <- logNormExpres %>% dplyr::mutate(cell=rownames(.)) %>%\n    dplyr::left_join(.,clusterAssigned, by=c(\"cell\")) %>%\n    dplyr::select(-cell) %>% dplyr::group_by(ident) %>%\n    dplyr::summarise_all(mean)\n  logNormExpresMa <- logNormExpres %>% dplyr::select(-ident) %>% as.matrix()\n  rownames(logNormExpresMa) <- logNormExpres$ident\n  logNormExpresMa <- t(logNormExpresMa)\n  rownames(logNormExpresMa) <- gsub(\"^.*?\\\\.\",\"\",rownames(logNormExpresMa))\n  \n  ## remove genes if they are all the same in all groups\n  ind <- apply(logNormExpresMa, 1, sd) == 0\n  logNormExpresMa <- logNormExpresMa[!ind,]\n  genes <- genes[!ind,]\n\n  ## color columns according to cluster\n  annotation_col <- as.data.frame(gsub(\"(^.*?_)\",\"\",\n                                       colnames(logNormExpresMa)))%>%\n    dplyr::mutate(celltype=gsub(\"(_.*$)\",\"\",colnames(logNormExpresMa)))\n  colnames(annotation_col)[1] <- \"col1\"\n  annotation_col <- annotation_col %>%\n    dplyr::mutate(cond = gsub(\"(^[0-9]_?)\",\"\",col1)) %>%\n    dplyr::select(cond, celltype)\n  rownames(annotation_col) <- colnames(logNormExpresMa) \n\n  ann_colors = list(\n      cond = colVecCond,\n      celltype=colVecIdent)\n  if(is.null(ann_colors$cond)){\n    annotation_col$cond <- NULL\n  }\n  \n  ## adjust order\n  logNormExpresMa <- logNormExpresMa[selGenes,]\n  if(is.null(ordVec)){\n    ordVec <- levels(seurat)\n  }\n  logNormExpresMa <- logNormExpresMa[,ordVec]\n\n  ## scaled row-wise\n  pheatmap(logNormExpresMa, scale=\"row\" ,treeheight_row = 0, cluster_rows = cr, \n         cluster_cols = cc,\n         color = colorRampPalette(c(\"#2166AC\", \"#F7F7F7\", \"#B2182B\"))(50),\n         annotation_col = annotation_col, cellwidth=15, cellheight=10,\n         annotation_colors = ann_colors, gaps_row = gapVecR, gaps_col = gapVecC)\n}\n\n\nselMarker <- list(LEC = c(\"PROX1\", \"PECAM1\"),                  \n                  BEC = c(\"CD34\", \"ENG\", \"CDH5\"),\n                  SMC = c(\"ACTA2\"),\n                  FRC = c(\"PDPN\", \"CCL19\", \"CCL21\", \"CLU\", \"CXCL13\",\n                          \"CD34\", \"PI16\"))\n\n\navg heatmap\n\nselGenes <- data.frame(gene=unlist(selMarker)) %>%\n  rownames_to_column(var=\"grp\") %>% mutate(Grp=gsub(\".{1}$\", \"\", grp))\ngrpCnt <- selGenes %>% group_by(Grp) %>% summarise(cnt=n())\ngapR <- data.frame(Grp=unique(selGenes$Grp)) %>% \n  left_join(.,grpCnt, by=\"Grp\") %>% mutate(cumSum=cumsum(cnt)) \nordVec <- levels(seurat)\n\npOut <- avgHeatmap(seurat = seurat, selGenes = selGenes,\n                  colVecIdent = colPal, \n                  ordVec=ordVec,\n                  gapVecR=gapR$cumSum, gapVecC=NULL,cc=T,\n                  cr=F, condCol=F)"
  },
  {
    "objectID": "analysis/vis_plus_sum_data_woCD.html#save-seurat-object",
    "href": "analysis/vis_plus_sum_data_woCD.html#save-seurat-object",
    "title": "visualize data human LN without CD patients",
    "section": "save seurat object",
    "text": "save seurat object\n\nsaveRDS(seurat, file=paste0(basedir,\n                            \"/data/AllPatWithoutCM_LNFSCMerged_seurat.rds\"))"
  },
  {
    "objectID": "analysis/vis_plus_sum_data_woCD.html#session-info",
    "href": "analysis/vis_plus_sum_data_woCD.html#session-info",
    "title": "visualize data human LN without CD patients",
    "section": "session info",
    "text": "session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] scater_1.28.0               scuttle_1.10.3              SingleCellExperiment_1.22.0\n [4] SummarizedExperiment_1.30.2 Biobase_2.60.0              GenomicRanges_1.52.1       \n [7] GenomeInfoDb_1.36.4         IRanges_2.36.0              S4Vectors_0.40.1           \n[10] BiocGenerics_0.48.0         MatrixGenerics_1.12.3       matrixStats_1.2.0          \n[13] pheatmap_1.0.12             ggsci_3.0.1                 here_1.0.1                 \n[16] runSeurat3_0.1.0            ggpubr_0.6.0                lubridate_1.9.3            \n[19] forcats_1.0.0               stringr_1.5.1               readr_2.1.5                \n[22] tidyr_1.3.1                 tibble_3.2.1                tidyverse_2.0.0            \n[25] Seurat_5.0.2                SeuratObject_5.0.1          sp_2.1-3                   \n[28] purrr_1.0.2                 cowplot_1.1.3               ggplot2_3.5.0              \n[31] reshape2_1.4.4              dplyr_1.1.4                \n\nloaded via a namespace (and not attached):\n  [1] RcppAnnoy_0.0.22          splines_4.3.0             later_1.3.2              \n  [4] bitops_1.0-7              polyclip_1.10-6           fastDummies_1.7.3        \n  [7] lifecycle_1.0.4           rstatix_0.7.2             rprojroot_2.0.4          \n [10] globals_0.16.2            lattice_0.22-5            MASS_7.3-60.0.1          \n [13] backports_1.4.1           magrittr_2.0.3            plotly_4.10.4            \n [16] rmarkdown_2.26            yaml_2.3.8                httpuv_1.6.14            \n [19] sctransform_0.4.1         spam_2.10-0               spatstat.sparse_3.0-3    \n [22] reticulate_1.35.0         pbapply_1.7-2             RColorBrewer_1.1-3       \n [25] abind_1.4-5               zlibbioc_1.46.0           Rtsne_0.17               \n [28] RCurl_1.98-1.14           GenomeInfoDbData_1.2.10   ggrepel_0.9.5            \n [31] irlba_2.3.5.1             listenv_0.9.1             spatstat.utils_3.0-4     \n [34] goftest_1.2-3             RSpectra_0.16-1           spatstat.random_3.2-3    \n [37] fitdistrplus_1.1-11       parallelly_1.37.1         DelayedMatrixStats_1.22.6\n [40] leiden_0.4.3.1            codetools_0.2-19          DelayedArray_0.26.7      \n [43] tidyselect_1.2.0          farver_2.1.1              viridis_0.6.5            \n [46] ScaledMatrix_1.8.1        spatstat.explore_3.2-6    jsonlite_1.8.8           \n [49] BiocNeighbors_1.18.0      ellipsis_0.3.2            progressr_0.14.0         \n [52] ggridges_0.5.6            survival_3.5-8            tools_4.3.0              \n [55] ica_1.0-3                 Rcpp_1.0.12               glue_1.7.0               \n [58] gridExtra_2.3             xfun_0.42                 withr_3.0.0              \n [61] fastmap_1.1.1             fansi_1.0.6               rsvd_1.0.5               \n [64] digest_0.6.34             timechange_0.3.0          R6_2.5.1                 \n [67] mime_0.12                 colorspace_2.1-0          scattermore_1.2          \n [70] tensor_1.5                spatstat.data_3.0-4       utf8_1.2.4               \n [73] generics_0.1.3            data.table_1.15.2         httr_1.4.7               \n [76] htmlwidgets_1.6.4         S4Arrays_1.0.6            uwot_0.1.16              \n [79] pkgconfig_2.0.3           gtable_0.3.4              lmtest_0.9-40            \n [82] XVector_0.40.0            htmltools_0.5.7           carData_3.0-5            \n [85] dotCall64_1.1-1           scales_1.3.0              png_0.1-8                \n [88] knitr_1.45                rstudioapi_0.15.0         tzdb_0.4.0               \n [91] nlme_3.1-164              zoo_1.8-12                KernSmooth_2.23-22       \n [94] vipor_0.4.7               parallel_4.3.0            miniUI_0.1.1.1           \n [97] pillar_1.9.0              grid_4.3.0                vctrs_0.6.5              \n[100] RANN_2.6.1                promises_1.2.1            BiocSingular_1.16.0      \n[103] car_3.1-2                 beachmat_2.16.0           xtable_1.8-4             \n[106] cluster_2.1.6             beeswarm_0.4.0            evaluate_0.23            \n[109] cli_3.6.2                 compiler_4.3.0            rlang_1.1.3              \n[112] crayon_1.5.2              future.apply_1.11.1       ggsignif_0.6.4           \n[115] labeling_0.4.3            ggbeeswarm_0.7.2          plyr_1.8.9               \n[118] stringi_1.8.3             BiocParallel_1.34.2       viridisLite_0.4.2        \n[121] deldir_2.0-4              munsell_0.5.0             lazyeval_0.2.2           \n[124] spatstat.geom_3.2-9       Matrix_1.6-5              RcppHNSW_0.6.0           \n[127] hms_1.1.3                 patchwork_1.2.0           sparseMatrixStats_1.12.2 \n[130] future_1.33.1             shiny_1.8.0               ROCR_1.0-11              \n[133] igraph_2.0.2              broom_1.0.5              \n\ndate()\n\n[1] \"Wed Mar 13 22:26:46 2024\""
  },
  {
    "objectID": "analysis/runCellchat_act_vs_res.html#load-packages",
    "href": "analysis/runCellchat_act_vs_res.html#load-packages",
    "title": "run cellchat scRNAseq data human LN",
    "section": "Load packages",
    "text": "Load packages\n\n## load packages \nsuppressPackageStartupMessages({\n  library(dplyr)\n  library(reshape2)\n  library(ggplot2)\n  library(purrr)\n  library(Seurat)\n  library(tidyverse)\n  library(ggpubr)\n  library(runSeurat3)\n  library(here)\n  library(ggsci)\n  library(pheatmap)\n  library(scater)\n  library(SingleCellExperiment)\n  library(scran)\n  library(CellChat)\n  library(patchwork)\n  library(ComplexHeatmap)\n})"
  },
  {
    "objectID": "analysis/runCellchat_act_vs_res.html#load-seurat-object",
    "href": "analysis/runCellchat_act_vs_res.html#load-seurat-object",
    "title": "run cellchat scRNAseq data human LN",
    "section": "load seurat object",
    "text": "load seurat object\n\nbasedir <- here()\n\nseuratFRC <- readRDS(file= paste0(basedir,\n                            \"/data/AllPatWithoutCM_FRConly_intOrig\", \n                            \"_seurat.rds\"))\nseuratIMM <- readRDS(file= paste0(basedir,\n                            \"/data/AllPatWithoutCM_IMMMerged_integrated_label\",\n                       \"_seurat.rds\"))\n\n## add label FRCs\nseuratFRC$label <- \"medRCIFRC\"\nseuratFRC$label[which(seuratFRC$intCluster == \"7\")] <- \"BRC\"\nseuratFRC$label[which(seuratFRC$intCluster == \"2\")] <- \"TRC\"\nseuratFRC$label[which(seuratFRC$intCluster == \"3\")] <- \"ACTA2+PRC\"\nseuratFRC$label[which(seuratFRC$intCluster == \"4\")] <- \"VSMC\"\nseuratFRC$label[which(seuratFRC$intCluster == \"5\")] <- \"PI16+RC\"\nseuratFRC$label[which(seuratFRC$intCluster == \"6\")] <- \"PRC1\"\n\nseuratFRC$cond2 <- seuratFRC$cond\nseuratFRC$cond2[which(seuratFRC$cond %in% c(\"acute\", \"chronic\"))] <- \"activated\"\n\n## group imm cells\nseuratIMM$label2 <- seuratIMM$label\nseuratIMM$label <- as.character(seuratIMM$label)\nseuratIMM$label[which(seuratIMM$label %in% c(\"naiveCD4-2\", \"naiveCD4-3\",\n                                             \"naiveCD4-1\", \"Treg\" ))] <- \"CD4T\"\nseuratIMM$label[which(seuratIMM$label %in% c(\"pDC-2\", \"pDC-1\" ))] <- \"pDC\"\nseuratIMM$label[which(seuratIMM$label %in% c(\"naiveB\", \"preB\" ))] <- \"naiveB\"\n\n\nseurat <- merge(seuratFRC, c(seuratIMM))\nseurat$label_plus_cond <- paste0(seurat$label, \"_\", seurat$cond2)\ntable(seurat$label_plus_cond)\n\n\n ACTA2+PRC_activated    ACTA2+PRC_resting        BRC_activated          BRC_resting \n                4244                 1560                 1487                  390 \n      CD4T_activated         CD4T_resting     CD8Tcm_activated       CD8Tcm_resting \n               38543                39380                 6234                 4006 \nCTL/NKcell_activated   CTL/NKcell_resting        GCB_activated          GCB_resting \n                4129                10339                  687                  869 \n      ILC3_activated         ILC3_resting        MBC_activated          MBC_resting \n                  79                 1819                10732                17174 \n medRCIFRC_activated    medRCIFRC_resting   Mph/DC-1_activated     Mph/DC-1_resting \n               10342                10129                  118                 2952 \n  Mph/DC-2_activated     Mph/DC-2_resting     naiveB_activated       naiveB_resting \n                 157                  980                 8295                14118 \n       pDC_activated          pDC_resting    PI16+RC_activated      PI16+RC_resting \n                 558                 6750                 1917                  986 \nplasmaCell_activated   plasmaCell_resting       PRC1_activated         PRC1_resting \n                  53                  326                 1528                  760 \n       TRC_activated          TRC_resting       VSMC_activated         VSMC_resting \n                3164                 3773                 2767                  724 \n\nIdents(seurat) <- seurat$label_plus_cond\nseurat <- subset(x = seurat, downsample = 500)\ntable(seurat$label_plus_cond)\n\n\n ACTA2+PRC_activated    ACTA2+PRC_resting        BRC_activated          BRC_resting \n                 500                  500                  500                  390 \n      CD4T_activated         CD4T_resting     CD8Tcm_activated       CD8Tcm_resting \n                 500                  500                  500                  500 \nCTL/NKcell_activated   CTL/NKcell_resting        GCB_activated          GCB_resting \n                 500                  500                  500                  500 \n      ILC3_activated         ILC3_resting        MBC_activated          MBC_resting \n                  79                  500                  500                  500 \n medRCIFRC_activated    medRCIFRC_resting   Mph/DC-1_activated     Mph/DC-1_resting \n                 500                  500                  118                  500 \n  Mph/DC-2_activated     Mph/DC-2_resting     naiveB_activated       naiveB_resting \n                 157                  500                  500                  500 \n       pDC_activated          pDC_resting    PI16+RC_activated      PI16+RC_resting \n                 500                  500                  500                  500 \nplasmaCell_activated   plasmaCell_resting       PRC1_activated         PRC1_resting \n                  53                  326                  500                  500 \n       TRC_activated          TRC_resting       VSMC_activated         VSMC_resting \n                 500                  500                  500                  500 \n\ntable(seurat$patient)\n\n\nP_20200220 P_20200722 P_20200909 P_20210113 P_20210224 P_20220201 P_20220202     ucd010      ucd13 \n      1482        600       1282       1925       1474       2251       2658       1939       1046 \n     ucd14 \n      1466 \n\ndim(seurat)\n\n[1] 39642 16123\n\nremove(seuratIMM, seuratFRC)\nseurat <- NormalizeData(object = seurat)\nseurat <- FindVariableFeatures(object = seurat)\nseurat <- ScaleData(object = seurat, verbose = FALSE)\nseurat <- RunPCA(object = seurat, npcs = 30, verbose = FALSE)\nseurat <- RunTSNE(object = seurat, reduction = \"pca\", dims = 1:20)\nseurat <- RunUMAP(object = seurat, reduction = \"pca\", dims = 1:20)"
  },
  {
    "objectID": "analysis/runCellchat_act_vs_res.html#set-color-palettes",
    "href": "analysis/runCellchat_act_vs_res.html#set-color-palettes",
    "title": "run cellchat scRNAseq data human LN",
    "section": "set color palettes",
    "text": "set color palettes\n\ncolFRC <- c(\"#800000FF\", \"#FFA319FF\",\"#8A9045FF\", \"#155F83FF\",\n            \"#C16622FF\", \"#6692a3\", \"#3b7f60\")\nnames(colFRC) <- c(\"medRCIFRC\", \"TRC\", \"ACTA2+PRC\", \"VSMC\", \"PI16+RC\", \"PRC1\",\n                   \"BRC\")\n\n\ncolImm <- c(\"#0b6647\", \"#54907e\", \"#94c78a\", \"#6f9568\", \n            \"#8f2810\", \"#d0ac21\",\"#9e9f0b\", \"#486584\",\n            \"#4b5397\", \"#8873d3\", \"#6e3e7a\")\n            \nnames(colImm) <- c(\"naiveB\", \"GCB\", \"MBC\", \"plasmaCell\",\n                   \"CD4T\", \"CD8Tcm\", \"CTL/NKcell\", \"ILC3\", \"pDC\",\n                   \"Mph/DC-1\", \"Mph/DC-2\" )\n\ncolAll <- c(colFRC, colImm) \n\ncolPal <- c(pal_uchicago()(6), \"#6692a3\", \"#3b7f60\")\nnames(colPal) <- c(\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\")\ncolPat <- c(pal_nejm()(7),pal_futurama()(12))[1:length(unique(seurat$patient))]\nnames(colPat) <- unique(seurat$patient)\ncolCond <- c(\"#6692a3\",\"#971c1c\",\"#d17d67\")\nnames(colCond) <- unique(seurat$cond)\ncolOri <- pal_npg()(length(unique(seurat$origin)))\nnames(colOri) <- unique(seurat$origin)\ncolCond2 <- c(\"#6692a3\",\"#971c1c\")\nnames(colCond2) <- c(\"resting\", \"activated\")"
  },
  {
    "objectID": "analysis/runCellchat_act_vs_res.html#visualize-data",
    "href": "analysis/runCellchat_act_vs_res.html#visualize-data",
    "title": "run cellchat scRNAseq data human LN",
    "section": "visualize data",
    "text": "visualize data\n\nlabel\n\nDimPlot(seurat, reduction = \"umap\", cols=colAll, group.by = \"label\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\npatient\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\ncond2\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colCond2, group.by = \"cond2\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\norigin\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colOri, group.by = \"origin\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")"
  },
  {
    "objectID": "analysis/runCellchat_act_vs_res.html#cellchat-analysis",
    "href": "analysis/runCellchat_act_vs_res.html#cellchat-analysis",
    "title": "run cellchat scRNAseq data human LN",
    "section": "cellchat analysis",
    "text": "cellchat analysis\n\ncreate cellchat object\n\nfuture::plan(\"multisession\", workers = 4) \n\n### --------------- resting LNs ----------------- ###\nseurat.res <- subset(seurat, cond2 == \"resting\")\ndata.inp.res <- seurat.res@assays$RNA$data\nrownames(data.inp.res) <- gsub(\".*\\\\.\", \"\", rownames(data.inp.res))\n\ncellchat.res <- createCellChat(object = data.inp.res, meta = seurat.res@meta.data,\n                           group.by = \"label\")\n\n[1] \"Create a CellChat object from a data matrix\"\nSet cell identities for the new CellChat object \nThe cell groups used for CellChat analysis are  ACTA2+PRC BRC CD4T CD8Tcm CTL/NKcell GCB ILC3 MBC medRCIFRC Mph/DC-1 Mph/DC-2 naiveB pDC PI16+RC plasmaCell PRC1 TRC VSMC \n\nCellChatDB <- CellChatDB.human\ncellchat.res@DB <- CellChatDB\n\n## preprocessing\ncellchat.res <- CellChat::subsetData(cellchat.res) \ncellchat.res <- identifyOverExpressedGenes(cellchat.res)\ncellchat.res <- identifyOverExpressedInteractions(cellchat.res)\n\n\n### --------------- activated LNs ----------------- ###\nseurat.act <- subset(seurat, cond2 == \"activated\")\ndata.inp.act <- seurat.act@assays$RNA$data\nrownames(data.inp.act) <- gsub(\".*\\\\.\", \"\", rownames(data.inp.act))\n\ncellchat.act <- createCellChat(object = data.inp.act, meta = seurat.act@meta.data,\n                           group.by = \"label\")\n\n[1] \"Create a CellChat object from a data matrix\"\nSet cell identities for the new CellChat object \nThe cell groups used for CellChat analysis are  ACTA2+PRC BRC CD4T CD8Tcm CTL/NKcell GCB ILC3 MBC medRCIFRC Mph/DC-1 Mph/DC-2 naiveB pDC PI16+RC plasmaCell PRC1 TRC VSMC \n\ncellchat.act@DB <- CellChatDB\n\n## preprocessing\ncellchat.act <- CellChat::subsetData(cellchat.act) \ncellchat.act <- identifyOverExpressedGenes(cellchat.act)\ncellchat.act <- identifyOverExpressedInteractions(cellchat.act)\n\n\n\ncompute communication probability res\n\ncellchat.res <- computeCommunProb(cellchat.res, type = \"truncatedMean\")\n\ntruncatedMean is used for calculating the average gene expression per cell group. \n[1] \">>> Run CellChat on sc/snRNA-seq data <<< [2024-03-13 22:35:11.748377]\"\n[1] \">>> CellChat inference is done. Parameter values are stored in `object@options$parameter` <<< [2024-03-13 22:57:18.652009]\"\n\ncellchat.res <- filterCommunication(cellchat.res, min.cells = 10)\ncellchat.res <- computeCommunProbPathway(cellchat.res)\n\ndf.net.res <- subsetCommunication(cellchat.res,\n                              sources.use = c(\"PI16+RC\", \"PRC1\", \"ACTA2+PRC\"),\n                              targets.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\",\n                                              \"ILC3\", \"naiveB\", \"MBC\", \n                                              \"plasmaCell\", \"CD8Tcm\", \n                                              \"Mph/DC-1\", \"Mph/DC-2\"))\n\ndf.net2.res <- subsetCommunication(cellchat.res, sources.use = c(\"CD4T\", \"CTL/NKcell\",\n                                                         \"GCB\",\n                                              \"ILC3\", \"naiveB\", \"MBC\", \n                                              \"plasmaCell\", \"CD8Tcm\", \n                                              \"Mph/DC-1\", \"Mph/DC-2\"),\n                              targets.use = c(\"PI16+RC\", \"PRC1\", \"ACTA2+PRC\"))\ncellchat.res <- aggregateNet(cellchat.res)\ncellchat.res <- netAnalysis_computeCentrality(cellchat.res, slot.name = \"netP\")\n\n\nvis int partner rest\n\ngroupSize <- as.numeric(table(cellchat.res@idents))\nmatPre <- cellchat.res@net$weight\nmat <- matPre[names(colAll), names(colAll)] \nfor (i in 1:nrow(mat)) {\n  mat2 <- matrix(0, nrow = nrow(mat), ncol = ncol(mat), dimnames = dimnames(mat))\n  mat2[i, ] <- mat[i, ]\n  netVisual_circle(mat2, vertex.weight = groupSize, weight.scale = T,\n                   edge.weight.max = max(mat), title.name = rownames(mat)[i],\n                   color.use = colAll)\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncompute communication probability act\n\ncellchat.act <- computeCommunProb(cellchat.act, type = \"truncatedMean\")\n\ntruncatedMean is used for calculating the average gene expression per cell group. \n[1] \">>> Run CellChat on sc/snRNA-seq data <<< [2024-03-13 22:57:25.050967]\"\n[1] \">>> CellChat inference is done. Parameter values are stored in `object@options$parameter` <<< [2024-03-13 23:08:37.2176]\"\n\ncellchat.act <- filterCommunication(cellchat.act, min.cells = 10)\ncellchat.act <- computeCommunProbPathway(cellchat.act)\n\ndf.net.act <- subsetCommunication(cellchat.act,\n                              sources.use = c(\"PI16+RC\", \"PRC1\", \"ACTA2+PRC\"),\n                              targets.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\",\n                                              \"ILC3\", \"naiveB\", \"MBC\", \n                                              \"plasmaCell\", \"CD8Tcm\" , \n                                              \"Mph/DC-1\", \"Mph/DC-2\"))\n\ndf.net2.act <- subsetCommunication(cellchat.act, sources.use = c(\"CD4T\", \n                                                                 \"CTL/NKcell\",\n                                                         \"GCB\",\n                                              \"ILC3\", \"naiveB\", \"MBC\", \n                                              \"plasmaCell\", \"CD8Tcm\", \n                                              \"Mph/DC-1\", \"Mph/DC-2\"),\n                              targets.use = c(\"PI16+RC\", \"PRC1\", \"ACTA2+PRC\"))\n\ncellchat.act <- aggregateNet(cellchat.act)\ncellchat.act <- netAnalysis_computeCentrality(cellchat.act, slot.name = \"netP\")\n\n\nvis int partner act\n\ngroupSize <- as.numeric(table(cellchat.act@idents))\nmatPre <- cellchat.act@net$weight\nmat <- matPre[names(colAll), names(colAll)] \nfor (i in 1:nrow(mat)) {\n  mat2 <- matrix(0, nrow = nrow(mat), ncol = ncol(mat), dimnames = dimnames(mat))\n  mat2[i, ] <- mat[i, ]\n  netVisual_circle(mat2, vertex.weight = groupSize, weight.scale = T,\n                   edge.weight.max = max(mat), title.name = rownames(mat)[i],\n                   color.use = colAll)\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncompare interaction counts/strength\n\nobject.list <- list(act = cellchat.act, res = cellchat.res)\ncellchat.merge <- mergeCellChat(object.list, add.names = names(object.list))\n\ncolCond3 <- colCond2\nnames(colCond3) <- c(\"res\", \"act\")\ngg1 <- compareInteractions(cellchat.merge, show.legend = F,\n                           group = c(\"act\",\"res\")) + \n  scale_fill_manual(values = colCond3)\ngg2 <- compareInteractions(cellchat.merge, show.legend = F, \n                           group = c(\"act\",\"res\"), measure = \"weight\") + \n  scale_fill_manual(values = colCond3)\ngg1 + gg2\n\n\n\nnetVisual_diffInteraction(cellchat.merge, weight.scale = T)\n\n\n\nnetVisual_diffInteraction(cellchat.merge, weight.scale = T, measure = \"weight\")\n\n\n\ngg1 <- netVisual_heatmap(cellchat.merge)\ngg2 <- netVisual_heatmap(cellchat.merge, measure = \"weight\")\ngg1 + gg2\n\n\n\nweight.max <- getMaxWeight(object.list, attribute = c(\"idents\",\"count\"))\npar(mfrow = c(1,2), xpd=TRUE)\nfor (i in 1:length(object.list)) {\n  netVisual_circle(object.list[[i]]@net$count, weight.scale = T, label.edge= F,\n                   edge.weight.max = weight.max[2], edge.width.max = 12,\n                   title.name = paste0(\"Number of interactions - \",\n                                       names(object.list)[i]))\n}\n\n\n\n\n\n\ncomp int cnt/strength subsets\n\n########### ------------ PI16+RC ------------------- #############\n\ngroup.cellType <- c(rep(\"PI16+RC\", 3), rep(\"CD4T\", 3), rep(\"CTL/NKcell\", 3),\n                    rep(\"Mph/DC-2\", 3), rep(\"CD8Tcm\", 3))\ngroup.cellType <- factor(group.cellType, levels = c(\"PI16+RC\", \"CD4T\",\n                                                    \"CTL/NKcell\", \"Mph/DC-2\",\n                                                    \"CD8Tcm\"))\n\nobject.list.sub <- lapply(object.list, function(x) {\n  mergeInteractions(x, group.cellType)})\ncellchat.sub <- mergeCellChat(object.list.sub,\n                              add.names = names(object.list.sub))\n\nweight.max <- getMaxWeight(object.list.sub,\n                           slot.name = c(\"idents\", \"net\", \"net\"),\n                           attribute = c(\"idents\",\"count\", \"count.merged\"))\npar(mfrow = c(1,2), xpd=TRUE)\nfor (i in 1:length(object.list.sub)) {\n  netVisual_circle(object.list.sub[[i]]@net$count.merged, weight.scale = T,\n                   label.edge= T, edge.weight.max = weight.max[3], \n                   edge.width.max = 12,\n                   title.name = paste0(\"Number of interactions - \",\n                                       names(object.list.sub)[i]))\n}\n\n\n\ngroup.cellType <- c(rep(\"PI16+RC\", 3), rep(\"GCB\", 3), rep(\"MBC\", 3),\n                    rep(\"naiveB\", 3), rep(\"plasmaCell\", 3))\ngroup.cellType <- factor(group.cellType, levels = c(\"PI16+RC\",\"GCB\", \"naiveB\", \n                                                    \"MBC\", \"plasmaCell\"))\n\nobject.list.sub <- lapply(object.list, function(x) {\n  mergeInteractions(x, group.cellType)\n  })\ncellchat.sub <- mergeCellChat(object.list.sub, \n                              add.names = names(object.list.sub))\n\nweight.max <- getMaxWeight(object.list.sub,\n                           slot.name = c(\"idents\", \"net\", \"net\"),\n                           attribute = c(\"idents\",\"count\", \"count.merged\"))\npar(mfrow = c(1,2), xpd=TRUE)\nfor (i in 1:length(object.list.sub)) {\n  netVisual_circle(object.list.sub[[i]]@net$count.merged, weight.scale = T,\n                   label.edge= T, edge.weight.max = weight.max[3], \n                   edge.width.max = 12,\n                   title.name = paste0(\"Number of interactions - \",\n                                       names(object.list.sub)[i]))\n}\n\n\n\ngroup.cellType <- c(rep(\"PI16+RC\", 4), rep(\"ILC3\", 4), rep(\"Mph/DC-1\", 4))\ngroup.cellType <- factor(group.cellType, levels = c(\"PI16+RC\", \"ILC3\",\n                                                    \"Mph/DC-1\"))\n\nobject.list.sub <- lapply(object.list, function(x) {\n  mergeInteractions(x, group.cellType)\n  })\ncellchat.sub <- mergeCellChat(object.list.sub,\n                              add.names = names(object.list.sub))\n\nweight.max <- getMaxWeight(object.list.sub,\n                           slot.name = c(\"idents\", \"net\", \"net\"),\n                           attribute = c(\"idents\",\"count\", \"count.merged\"))\npar(mfrow = c(1,2), xpd=TRUE)\nfor (i in 1:length(object.list.sub)) {\n  netVisual_circle(object.list.sub[[i]]@net$count.merged, weight.scale = T,\n                   label.edge= T, edge.weight.max = weight.max[3], \n                   edge.width.max = 12,\n                   title.name = paste0(\"Number of interactions - \",\n                                       names(object.list.sub)[i]))\n}\n\n\n\n########### ------------ PRC1 ------------------- #############\n\ngroup.cellType <- c(rep(\"PRC1\", 3), rep(\"CD4T\", 3), rep(\"CTL/NKcell\", 3),\n                    rep(\"Mph/DC-2\", 3), rep(\"CD8Tcm\", 3))\ngroup.cellType <- factor(group.cellType, levels = c(\"PRC1\", \"CD4T\",\n                                                    \"CTL/NKcell\",\"Mph/DC-2\",\n                                                    \"CD8Tcm\"))\n\nobject.list.sub <- lapply(object.list, function(x) {\n  mergeInteractions(x, group.cellType)})\ncellchat.sub <- mergeCellChat(object.list.sub,\n                              add.names = names(object.list.sub))\n\nweight.max <- getMaxWeight(object.list.sub,\n                           slot.name = c(\"idents\", \"net\", \"net\"),\n                           attribute = c(\"idents\",\"count\", \"count.merged\"))\npar(mfrow = c(1,2), xpd=TRUE)\nfor (i in 1:length(object.list.sub)) {\n  netVisual_circle(object.list.sub[[i]]@net$count.merged, weight.scale = T,\n                   label.edge= T, edge.weight.max = weight.max[3], \n                   edge.width.max = 12,\n                   title.name = paste0(\"Number of interactions - \",\n                                       names(object.list.sub)[i]))\n}\n\n\n\ngroup.cellType <- c(rep(\"PRC1\", 3), rep(\"GCB\", 3), rep(\"MBC\", 3),\n                    rep(\"naiveB\", 3), rep(\"plasmaCell\", 3))\ngroup.cellType <- factor(group.cellType, levels = c(\"PRC1\",\"GCB\", \"naiveB\", \n                                                    \"MBC\", \"plasmaCell\"))\n\nobject.list.sub <- lapply(object.list, function(x) {\n  mergeInteractions(x, group.cellType)\n  })\ncellchat.sub <- mergeCellChat(object.list.sub, \n                              add.names = names(object.list.sub))\n\nweight.max <- getMaxWeight(object.list.sub,\n                           slot.name = c(\"idents\", \"net\", \"net\"),\n                           attribute = c(\"idents\",\"count\", \"count.merged\"))\npar(mfrow = c(1,2), xpd=TRUE)\nfor (i in 1:length(object.list.sub)) {\n  netVisual_circle(object.list.sub[[i]]@net$count.merged, weight.scale = T,\n                   label.edge= T, edge.weight.max = weight.max[3], \n                   edge.width.max = 12,\n                   title.name = paste0(\"Number of interactions - \",\n                                       names(object.list.sub)[i]))\n}\n\n\n\ngroup.cellType <- c(rep(\"PRC1\", 4), rep(\"ILC3\", 4), rep(\"Mph/DC-1\", 4))\ngroup.cellType <- factor(group.cellType, levels = c(\"PRC1\", \"ILC3\", \"Mph/DC-1\"))\n\nobject.list.sub <- lapply(object.list, function(x) {\n  mergeInteractions(x, group.cellType)\n  })\ncellchat.sub <- mergeCellChat(object.list.sub,\n                              add.names = names(object.list.sub))\n\nweight.max <- getMaxWeight(object.list.sub,\n                           slot.name = c(\"idents\", \"net\", \"net\"),\n                           attribute = c(\"idents\",\"count\", \"count.merged\"))\npar(mfrow = c(1,2), xpd=TRUE)\nfor (i in 1:length(object.list.sub)) {\n  netVisual_circle(object.list.sub[[i]]@net$count.merged, weight.scale = T,\n                   label.edge= T, edge.weight.max = weight.max[3], \n                   edge.width.max = 12,\n                   title.name = paste0(\"Number of interactions - \",\n                                       names(object.list.sub)[i]))\n}\n\n\n\n########### ------------ PRC1 ------------------- #############\n\ngroup.cellType <- c(rep(\"PRC1\", 3), rep(\"CD4T\", 3), rep(\"CTL/NKcell\", 3),\n                    rep(\"Mph/DC-2\", 3), rep(\"CD8Tcm\", 3))\ngroup.cellType <- factor(group.cellType, levels = c(\"PRC1\", \"CD4T\",\n                                                    \"CTL/NKcell\",\"Mph/DC-2\",\n                                                    \"CD8Tcm\"))\n\nobject.list.sub <- lapply(object.list, function(x) {\n  mergeInteractions(x, group.cellType)})\ncellchat.sub <- mergeCellChat(object.list.sub,\n                              add.names = names(object.list.sub))\n\nweight.max <- getMaxWeight(object.list.sub,\n                           slot.name = c(\"idents\", \"net\", \"net\"),\n                           attribute = c(\"idents\",\"count\", \"count.merged\"))\npar(mfrow = c(1,2), xpd=TRUE)\nfor (i in 1:length(object.list.sub)) {\n  netVisual_circle(object.list.sub[[i]]@net$count.merged, weight.scale = T,\n                   label.edge= T, edge.weight.max = weight.max[3], \n                   edge.width.max = 12,\n                   title.name = paste0(\"Number of interactions - \",\n                                       names(object.list.sub)[i]))\n}\n\n\n\ngroup.cellType <- c(rep(\"PRC1\", 3), rep(\"GCB\", 3), rep(\"MBC\", 3),\n                    rep(\"naiveB\", 3), rep(\"plasmaCell\", 3))\ngroup.cellType <- factor(group.cellType, levels = c(\"PRC1\",\"GCB\", \"naiveB\", \n                                                    \"MBC\", \"plasmaCell\"))\n\nobject.list.sub <- lapply(object.list, function(x) {\n  mergeInteractions(x, group.cellType)\n  })\ncellchat.sub <- mergeCellChat(object.list.sub, \n                              add.names = names(object.list.sub))\n\nweight.max <- getMaxWeight(object.list.sub,\n                           slot.name = c(\"idents\", \"net\", \"net\"),\n                           attribute = c(\"idents\",\"count\", \"count.merged\"))\npar(mfrow = c(1,2), xpd=TRUE)\nfor (i in 1:length(object.list.sub)) {\n  netVisual_circle(object.list.sub[[i]]@net$count.merged, weight.scale = T,\n                   label.edge= T, edge.weight.max = weight.max[3], \n                   edge.width.max = 12,\n                   title.name = paste0(\"Number of interactions - \",\n                                       names(object.list.sub)[i]))\n}\n\n\n\ngroup.cellType <- c(rep(\"PRC1\", 4), rep(\"ILC3\", 4), rep(\"Mph/DC-1\", 4))\ngroup.cellType <- factor(group.cellType, levels = c(\"PRC1\", \"ILC3\", \"Mph/DC-1\"))\n\nobject.list.sub <- lapply(object.list, function(x) {\n  mergeInteractions(x, group.cellType)\n  })\ncellchat.sub <- mergeCellChat(object.list.sub,\n                              add.names = names(object.list.sub))\n\nweight.max <- getMaxWeight(object.list.sub,\n                           slot.name = c(\"idents\", \"net\", \"net\"),\n                           attribute = c(\"idents\",\"count\", \"count.merged\"))\npar(mfrow = c(1,2), xpd=TRUE)\nfor (i in 1:length(object.list.sub)) {\n  netVisual_circle(object.list.sub[[i]]@net$count.merged, weight.scale = T,\n                   label.edge= T, edge.weight.max = weight.max[3], \n                   edge.width.max = 12,\n                   title.name = paste0(\"Number of interactions - \",\n                                       names(object.list.sub)[i]))\n}\n\n\n\n########### ------------ ACTA2+PRC ------------------- #############\n\ngroup.cellType <- c(rep(\"ACTA2+PRC\", 3), rep(\"CD4T\", 3), rep(\"CTL/NKcell\", 3),\n                    rep(\"Mph/DC-2\", 3), rep(\"CD8Tcm\", 3))\ngroup.cellType <- factor(group.cellType, levels = c(\"ACTA2+PRC\", \"CD4T\",\n                                                    \"CTL/NKcell\",\"Mph/DC-2\",\n                                                    \"CD8Tcm\"))\n\nobject.list.sub <- lapply(object.list, function(x) {\n  mergeInteractions(x, group.cellType)})\ncellchat.sub <- mergeCellChat(object.list.sub,\n                              add.names = names(object.list.sub))\n\nweight.max <- getMaxWeight(object.list.sub,\n                           slot.name = c(\"idents\", \"net\", \"net\"),\n                           attribute = c(\"idents\",\"count\", \"count.merged\"))\npar(mfrow = c(1,2), xpd=TRUE)\nfor (i in 1:length(object.list.sub)) {\n  netVisual_circle(object.list.sub[[i]]@net$count.merged, weight.scale = T,\n                   label.edge= T, edge.weight.max = weight.max[3], \n                   edge.width.max = 12,\n                   title.name = paste0(\"Number of interactions - \",\n                                       names(object.list.sub)[i]))\n}\n\n\n\ngroup.cellType <- c(rep(\"ACTA2+PRC\", 3), rep(\"GCB\", 3), rep(\"MBC\", 3),\n                    rep(\"naiveB\", 3), rep(\"plasmaCell\", 3))\ngroup.cellType <- factor(group.cellType, levels = c(\"ACTA2+PRC\",\"GCB\", \"naiveB\", \n                                                    \"MBC\", \"plasmaCell\"))\n\nobject.list.sub <- lapply(object.list, function(x) {\n  mergeInteractions(x, group.cellType)\n  })\ncellchat.sub <- mergeCellChat(object.list.sub, \n                              add.names = names(object.list.sub))\n\nweight.max <- getMaxWeight(object.list.sub,\n                           slot.name = c(\"idents\", \"net\", \"net\"),\n                           attribute = c(\"idents\",\"count\", \"count.merged\"))\npar(mfrow = c(1,2), xpd=TRUE)\nfor (i in 1:length(object.list.sub)) {\n  netVisual_circle(object.list.sub[[i]]@net$count.merged, weight.scale = T,\n                   label.edge= T, edge.weight.max = weight.max[3], \n                   edge.width.max = 12,\n                   title.name = paste0(\"Number of interactions - \",\n                                       names(object.list.sub)[i]))\n}\n\n\n\ngroup.cellType <- c(rep(\"ACTA2+PRC\", 4), rep(\"ILC3\", 4), rep(\"Mph/DC-1\", 4))\ngroup.cellType <- factor(group.cellType, levels = c(\"ACTA2+PRC\", \"ILC3\",\n                                                    \"Mph/DC-1\"))\n\nobject.list.sub <- lapply(object.list, function(x) {\n  mergeInteractions(x, group.cellType)\n  })\ncellchat.sub <- mergeCellChat(object.list.sub,\n                              add.names = names(object.list.sub))\n\nweight.max <- getMaxWeight(object.list.sub,\n                           slot.name = c(\"idents\", \"net\", \"net\"),\n                           attribute = c(\"idents\",\"count\", \"count.merged\"))\npar(mfrow = c(1,2), xpd=TRUE)\nfor (i in 1:length(object.list.sub)) {\n  netVisual_circle(object.list.sub[[i]]@net$count.merged, weight.scale = T,\n                   label.edge= T, edge.weight.max = weight.max[3], \n                   edge.width.max = 12,\n                   title.name = paste0(\"Number of interactions - \",\n                                       names(object.list.sub)[i]))\n}\n\n\n\n\n\n\nchanges in signaling of subsets\n\nnum.link <- sapply(object.list, function(x) {rowSums(x@net$count) + \n    colSums(x@net$count)-diag(x@net$count)})\nweight.MinMax <- c(min(num.link), max(num.link)) \n\ngg <- list()\nfor (i in 1:length(object.list)) {\n  gg[[i]] <- netAnalysis_signalingRole_scatter(object.list[[i]],\n                                               title = names(object.list)[i], weight.MinMax = weight.MinMax)\n}\npatchwork::wrap_plots(plots = gg)\n\n\n\ngg1 <- netAnalysis_signalingChanges_scatter(cellchat.merge,\n                                            idents.use = \"PI16+RC\")\ngg2 <- netAnalysis_signalingChanges_scatter(cellchat.merge,\n                                            idents.use = \"PRC1\")\ngg3 <- netAnalysis_signalingChanges_scatter(cellchat.merge,\n                                            idents.use = \"ACTA2+PRC\")\ngg1\n\n\n\ngg2\n\n\n\ngg3\n\n\n\n\n\n\nsignaling pathways between cond\n\ncellchat.merge <- computeNetSimilarityPairwise(cellchat.merge, type = \"functional\")\n\nCompute signaling network similarity for datasets 1 2 \n\ncellchat.merge <- netEmbedding(cellchat.merge, type = \"functional\", umap.method = \"uwot\")\n\nManifold learning of the signaling networks for datasets 1 2 \n\ncellchat.merge <- netClustering(cellchat.merge, type = \"functional\", do.parallel = F)\n\nClassification learning of the signaling networks for datasets 1 2 \n\nnetVisual_embeddingPairwise(cellchat.merge, type = \"functional\", label.size = 2,\n                            top.label=100)\n\n2D visualization of signaling networks from datasets 1 2 \n\n\n\n\ncellchat.merge <- computeNetSimilarityPairwise(cellchat.merge, type = \"structural\")\n\nCompute signaling network similarity for datasets 1 2 \n\ncellchat.merge <- netEmbedding(cellchat.merge, type = \"structural\", umap.method = \"uwot\")\n\nManifold learning of the signaling networks for datasets 1 2 \n\ncellchat.merge <- netClustering(cellchat.merge, type = \"structural\", do.parallel = F)\n\nClassification learning of the signaling networks for datasets 1 2 \n\nnetVisual_embeddingPairwise(cellchat.merge, type = \"structural\", label.size = 2)\n\n2D visualization of signaling networks from datasets 1 2 \n\n\n\n\nrankSimilarity(cellchat.merge, type = \"functional\")\n\nCompute the distance of signaling networks between datasets 1 2 \n\n\n\n\n\n\n\ndiff usage of PW\n\ngg1 <- rankNet(cellchat.merge, mode = \"comparison\", stacked = T, do.stat = TRUE)\ngg2 <- rankNet(cellchat.merge, mode = \"comparison\", stacked = F, do.stat = TRUE)\ngg1\n\n\n\ngg2\n\n\n\n\n\n\nin out signalling\n\ni = 1\npathway.union <- union(object.list[[i]]@netP$pathways, object.list[[i+1]]@netP$pathways)\nht1 = netAnalysis_signalingRole_heatmap(object.list[[i]], pattern = \"outgoing\", signaling = pathway.union, title = names(object.list)[i], width = 12, height = 26)\nht2 = netAnalysis_signalingRole_heatmap(object.list[[i+1]], pattern = \"outgoing\", signaling = pathway.union, title = names(object.list)[i+1], width = 12, height = 26)\ndraw(ht1 + ht2, ht_gap = unit(0.5, \"cm\"))\n\n\n\nht1 = netAnalysis_signalingRole_heatmap(object.list[[i]], pattern = \"incoming\", signaling = pathway.union, title = names(object.list)[i], width = 12, height = 26, color.heatmap = \"GnBu\")\nht2 = netAnalysis_signalingRole_heatmap(object.list[[i+1]], pattern = \"incoming\", signaling = pathway.union, title = names(object.list)[i+1], width = 12, height = 26, color.heatmap = \"GnBu\")\ndraw(ht1 + ht2, ht_gap = unit(0.5, \"cm\"))\n\n\n\n\n\n\nR L pairs\n\nvis exp of RL pairs\n\nnetVisual_bubble(cellchat.merge, sources.use = \"PI16+RC\",\n                 targets.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\", \"ILC3\",\n                                 \"naiveB\", \"MBC\", \"plasmaCell\", \"CD8Tcm\",\n                                 \"Mph/DC-1\", \"Mph/DC-2\"),\n                 comparison = c(1, 2), angle.x = 45)\n\n\n\nnetVisual_bubble(cellchat.merge, sources.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\", \"ILC3\",\n                                 \"naiveB\", \"MBC\", \"plasmaCell\", \"CD8Tcm\",\n                                 \"Mph/DC-1\", \"Mph/DC-2\"),\n                 targets.use = \"PI16+RC\",\n                 comparison = c(1, 2), angle.x = 45)\n\n\n\nnetVisual_bubble(cellchat.merge, sources.use = \"PRC1\",\n                 targets.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\", \"ILC3\",\n                                 \"naiveB\", \"MBC\", \"plasmaCell\", \"CD8Tcm\",\n                                 \"Mph/DC-1\", \"Mph/DC-2\"),\n                 comparison = c(1, 2), angle.x = 45)\n\n\n\nnetVisual_bubble(cellchat.merge, sources.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\", \"ILC3\",\n                                 \"naiveB\", \"MBC\", \"plasmaCell\", \"CD8Tcm\",\n                                 \"Mph/DC-1\", \"Mph/DC-2\"),\n                 targets.use = \"PRC1\",\n                 comparison = c(1, 2), angle.x = 45)\n\n\n\nnetVisual_bubble(cellchat.merge, sources.use = \"ACTA2+PRC\",\n                 targets.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\", \"ILC3\",\n                                 \"naiveB\", \"MBC\", \"plasmaCell\", \"CD8Tcm\",\n                                 \"Mph/DC-1\", \"Mph/DC-2\"),\n                 comparison = c(1, 2), angle.x = 45)\n\n\n\nnetVisual_bubble(cellchat.merge, sources.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\", \"ILC3\",\n                                 \"naiveB\", \"MBC\", \"plasmaCell\", \"CD8Tcm\",\n                                 \"Mph/DC-1\", \"Mph/DC-2\"),\n                 targets.use = \"ACTA2+PRC\",\n                 comparison = c(1, 2), angle.x = 45)\n\n\n\n\n\n\nvis exp of diff RL pairs\n\n##### ----------------- FRC to immune cells ------------------- ######\n\ngg1 <- netVisual_bubble(cellchat.merge, sources.use = \"PI16+RC\",\n                        targets.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\", \"ILC3\",\n                                 \"naiveB\", \"MBC\", \"plasmaCell\", \"CD8Tcm\",\n                                 \"Mph/DC-1\", \"Mph/DC-2\"), \n                        comparison = c(1, 2), max.dataset = 2,\n                        title.name = \"Increased signaling in resting\", angle.x = 45,\n                        remove.isolate = T)\ngg2 <- netVisual_bubble(cellchat.merge, sources.use = \"PI16+RC\",\n                        targets.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\", \"ILC3\",\n                                 \"naiveB\", \"MBC\", \"plasmaCell\", \"CD8Tcm\",\n                                 \"Mph/DC-1\", \"Mph/DC-2\"),\n                        comparison = c(1, 2), max.dataset = 1,\n                        title.name = \"Increased signaling in activated\", angle.x = 45,\n                        remove.isolate = T)\ngg1 + gg2\n\n\n\ngg1 <- netVisual_bubble(cellchat.merge, sources.use = \"PRC1\",\n                        targets.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\", \"ILC3\",\n                                 \"naiveB\", \"MBC\", \"plasmaCell\", \"CD8Tcm\",\n                                 \"Mph/DC-1\", \"Mph/DC-2\"), \n                        comparison = c(1, 2), max.dataset = 2,\n                        title.name = \"Increased signaling in resting\", angle.x = 45,\n                        remove.isolate = T)\ngg2 <- netVisual_bubble(cellchat.merge, sources.use = \"PRC1\",\n                        targets.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\", \"ILC3\",\n                                 \"naiveB\", \"MBC\", \"plasmaCell\", \"CD8Tcm\",\n                                 \"Mph/DC-1\", \"Mph/DC-2\"),\n                        comparison = c(1, 2), max.dataset = 1,\n                        title.name = \"Increased signaling in activated\", angle.x = 45,\n                        remove.isolate = T)\ngg1 + gg2\n\n\n\ngg1 <- netVisual_bubble(cellchat.merge, sources.use = \"ACTA2+PRC\",\n                        targets.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\", \"ILC3\",\n                                 \"naiveB\", \"MBC\", \"plasmaCell\", \"CD8Tcm\",\n                                 \"Mph/DC-1\", \"Mph/DC-2\"), \n                        comparison = c(1, 2), max.dataset = 2,\n                        title.name = \"Increased signaling in resting\", angle.x = 45,\n                        remove.isolate = T)\ngg2 <- netVisual_bubble(cellchat.merge, sources.use = \"ACTA2+PRC\",\n                        targets.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\", \"ILC3\",\n                                 \"naiveB\", \"MBC\", \"plasmaCell\", \"CD8Tcm\",\n                                 \"Mph/DC-1\", \"Mph/DC-2\"),\n                        comparison = c(1, 2), max.dataset = 1,\n                        title.name = \"Increased signaling in activated\", angle.x = 45,\n                        remove.isolate = T)\ngg1 + gg2\n\n\n\n##### ----------------- Immune cells to FRCs ------------------- ######\n\ngg1 <- netVisual_bubble(cellchat.merge, sources.use = c(\"CD4T\", \"CTL/NKcell\",\n                                                        \"GCB\", \"ILC3\",\n                                 \"naiveB\", \"MBC\", \"plasmaCell\", \"CD8Tcm\",\n                                 \"Mph/DC-1\", \"Mph/DC-2\"),\n                        targets.use = \"PI16+RC\", \n                        comparison = c(1, 2), max.dataset = 2,\n                        title.name = \"Increased signaling in resting\", angle.x = 45,\n                        remove.isolate = T)\ngg2 <- netVisual_bubble(cellchat.merge, sources.use = c(\"CD4T\", \"CTL/NKcell\",\n                                                        \"GCB\", \"ILC3\",\n                                 \"naiveB\", \"MBC\", \"plasmaCell\", \"CD8Tcm\",\n                                 \"Mph/DC-1\", \"Mph/DC-2\"),\n                        targets.use = \"PI16+RC\",\n                        comparison = c(1, 2), max.dataset = 1,\n                        title.name = \"Increased signaling in activated\", angle.x = 45,\n                        remove.isolate = T)\ngg1 + gg2\n\n\n\ngg1 <- netVisual_bubble(cellchat.merge, sources.use = c(\"CD4T\", \"CTL/NKcell\",\n                                                        \"GCB\", \"ILC3\",\n                                 \"naiveB\", \"MBC\", \"plasmaCell\", \"CD8Tcm\",\n                                 \"Mph/DC-1\", \"Mph/DC-2\"),\n                        targets.use = \"PRC1\", \n                        comparison = c(1, 2), max.dataset = 2,\n                        title.name = \"Increased signaling in resting\", angle.x = 45,\n                        remove.isolate = T)\ngg2 <- netVisual_bubble(cellchat.merge, sources.use = c(\"CD4T\", \"CTL/NKcell\",\n                                                        \"GCB\", \"ILC3\",\n                                 \"naiveB\", \"MBC\", \"plasmaCell\", \"CD8Tcm\",\n                                 \"Mph/DC-1\", \"Mph/DC-2\"),\n                        targets.use = \"PRC1\",\n                        comparison = c(1, 2), max.dataset = 1,\n                        title.name = \"Increased signaling in activated\", angle.x = 45,\n                        remove.isolate = T)\ngg1 + gg2\n\n\n\ngg1 <- netVisual_bubble(cellchat.merge, sources.use = c(\"CD4T\", \"CTL/NKcell\",\n                                                        \"GCB\", \"ILC3\",\n                                 \"naiveB\", \"MBC\", \"plasmaCell\", \"CD8Tcm\",\n                                 \"Mph/DC-1\", \"Mph/DC-2\"),\n                        targets.use = \"ACTA2+PRC\", \n                        comparison = c(1, 2), max.dataset = 2,\n                        title.name = \"Increased signaling in resting\", angle.x = 45,\n                        remove.isolate = T)\ngg2 <- netVisual_bubble(cellchat.merge, sources.use = c(\"CD4T\", \"CTL/NKcell\",\n                                                        \"GCB\", \"ILC3\",\n                                 \"naiveB\", \"MBC\", \"plasmaCell\", \"CD8Tcm\",\n                                 \"Mph/DC-1\", \"Mph/DC-2\"),\n                        targets.use = \"ACTA2+PRC\",\n                        comparison = c(1, 2), max.dataset = 1,\n                        title.name = \"Increased signaling in activated\", angle.x = 45,\n                        remove.isolate = T)\ngg1 + gg2\n\n\n\n\n\n\ndiff RL pairs based on DE genes\n\npos.dataset = \"act\"\nfeatures.name = pos.dataset\ncellchat.merge <- identifyOverExpressedGenes(cellchat.merge,\n                                             group.dataset = \"datasets\",\n                                       pos.dataset = pos.dataset,\n                                       features.name = features.name,\n                                       only.pos = FALSE, thresh.pc = 0.05,\n                                       thresh.fc = 0.05, thresh.p = 1) \nnet <- netMappingDEG(cellchat.merge, features.name = features.name)\nnet.up <- subsetCommunication(cellchat.merge, net = net, datasets = \"act\",\n                              ligand.logFC = 0.05, receptor.logFC = 0.05)\nnet.down <- subsetCommunication(cellchat.merge, net = net, datasets = \"res\",\n                                ligand.logFC = -0.05, receptor.logFC = -0.05)\n\ngene.up <- extractGeneSubsetFromPair(net.up, cellchat.merge)\ngene.down <- extractGeneSubsetFromPair(net.down, cellchat.merge)\n\npairLR.use.up = net.up[, \"interaction_name\", drop = F]\npairLR.use.down = net.down[, \"interaction_name\", drop = F]\n\n##### ----------------- FRCs to immune cells ------------------- ######\n\ngg1 <- netVisual_bubble(cellchat.merge, pairLR.use = pairLR.use.up,\n                        sources.use = \"PI16+RC\",\n                        targets.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\",\n                                        \"ILC3\", \"naiveB\", \"MBC\", \"plasmaCell\",\n                                        \"CD8Tcm\", \"Mph/DC-1\", \"Mph/DC-2\"),\n                        comparison = c(1, 2),  angle.x = 90, remove.isolate = T,\n                        title.name = paste0(\"Up-regulated signaling in \",\n                                            names(object.list)[1]))\n\n\ngg2 <- netVisual_bubble(cellchat.merge, pairLR.use = pairLR.use.down,\n                        sources.use = \"PI16+RC\",\n                        targets.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\",\n                                        \"ILC3\", \"naiveB\", \"MBC\", \"plasmaCell\",\n                                        \"CD8Tcm\", \"Mph/DC-1\", \"Mph/DC-2\"),\n                        comparison = c(1, 2),  angle.x = 90, remove.isolate = T,\n                        title.name = paste0(\"Down-regulated signaling in \", \n                                            names(object.list)[1]))\ngg1 + gg2\n\n\n\ngg1 <- netVisual_bubble(cellchat.merge, pairLR.use = pairLR.use.up,\n                        sources.use = \"PRC1\",\n                        targets.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\",\n                                        \"ILC3\", \"naiveB\", \"MBC\", \"plasmaCell\",\n                                        \"CD8Tcm\", \"Mph/DC-1\", \"Mph/DC-2\"),\n                        comparison = c(1, 2),  angle.x = 90, remove.isolate = T,\n                        title.name = paste0(\"Up-regulated signaling in \",\n                                            names(object.list)[1]))\n\n\ngg2 <- netVisual_bubble(cellchat.merge, pairLR.use = pairLR.use.down,\n                        sources.use = \"PRC1\",\n                        targets.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\",\n                                        \"ILC3\", \"naiveB\", \"MBC\", \"plasmaCell\",\n                                        \"CD8Tcm\", \"Mph/DC-1\", \"Mph/DC-2\"),\n                        comparison = c(1, 2),  angle.x = 90, remove.isolate = T,\n                        title.name = paste0(\"Down-regulated signaling in \", \n                                            names(object.list)[1]))\ngg1 + gg2\n\n\n\ngg1 <- netVisual_bubble(cellchat.merge, pairLR.use = pairLR.use.up,\n                        sources.use = \"ACTA2+PRC\",\n                        targets.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\",\n                                        \"ILC3\", \"naiveB\", \"MBC\", \"plasmaCell\",\n                                        \"CD8Tcm\", \"Mph/DC-1\", \"Mph/DC-2\"),\n                        comparison = c(1, 2),  angle.x = 90, remove.isolate = T,\n                        title.name = paste0(\"Up-regulated signaling in \",\n                                            names(object.list)[1]))\n\n\ngg2 <- netVisual_bubble(cellchat.merge, pairLR.use = pairLR.use.down,\n                        sources.use = \"ACTA2+PRC\",\n                        targets.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\",\n                                        \"ILC3\", \"naiveB\", \"MBC\", \"plasmaCell\",\n                                        \"CD8Tcm\", \"Mph/DC-1\", \"Mph/DC-2\"),\n                        comparison = c(1, 2),  angle.x = 90, remove.isolate = T,\n                        title.name = paste0(\"Down-regulated signaling in \", \n                                            names(object.list)[1]))\ngg1 + gg2\n\n\n\n##### ----------------- Immune cells to FRCs ------------------- ######\n\ngg1 <- netVisual_bubble(cellchat.merge, pairLR.use = pairLR.use.up,\n                        sources.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\",\n                                        \"ILC3\", \"naiveB\", \"MBC\", \"plasmaCell\",\n                                        \"CD8Tcm\",\"Mph/DC-1\", \"Mph/DC-2\"),\n                        targets.use = \"PI16+RC\",\n                        comparison = c(1, 2),  angle.x = 90, remove.isolate = T,\n                        title.name = paste0(\"Up-regulated signaling in \",\n                                            names(object.list)[1]))\n\n\ngg2 <- netVisual_bubble(cellchat.merge, pairLR.use = pairLR.use.down,\n                        sources.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\",\n                                        \"ILC3\", \"naiveB\", \"MBC\", \"plasmaCell\",\n                                        \"CD8Tcm\",\"Mph/DC-1\", \"Mph/DC-2\"),\n                        targets.use = \"PI16+RC\",\n                        comparison = c(1, 2),  angle.x = 90, remove.isolate = T,\n                        title.name = paste0(\"Down-regulated signaling in \", \n                                            names(object.list)[1]))\ngg1 + gg2\n\n\n\ngg1 <- netVisual_bubble(cellchat.merge, pairLR.use = pairLR.use.up,\n                        sources.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\",\n                                        \"ILC3\", \"naiveB\", \"MBC\", \"plasmaCell\",\n                                        \"CD8Tcm\",\"Mph/DC-1\", \"Mph/DC-2\"),\n                        targets.use = \"PRC1\",\n                        comparison = c(1, 2),  angle.x = 90, remove.isolate = T,\n                        title.name = paste0(\"Up-regulated signaling in \",\n                                            names(object.list)[1]))\n\n\ngg2 <- netVisual_bubble(cellchat.merge, pairLR.use = pairLR.use.down,\n                        sources.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\",\n                                        \"ILC3\", \"naiveB\", \"MBC\", \"plasmaCell\",\n                                        \"CD8Tcm\",\"Mph/DC-1\", \"Mph/DC-2\"),\n                        targets.use = \"PRC1\",\n                        comparison = c(1, 2),  angle.x = 90, remove.isolate = T,\n                        title.name = paste0(\"Down-regulated signaling in \", \n                                            names(object.list)[1]))\ngg1 + gg2\n\n\n\ngg1 <- netVisual_bubble(cellchat.merge, pairLR.use = pairLR.use.up,\n                        sources.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\",\n                                        \"ILC3\", \"naiveB\", \"MBC\", \"plasmaCell\",\n                                        \"CD8Tcm\",\"Mph/DC-1\", \"Mph/DC-2\"),\n                        targets.use = \"ACTA2+PRC\",\n                        comparison = c(1, 2),  angle.x = 90, remove.isolate = T,\n                        title.name = paste0(\"Up-regulated signaling in \",\n                                            names(object.list)[1]))\n\n\ngg2 <- netVisual_bubble(cellchat.merge, pairLR.use = pairLR.use.down,\n                        sources.use = c(\"CD4T\", \"CTL/NKcell\", \"GCB\",\n                                        \"ILC3\", \"naiveB\", \"MBC\", \"plasmaCell\",\n                                        \"CD8Tcm\",\"Mph/DC-1\", \"Mph/DC-2\"),\n                        targets.use = \"ACTA2+PRC\",\n                        comparison = c(1, 2),  angle.x = 90, remove.isolate = T,\n                        title.name = paste0(\"Down-regulated signaling in \", \n                                            names(object.list)[1]))\ngg1 + gg2"
  },
  {
    "objectID": "analysis/runCellchat_act_vs_res.html#save-cellchat-objects",
    "href": "analysis/runCellchat_act_vs_res.html#save-cellchat-objects",
    "title": "run cellchat scRNAseq data human LN",
    "section": "save cellchat objects",
    "text": "save cellchat objects\n\nsaveRDS(cellchat.merge, file = paste0(basedir, \"/data/cellchat/FRCplusImmune_\",\n                                      \"resPlusActMerge_cellchat.rds\"))\n\nsaveRDS(cellchat.res, file = paste0(basedir, \"/data/cellchat/FRCplusImmune_\",\n                                      \"resOnly_cellchat.rds\"))\n\nsaveRDS(cellchat.act, file = paste0(basedir, \"/data/cellchat/FRCplusImmune_\",\n                                      \"actOnly_cellchat.rds\"))"
  },
  {
    "objectID": "analysis/runCellchat_act_vs_res.html#session-info",
    "href": "analysis/runCellchat_act_vs_res.html#session-info",
    "title": "run cellchat scRNAseq data human LN",
    "section": "session info",
    "text": "session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] grid      stats4    stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] ComplexHeatmap_2.16.0       patchwork_1.2.0             CellChat_1.6.1             \n [4] igraph_2.0.2                scran_1.28.2                scater_1.28.0              \n [7] scuttle_1.10.3              SingleCellExperiment_1.22.0 SummarizedExperiment_1.30.2\n[10] Biobase_2.60.0              GenomicRanges_1.52.1        GenomeInfoDb_1.36.4        \n[13] IRanges_2.36.0              S4Vectors_0.40.1            BiocGenerics_0.48.0        \n[16] MatrixGenerics_1.12.3       matrixStats_1.2.0           pheatmap_1.0.12            \n[19] ggsci_3.0.1                 here_1.0.1                  runSeurat3_0.1.0           \n[22] ggpubr_0.6.0                lubridate_1.9.3             forcats_1.0.0              \n[25] stringr_1.5.1               readr_2.1.5                 tidyr_1.3.1                \n[28] tibble_3.2.1                tidyverse_2.0.0             Seurat_5.0.2               \n[31] SeuratObject_5.0.1          sp_2.1-3                    purrr_1.0.2                \n[34] ggplot2_3.5.0               reshape2_1.4.4              dplyr_1.1.4                \n\nloaded via a namespace (and not attached):\n  [1] spatstat.sparse_3.0-3     bitops_1.0-7              httr_1.4.7               \n  [4] RColorBrewer_1.1-3        doParallel_1.0.17         tools_4.3.0              \n  [7] sctransform_0.4.1         backports_1.4.1           utf8_1.2.4               \n [10] R6_2.5.1                  lazyeval_0.2.2            uwot_0.1.16              \n [13] GetoptLong_1.0.5          withr_3.0.0               gridExtra_2.3            \n [16] progressr_0.14.0          textshaping_0.3.7         cli_3.6.2                \n [19] Cairo_1.6-2               spatstat.explore_3.2-6    fastDummies_1.7.3        \n [22] network_1.18.2            labeling_0.4.3            spatstat.data_3.0-4      \n [25] ggridges_0.5.6            pbapply_1.7-2             systemfonts_1.0.5        \n [28] svglite_2.1.3             parallelly_1.37.1         limma_3.56.2             \n [31] rstudioapi_0.15.0         FNN_1.1.4                 generics_0.1.3           \n [34] shape_1.4.6.1             ica_1.0-3                 spatstat.random_3.2-3    \n [37] car_3.1-2                 Matrix_1.6-5              ggbeeswarm_0.7.2         \n [40] fansi_1.0.6               abind_1.4-5               lifecycle_1.0.4          \n [43] yaml_2.3.8                edgeR_3.42.4              carData_3.0-5            \n [46] Rtsne_0.17                promises_1.2.1            dqrng_0.3.2              \n [49] crayon_1.5.2              miniUI_0.1.1.1            lattice_0.22-5           \n [52] beachmat_2.16.0           cowplot_1.1.3             magick_2.8.3             \n [55] sna_2.7-2                 pillar_1.9.0              knitr_1.45               \n [58] metapod_1.8.0             rjson_0.2.21              future.apply_1.11.1      \n [61] codetools_0.2-19          leiden_0.4.3.1            glue_1.7.0               \n [64] data.table_1.15.2         vctrs_0.6.5               png_0.1-8                \n [67] spam_2.10-0               gtable_0.3.4              xfun_0.42                \n [70] S4Arrays_1.0.6            mime_0.12                 coda_0.19-4.1            \n [73] survival_3.5-8            iterators_1.0.14          statmod_1.5.0            \n [76] bluster_1.10.0            ellipsis_0.3.2            fitdistrplus_1.1-11      \n [79] ROCR_1.0-11               nlme_3.1-164              RcppAnnoy_0.0.22         \n [82] rprojroot_2.0.4           irlba_2.3.5.1             vipor_0.4.7              \n [85] KernSmooth_2.23-22        colorspace_2.1-0          tidyselect_1.2.0         \n [88] compiler_4.3.0            BiocNeighbors_1.18.0      DelayedArray_0.26.7      \n [91] plotly_4.10.4             scales_1.3.0              lmtest_0.9-40            \n [94] NMF_0.27                  digest_0.6.34             goftest_1.2-3            \n [97] spatstat.utils_3.0-4      rmarkdown_2.26            XVector_0.40.0           \n[100] htmltools_0.5.7           pkgconfig_2.0.3           sparseMatrixStats_1.12.2 \n[103] fastmap_1.1.1             rlang_1.1.3               GlobalOptions_0.1.2      \n[106] htmlwidgets_1.6.4         shiny_1.8.0               DelayedMatrixStats_1.22.6\n[109] farver_2.1.1              zoo_1.8-12                jsonlite_1.8.8           \n[112] statnet.common_4.9.0      BiocParallel_1.34.2       BiocSingular_1.16.0      \n[115] RCurl_1.98-1.14           magrittr_2.0.3            ggnetwork_0.5.13         \n[118] GenomeInfoDbData_1.2.10   dotCall64_1.1-1           munsell_0.5.0            \n[121] Rcpp_1.0.12               viridis_0.6.5             reticulate_1.35.0        \n[124] stringi_1.8.3             ggalluvial_0.12.5         zlibbioc_1.46.0          \n[127] MASS_7.3-60.0.1           plyr_1.8.9                parallel_4.3.0           \n[130] listenv_0.9.1             ggrepel_0.9.5             deldir_2.0-4             \n[133] splines_4.3.0             tensor_1.5                hms_1.1.3                \n[136] circlize_0.4.16           locfit_1.5-9.9            spatstat.geom_3.2-9      \n[139] ggsignif_0.6.4            RcppHNSW_0.6.0            rngtools_1.5.2           \n[142] ScaledMatrix_1.8.1        evaluate_0.23             tzdb_0.4.0               \n[145] foreach_1.5.2             httpuv_1.6.14             RANN_2.6.1               \n[148] polyclip_1.10-6           future_1.33.1             clue_0.3-65              \n[151] scattermore_1.2           gridBase_0.4-7            rsvd_1.0.5               \n[154] broom_1.0.5               xtable_1.8-4              RSpectra_0.16-1          \n[157] rstatix_0.7.2             later_1.3.2               ragg_1.2.7               \n[160] viridisLite_0.4.2         beeswarm_0.4.0            registry_0.5-1           \n[163] cluster_2.1.6             timechange_0.3.0          globals_0.16.2           \n\ndate()\n\n[1] \"Wed Mar 13 23:29:37 2024\""
  },
  {
    "objectID": "analysis/mergeSamples.html",
    "href": "analysis/mergeSamples.html",
    "title": "Merge human LN stromal cells",
    "section": "",
    "text": "suppressPackageStartupMessages({\n  library(tidyverse)\n  library(Seurat)\n  library(magrittr)\n  library(dplyr)\n  library(purrr)\n  library(ggplot2)\n  library(here)\n  library(runSeurat3)\n  library(ggsci)\n})"
  },
  {
    "objectID": "analysis/mergeSamples.html#set-dir",
    "href": "analysis/mergeSamples.html#set-dir",
    "title": "Merge human LN stromal cells",
    "section": "set dir",
    "text": "set dir\n\nbasedir <- here()\nmetaDat <- read_tsv(paste0(basedir, \"/data/metadataStroma.txt\"), col_names = T)"
  },
  {
    "objectID": "analysis/mergeSamples.html#load-and-assign-samples",
    "href": "analysis/mergeSamples.html#load-and-assign-samples",
    "title": "Merge human LN stromal cells",
    "section": "load and assign samples",
    "text": "load and assign samples\n\nassignSamples <- function(smpNam, basedirSmp, smpPat, smpGrp, smpOri,\n                          smpImm, smpVDJ){\n  smpNamFull <- list.files(path = paste0(basedirSmp, \"/data/stroma/\"),\n                 pattern = paste0(smpNam, \".*_seurat.rds\"))\n  seuratSmp <- readRDS(paste0(basedirSmp, \"/data/stroma/\", smpNamFull))\n  seuratSmp$patient <- smpPat\n  seuratSmp$cond <- smpGrp\n  seuratSmp$origin <- smpOri\n  seuratSmp$immCell <- smpImm\n  seuratSmp$vdj <- smpVDJ\n  return(seuratSmp)\n}\n\n\n####################################################################\n\nfor(i in 1:length(metaDat$dataset)){\n  seuratX <- assignSamples(smpNam = metaDat$dataset[i],\n                           basedirSmp = basedir,\n                           smpPat =  metaDat$patient[i],\n                           smpGrp = metaDat$cond[i],\n                           smpOri = metaDat$origin[i],\n                           smpImm = metaDat$immuneCells[i],\n                           smpVDJ = metaDat$VDJ[i])\n  if(exists(\"seurat\")){\n    seurat <- merge(x = seurat, y = seuratX, project = \"LymphNode_FSC\")\n  }else{\n    seurat <- seuratX\n  }\n}\n\nremove(seuratX)"
  },
  {
    "objectID": "analysis/mergeSamples.html#filter-cells",
    "href": "analysis/mergeSamples.html#filter-cells",
    "title": "Merge human LN stromal cells",
    "section": "filter cells",
    "text": "filter cells\n\ndim(seurat)\n\n[1]  36098 129116\n\n## reprocess\nres <- c(0.8,0.6,0.4,0.25)\n\nseurat <- NormalizeData(object = seurat)\nseurat <- FindVariableFeatures(object = seurat)\nseurat <- ScaleData(object = seurat, verbose = FALSE)\nseurat <- RunPCA(object = seurat, npcs = 30, verbose = FALSE)\nseurat <- RunTSNE(object = seurat, reduction = \"pca\", dims = 1:20)\nseurat <- RunUMAP(object = seurat, reduction = \"pca\", dims = 1:20)\nseurat <- FindNeighbors(object = seurat, reduction = \"pca\", \n                        dims = 1:20)\nfor (i in 1:length(res)) {\n    seurat <- FindClusters(object = seurat, resolution = res[i], \n                           random.seed = 1234)\n    }\n\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 129116\nNumber of edges: 4228551\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9118\nNumber of communities: 32\nElapsed time: 51 seconds\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 129116\nNumber of edges: 4228551\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9228\nNumber of communities: 29\nElapsed time: 63 seconds\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 129116\nNumber of edges: 4228551\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9379\nNumber of communities: 23\nElapsed time: 74 seconds\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 129116\nNumber of edges: 4228551\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9531\nNumber of communities: 19\nElapsed time: 76 seconds\n\n## remove cluster with high expression of CD3E, PTPRC, CD79A (b + T cells)\n## remove cluster with high expression of LTF, KRTs, S100A.. ()\n## remove cluster with high expression of PLP1, NRXN1, MPZ.. (Neurons)\n\nseurat <- subset(seurat, RNA_snn_res.0.25 %in% c(\"6\", \"9\", \"10\", \"12\",\n                                                 \"13\",\"16\"), invert = T)\n\ndim(seurat)\n\n[1]  36098 117137\n\n## reprocess\nres <- c(0.8,0.6,0.4,0.25)\n\nseurat <- NormalizeData(object = seurat)\nseurat <- FindVariableFeatures(object = seurat)\nseurat <- ScaleData(object = seurat, verbose = FALSE)\nseurat <- RunPCA(object = seurat, npcs = 30, verbose = FALSE)\nseurat <- RunTSNE(object = seurat, reduction = \"pca\", dims = 1:20)\nseurat <- RunUMAP(object = seurat, reduction = \"pca\", dims = 1:20)\nseurat <- FindNeighbors(object = seurat, reduction = \"pca\", \n                        dims = 1:20)\nfor (i in 1:length(res)) {\n    seurat <- FindClusters(object = seurat, resolution = res[i], \n                           random.seed = 1234)\n    }\n\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 117137\nNumber of edges: 3719822\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9061\nNumber of communities: 27\nElapsed time: 42 seconds\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 117137\nNumber of edges: 3719822\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9176\nNumber of communities: 24\nElapsed time: 46 seconds\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 117137\nNumber of edges: 3719822\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9329\nNumber of communities: 19\nElapsed time: 49 seconds\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 117137\nNumber of edges: 3719822\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9473\nNumber of communities: 14\nElapsed time: 53 seconds"
  },
  {
    "objectID": "analysis/mergeSamples.html#visualize-data",
    "href": "analysis/mergeSamples.html#visualize-data",
    "title": "Merge human LN stromal cells",
    "section": "visualize data",
    "text": "visualize data\n\nclustering\n\ncolPal <- c(pal_nejm()(8),pal_futurama()(12))[1:length(levels(seurat))]\nnames(colPal) <- levels(seurat)\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPal)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\npatient\n\ncolPat <- c(pal_jco()(10),pal_futurama()(12))[1:length(unique(seurat$patient))]\nnames(colPat) <- unique(seurat$patient)\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\ncondition\n\ncolCond <- pal_igv()(length(unique(seurat$cond)))\nnames(colCond) <- unique(seurat$cond)\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colCond, group.by = \"cond\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\norigin\n\ncolOrig <- pal_aaas()(length(unique(seurat$origin)))\nnames(colCond) <- unique(seurat$cond)\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colOrig, group.by = \"origin\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")"
  },
  {
    "objectID": "analysis/mergeSamples.html#save-seurat-object",
    "href": "analysis/mergeSamples.html#save-seurat-object",
    "title": "Merge human LN stromal cells",
    "section": "save seurat object",
    "text": "save seurat object\n\nsaveRDS(seurat, file=paste0(basedir, \"/data/AllPatCM_LNFSCMerged_seurat.rds\"))"
  },
  {
    "objectID": "analysis/mergeSamples.html#session-info",
    "href": "analysis/mergeSamples.html#session-info",
    "title": "Merge human LN stromal cells",
    "section": "session info",
    "text": "session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] ggsci_3.0.1        runSeurat3_0.1.0   here_1.0.1         magrittr_2.0.3     Seurat_5.0.2      \n [6] SeuratObject_5.0.1 sp_2.1-3           lubridate_1.9.3    forcats_1.0.0      stringr_1.5.1     \n[11] dplyr_1.1.4        purrr_1.0.2        readr_2.1.5        tidyr_1.3.1        tibble_3.2.1      \n[16] ggplot2_3.5.0      tidyverse_2.0.0   \n\nloaded via a namespace (and not attached):\n  [1] RColorBrewer_1.1-3          rstudioapi_0.15.0           jsonlite_1.8.8             \n  [4] spatstat.utils_3.0-4        farver_2.1.1                rmarkdown_2.26             \n  [7] zlibbioc_1.46.0             vctrs_0.6.5                 ROCR_1.0-11                \n [10] spatstat.explore_3.2-6      RCurl_1.98-1.14             S4Arrays_1.0.6             \n [13] htmltools_0.5.7             sctransform_0.4.1           parallelly_1.37.1          \n [16] KernSmooth_2.23-22          htmlwidgets_1.6.4           ica_1.0-3                  \n [19] plyr_1.8.9                  plotly_4.10.4               zoo_1.8-12                 \n [22] igraph_2.0.2                mime_0.12                   lifecycle_1.0.4            \n [25] pkgconfig_2.0.3             Matrix_1.6-5                R6_2.5.1                   \n [28] fastmap_1.1.1               GenomeInfoDbData_1.2.10     MatrixGenerics_1.12.3      \n [31] fitdistrplus_1.1-11         future_1.33.1               shiny_1.8.0                \n [34] digest_0.6.34               colorspace_2.1-0            S4Vectors_0.40.1           \n [37] patchwork_1.2.0             rprojroot_2.0.4             tensor_1.5                 \n [40] RSpectra_0.16-1             irlba_2.3.5.1               GenomicRanges_1.52.1       \n [43] labeling_0.4.3              progressr_0.14.0            fansi_1.0.6                \n [46] spatstat.sparse_3.0-3       timechange_0.3.0            httr_1.4.7                 \n [49] polyclip_1.10-6             abind_1.4-5                 compiler_4.3.0             \n [52] bit64_4.0.5                 withr_3.0.0                 fastDummies_1.7.3          \n [55] MASS_7.3-60.0.1             DelayedArray_0.26.7         tools_4.3.0                \n [58] lmtest_0.9-40               httpuv_1.6.14               future.apply_1.11.1        \n [61] goftest_1.2-3               glue_1.7.0                  nlme_3.1-164               \n [64] promises_1.2.1              grid_4.3.0                  Rtsne_0.17                 \n [67] cluster_2.1.6               reshape2_1.4.4              generics_0.1.3             \n [70] gtable_0.3.4                spatstat.data_3.0-4         tzdb_0.4.0                 \n [73] data.table_1.15.2           hms_1.1.3                   XVector_0.40.0             \n [76] utf8_1.2.4                  BiocGenerics_0.48.0         spatstat.geom_3.2-9        \n [79] RcppAnnoy_0.0.22            ggrepel_0.9.5               RANN_2.6.1                 \n [82] pillar_1.9.0                vroom_1.6.5                 spam_2.10-0                \n [85] RcppHNSW_0.6.0              later_1.3.2                 splines_4.3.0              \n [88] lattice_0.22-5              bit_4.0.5                   survival_3.5-8             \n [91] deldir_2.0-4                tidyselect_1.2.0            SingleCellExperiment_1.22.0\n [94] miniUI_0.1.1.1              pbapply_1.7-2               knitr_1.45                 \n [97] gridExtra_2.3               IRanges_2.36.0              SummarizedExperiment_1.30.2\n[100] scattermore_1.2             stats4_4.3.0                xfun_0.42                  \n[103] Biobase_2.60.0              matrixStats_1.2.0           pheatmap_1.0.12            \n[106] stringi_1.8.3               lazyeval_0.2.2              yaml_2.3.8                 \n[109] evaluate_0.23               codetools_0.2-19            cli_3.6.2                  \n[112] uwot_0.1.16                 xtable_1.8-4                reticulate_1.35.0          \n[115] munsell_0.5.0               GenomeInfoDb_1.36.4         Rcpp_1.0.12                \n[118] globals_0.16.2              spatstat.random_3.2-3       png_0.1-8                  \n[121] parallel_4.3.0              ellipsis_0.3.2              dotCall64_1.1-1            \n[124] bitops_1.0-7                listenv_0.9.1               viridisLite_0.4.2          \n[127] scales_1.3.0                ggridges_0.5.6              crayon_1.5.2               \n[130] leiden_0.4.3.1              rlang_1.1.3                 cowplot_1.1.3              \n\ndate()\n\n[1] \"Thu Mar 14 00:21:48 2024\""
  },
  {
    "objectID": "analysis/visLECMarkerGenes_woCM.html#load-packages",
    "href": "analysis/visLECMarkerGenes_woCM.html#load-packages",
    "title": "visualize marker genes LECs",
    "section": "Load packages",
    "text": "Load packages\n\n## load packages \nsuppressPackageStartupMessages({\n  library(dplyr)\n  library(reshape2)\n  library(ggplot2)\n  library(cowplot)\n  library(purrr)\n  library(Seurat)\n  library(tidyverse)\n  library(ggpubr)\n  library(runSeurat3)\n  library(here)\n  library(ggsci)\n  library(pheatmap)\n  library(scater)\n})"
  },
  {
    "objectID": "analysis/visLECMarkerGenes_woCM.html#load-seurat-object",
    "href": "analysis/visLECMarkerGenes_woCM.html#load-seurat-object",
    "title": "visualize marker genes LECs",
    "section": "load seurat object",
    "text": "load seurat object\n\nbasedir <- here()\n\nseurat <- readRDS(file= paste0(basedir,\n                            \"/data/AllPatWithoutCM_LEConly_intOrig_seurat.rds\"))\n\nDefaultAssay(object = seurat) <- \"RNA\"\nseurat$intCluster <- seurat$integrated_snn_res.0.25\nIdents(seurat) <- seurat$intCluster\n\n\n## set col palettes\ncolPal <- colPal <- c(pal_nejm()(8))[1:length(unique(seurat$intCluster))]\nnames(colPal) <- unique(seurat$intCluster)\ncolLab <- c(\"#79AF97FF\",\"#374E55FF\",\"#B24745FF\",\"#DF8F44FF\",\"#6A6599FF\",\n             \"#D595A7FF\")\nnames(colLab) <- c(\"SCScLEC\",\"MedCapsLEC\",  \"SCSfLEC\", \"MedSinusLEC\",  \n                   \"ParacortLEC\",\"ValveLEC\")\n\ncolPat <- c(pal_nejm()(7),pal_futurama()(12))[1:length(unique(seurat$patient))]\nnames(colPat) <- unique(seurat$patient)\ncolCond <- c(\"#6692a3\",\"#971c1c\",\"#d17d67\")\nnames(colCond) <- unique(seurat$cond)\ncolGrp <- pal_uchicago()(length(unique(seurat$grp)))\nnames(colGrp) <- unique(seurat$grp)\ncolOri <- pal_npg()(length(unique(seurat$origin)))\nnames(colOri) <- unique(seurat$origin)\n\ncolCond2 <- c(\"#6692a3\",\"#971c1c\")\nnames(colCond2) <- c(\"resting\", \"activated\")"
  },
  {
    "objectID": "analysis/visLECMarkerGenes_woCM.html#visualize-data",
    "href": "analysis/visLECMarkerGenes_woCM.html#visualize-data",
    "title": "visualize marker genes LECs",
    "section": "visualize data",
    "text": "visualize data\n\nclustering\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPal)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colPal, pt.size=0.5)+\n  theme_void()\n\n\n\n\n\n\ncluster split by cond\n\nDimPlot(seurat, reduction = \"umap\", cols=colPal, pt.size=0.5,\n        split.by = \"cond2\")+\n  theme_void()\n\n\n\n\n\n\npatient\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colPat, group.by = \"patient\",\n        pt.size=0.5, shuffle = T)+\n  theme_void()\n\n\n\n\n\n\ncond\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colCond2, group.by = \"cond2\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colCond2, group.by = \"cond2\",\n        pt.size=0.5, shuffle = T)+\n  theme_void()\n\n\n\n\n\n\ngrp\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colGrp, group.by = \"grp\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\n\n\n\norigin\n\n## visualize input data\nDimPlot(seurat, reduction = \"umap\", cols=colOri, group.by = \"origin\")+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")"
  },
  {
    "objectID": "analysis/visLECMarkerGenes_woCM.html#vis-cluster-marker",
    "href": "analysis/visLECMarkerGenes_woCM.html#vis-cluster-marker",
    "title": "visualize marker genes LECs",
    "section": "vis cluster marker",
    "text": "vis cluster marker\n\nmarker genes\n\nseurat_markers_all <- FindAllMarkers(object = seurat, assay =\"RNA\",\n                                     only.pos = TRUE, min.pct = 0.25,\n                                     logfc.threshold = 0.25,\n                                     test.use = \"wilcox\")\n\n\n\navg heatmap\n\ncluster <- levels(seurat)\nselGenesAll <- seurat_markers_all %>% group_by(cluster) %>% \n  top_n(-20, p_val_adj) %>% \n  top_n(20, avg_log2FC)\nselGenesAll <- selGenesAll %>% mutate(geneIDval=gsub(\"^.*\\\\.\", \"\", gene)) %>% filter(nchar(geneIDval)>1)\n\nIdents(seurat) <- seurat$intCluster\npOut <- avgHeatmap(seurat = seurat, selGenes = selGenesAll,\n                  colVecIdent = colPal, \n                  ordVec=levels(seurat),\n                  gapVecR=NULL, gapVecC=NULL,cc=FALSE,\n                  cr=T, condCol=F)"
  },
  {
    "objectID": "analysis/visLECMarkerGenes_woCM.html#write-table",
    "href": "analysis/visLECMarkerGenes_woCM.html#write-table",
    "title": "visualize marker genes LECs",
    "section": "write table",
    "text": "write table\n\nwrite.table(seurat_markers_all,\n            file=paste0(basedir,\n                        \"/data/AllPatWithoutCM_LEConly_intOrig_markerGenes.txt\"),\n            row.names = FALSE, col.names = TRUE, quote = FALSE, sep = \"\\t\")"
  },
  {
    "objectID": "analysis/visLECMarkerGenes_woCM.html#asign-labels",
    "href": "analysis/visLECMarkerGenes_woCM.html#asign-labels",
    "title": "visualize marker genes LECs",
    "section": "asign labels",
    "text": "asign labels\n\nseurat$label <- \"SCScLEC\"\nseurat$label[which(seurat$intCluster %in% c(\"1\"))] <- \"SCSfLEC\"\nseurat$label[which(seurat$intCluster %in% c(\"2\"))] <- \"MedSinusLEC\"\nseurat$label[which(seurat$intCluster %in% c(\"3\"))] <- \"MedCapsLEC\"\nseurat$label[which(seurat$intCluster %in% c(\"4\"))] <- \"ParacortLEC\"\nseurat$label[which(seurat$intCluster %in% c(\"7\"))] <- \"ValveLEC\""
  },
  {
    "objectID": "analysis/visLECMarkerGenes_woCM.html#visualize-label",
    "href": "analysis/visLECMarkerGenes_woCM.html#visualize-label",
    "title": "visualize marker genes LECs",
    "section": "visualize label",
    "text": "visualize label\n\nIdents(seurat) <- seurat$label\n\nDimPlot(seurat, reduction = \"umap\", cols=colLab)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nDimPlot(seurat, reduction = \"umap\", cols=colLab, pt.size=0.5)+\n  theme_void()"
  },
  {
    "objectID": "analysis/visLECMarkerGenes_woCM.html#vis-selected-lec-marker",
    "href": "analysis/visLECMarkerGenes_woCM.html#vis-selected-lec-marker",
    "title": "visualize marker genes LECs",
    "section": "vis selected LEC marker",
    "text": "vis selected LEC marker\n\ngenes <- data.frame(gene=rownames(seurat)) %>% \n    mutate(geneID=gsub(\"^.*\\\\.\", \"\", gene)) \n\nselGenesAll <- read_tsv(file = paste0(basedir,\n                                      \"/data/overallLECMarker.txt\")) %>% \n  left_join(., genes, by = \"geneID\")\n\nseurat$label <- factor(seurat$label, levels = names(colLab))\nIdents(seurat) <- seurat$label\n\npOut <- avgHeatmap(seurat = seurat, selGenes = selGenesAll,\n                  colVecIdent = colLab, \n                  ordVec=levels(seurat),\n                  gapVecR=NULL, gapVecC=NULL,cc=F,\n                  cr=F, condCol=F)\n\n\n\n\n\nDotplot\n\nDotPlot(seurat, assay=\"RNA\", features = rev(selGenesAll$gene), scale =T,\n        cluster.idents = F) +\n  scale_color_viridis_c() +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  scale_x_discrete(breaks=rev(selGenesAll$gene), labels=rev(selGenesAll$geneID)) +\n  xlab(\"\") + ylab(\"\")\n\n\n\nDotPlot(seurat, assay=\"RNA\", features = rev(selGenesAll$gene), scale =F,\n        cluster.idents = F) +\n  scale_color_viridis_c() +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  scale_x_discrete(breaks=rev(selGenesAll$gene), labels=rev(selGenesAll$geneID)) +\n  xlab(\"\") + ylab(\"\")\n\n\n\n\n\n\nFeatureplot\n\npList <- sapply(selGenesAll$gene, function(x){\np <- FeaturePlot(seurat, reduction = \"umap\", \n            features = x,\n            cols=c(\"lightgrey\", \"darkred\"),\n            order = F)+\n  theme(legend.position=\"right\")\n  plot(p)\n})"
  },
  {
    "objectID": "analysis/visLECMarkerGenes_woCM.html#save-labeled-seurat-object",
    "href": "analysis/visLECMarkerGenes_woCM.html#save-labeled-seurat-object",
    "title": "visualize marker genes LECs",
    "section": "save labeled seurat object",
    "text": "save labeled seurat object\n\nsaveRDS(seurat, paste0(basedir,\n                            \"/data/AllPatWithoutCM_LEConly_intOrig_label\",\n                       \"_seurat.rds\"))"
  },
  {
    "objectID": "analysis/visLECMarkerGenes_woCM.html#session-info",
    "href": "analysis/visLECMarkerGenes_woCM.html#session-info",
    "title": "visualize marker genes LECs",
    "section": "session info",
    "text": "session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] scater_1.28.0               scuttle_1.10.3              SingleCellExperiment_1.22.0\n [4] SummarizedExperiment_1.30.2 Biobase_2.60.0              GenomicRanges_1.52.1       \n [7] GenomeInfoDb_1.36.4         IRanges_2.36.0              S4Vectors_0.40.1           \n[10] BiocGenerics_0.48.0         MatrixGenerics_1.12.3       matrixStats_1.2.0          \n[13] pheatmap_1.0.12             ggsci_3.0.1                 here_1.0.1                 \n[16] runSeurat3_0.1.0            ggpubr_0.6.0                lubridate_1.9.3            \n[19] forcats_1.0.0               stringr_1.5.1               readr_2.1.5                \n[22] tidyr_1.3.1                 tibble_3.2.1                tidyverse_2.0.0            \n[25] Seurat_5.0.2                SeuratObject_5.0.1          sp_2.1-3                   \n[28] purrr_1.0.2                 cowplot_1.1.3               ggplot2_3.5.0              \n[31] reshape2_1.4.4              dplyr_1.1.4                \n\nloaded via a namespace (and not attached):\n  [1] RcppAnnoy_0.0.22          splines_4.3.0             later_1.3.2              \n  [4] bitops_1.0-7              polyclip_1.10-6           fastDummies_1.7.3        \n  [7] lifecycle_1.0.4           rstatix_0.7.2             rprojroot_2.0.4          \n [10] vroom_1.6.5               globals_0.16.2            lattice_0.22-5           \n [13] MASS_7.3-60.0.1           backports_1.4.1           magrittr_2.0.3           \n [16] limma_3.56.2              plotly_4.10.4             rmarkdown_2.26           \n [19] yaml_2.3.8                httpuv_1.6.14             sctransform_0.4.1        \n [22] spam_2.10-0               spatstat.sparse_3.0-3     reticulate_1.35.0        \n [25] pbapply_1.7-2             RColorBrewer_1.1-3        abind_1.4-5              \n [28] zlibbioc_1.46.0           Rtsne_0.17                presto_1.0.0             \n [31] RCurl_1.98-1.14           GenomeInfoDbData_1.2.10   ggrepel_0.9.5            \n [34] irlba_2.3.5.1             listenv_0.9.1             spatstat.utils_3.0-4     \n [37] goftest_1.2-3             RSpectra_0.16-1           spatstat.random_3.2-3    \n [40] fitdistrplus_1.1-11       parallelly_1.37.1         DelayedMatrixStats_1.22.6\n [43] leiden_0.4.3.1            codetools_0.2-19          DelayedArray_0.26.7      \n [46] tidyselect_1.2.0          farver_2.1.1              viridis_0.6.5            \n [49] ScaledMatrix_1.8.1        spatstat.explore_3.2-6    jsonlite_1.8.8           \n [52] BiocNeighbors_1.18.0      ellipsis_0.3.2            progressr_0.14.0         \n [55] ggridges_0.5.6            survival_3.5-8            tools_4.3.0              \n [58] ica_1.0-3                 Rcpp_1.0.12               glue_1.7.0               \n [61] gridExtra_2.3             xfun_0.42                 withr_3.0.0              \n [64] fastmap_1.1.1             fansi_1.0.6               rsvd_1.0.5               \n [67] digest_0.6.34             timechange_0.3.0          R6_2.5.1                 \n [70] mime_0.12                 colorspace_2.1-0          scattermore_1.2          \n [73] tensor_1.5                spatstat.data_3.0-4       utf8_1.2.4               \n [76] generics_0.1.3            data.table_1.15.2         httr_1.4.7               \n [79] htmlwidgets_1.6.4         S4Arrays_1.0.6            uwot_0.1.16              \n [82] pkgconfig_2.0.3           gtable_0.3.4              lmtest_0.9-40            \n [85] XVector_0.40.0            htmltools_0.5.7           carData_3.0-5            \n [88] dotCall64_1.1-1           scales_1.3.0              png_0.1-8                \n [91] knitr_1.45                rstudioapi_0.15.0         tzdb_0.4.0               \n [94] nlme_3.1-164              zoo_1.8-12                KernSmooth_2.23-22       \n [97] vipor_0.4.7               parallel_4.3.0            miniUI_0.1.1.1           \n[100] pillar_1.9.0              grid_4.3.0                vctrs_0.6.5              \n[103] RANN_2.6.1                promises_1.2.1            BiocSingular_1.16.0      \n[106] car_3.1-2                 beachmat_2.16.0           xtable_1.8-4             \n[109] cluster_2.1.6             beeswarm_0.4.0            evaluate_0.23            \n[112] cli_3.6.2                 compiler_4.3.0            rlang_1.1.3              \n[115] crayon_1.5.2              future.apply_1.11.1       ggsignif_0.6.4           \n[118] labeling_0.4.3            ggbeeswarm_0.7.2          plyr_1.8.9               \n[121] stringi_1.8.3             BiocParallel_1.34.2       viridisLite_0.4.2        \n[124] deldir_2.0-4              munsell_0.5.0             lazyeval_0.2.2           \n[127] spatstat.geom_3.2-9       Matrix_1.6-5              RcppHNSW_0.6.0           \n[130] hms_1.1.3                 patchwork_1.2.0           bit64_4.0.5              \n[133] sparseMatrixStats_1.12.2  future_1.33.1             shiny_1.8.0              \n[136] ROCR_1.0-11               igraph_2.0.2              broom_1.0.5              \n[139] bit_4.0.5                \n\ndate()\n\n[1] \"Thu Mar 14 00:22:46 2024\""
  },
  {
    "objectID": "analysis/runSpaTalkDecompB2_s2.html",
    "href": "analysis/runSpaTalkDecompB2_s2.html",
    "title": "Run spatalk decomposition - s2 batch2",
    "section": "",
    "text": "library(tidyverse)\nlibrary(SpatialExperiment)\nlibrary(here)\nlibrary(ggspavis)\nlibrary(scater)\nlibrary(ggsci)\nlibrary(scran)\nlibrary(pheatmap)\nlibrary(SpaTalk)\nlibrary(Matrix)\nlibrary(Seurat)\nlibrary(igraph)\nlibrary(biomaRt)"
  },
  {
    "objectID": "analysis/runSpaTalkDecompB2_s2.html#sample-4",
    "href": "analysis/runSpaTalkDecompB2_s2.html#sample-4",
    "title": "Run spatalk decomposition - s2 batch2",
    "section": "Sample 4",
    "text": "Sample 4\n\nLoad reference and spe object\n\nbasedir <- here()\n\n\nrefSeurat <- readRDS(paste0(basedir, \"/data/refSeurat_allCelltypesIntImm.rds\"))\n\nspeAll <- readRDS(paste0(basedir, \"/data/speAllLNB2.rds\"))\n\ngenes <- data.frame(geneLong=rownames(refSeurat)) %>%\n  mutate(EnsID=gsub(\"\\\\..*\", \"\", geneLong)) %>% \n  mutate(symbol=substr(geneLong, start=17, stop=nchar(geneLong)))\n\n\n\nset color palettes\n\ncolLEC <- c(\"#79AF97FF\",\"#B24745FF\",\"#DF8F44FF\")\nnames(colLEC) <- c(\"SCScLEC\", \"SCSfLEC\", \"MedSinusLEC\")\n\ncolBEC <- c(\"#48557e\", \"#e3a616\",\"#9a3038\")\nnames(colBEC) <- c(\"venBEC\", \"capBEC\", \"artBEC\")\n\n\ncolFRC <- c(\"#800000FF\", \"#FFA319FF\",\"#8A9045FF\", \"#155F83FF\",\n            \"#C16622FF\", \"#6692a3\", \"#3b7f60\")\nnames(colFRC) <- c(\"medRCIFRC\", \"TRC\", \"ACTA2+PRC\", \"VSMC\", \"PI16+RC\", \"PRC1\",\n                   \"BRC\")\n\n\ncolImm <- c(\"#0b6647\", \"#54907e\", \"#94c78a\", \"#6f9568\", \n            \"#8f2810\", \"#d0ac21\",\"#9e9f0b\", \"#486584\",\n            \"#4b5397\", \"#8873d3\", \"#6e3e7a\")\n            \nnames(colImm) <- c(\"naiveB\", \"GCB\", \"MBC\", \"plasmaCell\",\n                   \"CD4T\", \"CD8Tcm\", \"CTL/NKcell\", \"ILC3\", \"pDC\", \"Mph/DC-1\",\n                   \"Mph/DC-2\")\n\ncolAll <- c(colFRC, colBEC, colLEC, colImm) \n\ncolPal <- c(\"#F0027F\", \"#377EB8\", \"#4DAF4A\", \"#984EA3\", \"#FFD700\",\n            \"#FF7F00\", \"#1A1A1A\", \"#666666\", pal_futurama()(10))\n\n\n\nformat sc reference data\n\n## downsample\ndim(refSeurat)\n\n[1]  39642 122538\n\ntable(refSeurat$label)\n\n\n  ACTA2+PRC      artBEC         BRC      capBEC        CD4T      CD8Tcm \n       1560        1048         390        1091       39380        4006 \n CTL/NKcell         GCB        ILC3         MBC   medRCIFRC MedSinusLEC \n      10339         869        1819       17174       10129          42 \n   Mph/DC-1    Mph/DC-2      naiveB         pDC     PI16+RC  plasmaCell \n       2952         980       14118        6750         986         326 \n       PRC1     SCScLEC     SCSfLEC         TRC      venBEC        VSMC \n        760         332         129        3773        2861         724 \n\n#refSeurat$pat_plus_label <- paste0(refSeurat$patient, \"_\", refSeurat$label)\n#table(refSeurat$pat_plus_label)\n#Idents(refSeurat) <- refSeurat$pat_plus_label\nIdents(refSeurat) <- refSeurat$label\nrefSeurat <- subset(x = refSeurat, downsample = 500)\ndim(refSeurat)\n\n[1] 39642 10719\n\n#table(refSeurat$pat_plus_label)\ntable(refSeurat$label)\n\n\n  ACTA2+PRC      artBEC         BRC      capBEC        CD4T      CD8Tcm \n        500         500         390         500         500         500 \n CTL/NKcell         GCB        ILC3         MBC   medRCIFRC MedSinusLEC \n        500         500         500         500         500          42 \n   Mph/DC-1    Mph/DC-2      naiveB         pDC     PI16+RC  plasmaCell \n        500         500         500         500         500         326 \n       PRC1     SCScLEC     SCSfLEC         TRC      venBEC        VSMC \n        500         332         129         500         500         500 \n\n## counts\nsc_data <- refSeurat@assays$RNA@counts\nrownames(sc_data) <- substr(rownames(sc_data), start=17,\n                            stop=nchar(rownames(sc_data)))\n\n## celltypes\nsc_celltype <- refSeurat$label\n\n## remove CC marker\nCCmarker <- c(cc.genes.updated.2019$s.genes, cc.genes.updated.2019$g2m.genes)\ndim(sc_data)\n\n[1] 39642 10719\n\nsc_data <- sc_data[-which(rownames(sc_data) %in% CCmarker),]\ndim(sc_data)\n\n[1] 39545 10719\n\n## remove Mito and Ribosomal genes from reference\nmito.genes <- grep(pattern = \"^MT-\", x = rownames(sc_data), value = TRUE)\nRPS.genes <- grep(pattern = \"^RPS\", x = rownames(sc_data), value = TRUE)\nRPL.genes <- grep(pattern = \"^RPL\", x = rownames(sc_data), value = TRUE)\n\ndim(sc_data)\n\n[1] 39545 10719\n\nsc_data <- sc_data[-which(rownames(sc_data) %in% c(mito.genes, RPS.genes,\n                                                   RPL.genes)),]\ndim(sc_data)\n\n[1] 38478 10719\n\n\n\n\nvis input data\n\nref data\n\nIdents(refSeurat) <- refSeurat$label\nDimPlot(refSeurat, reduction = \"umap\", cols = colAll, raster = F, shuffle = T)+\n  theme_bw() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), \n        panel.grid.minor = element_blank()) +\n  xlab(\"UMAP1\") +\n  ylab(\"UMAP2\")\n\n\n\nremove(refSeurat)\n\n\n\nST data\n\ni <- 2\nsid <- names(speAll[i])\nspe <- speAll[[i]]\n\nplotSpots(spe, annotate = \"label\", \n          palette = colPal, size = 0.8) + \n    ggtitle(sid)\n\n\n\nremove(speAll)\n\n\n\n\nformat spatial data\n\n## counts\nst_data <- spe@assays@data$counts\n\n## transform gene names\ngenesST <- data.frame(EnsID=rownames(st_data)) %>%\n  left_join(., genes, by=\"EnsID\") \n\nmart <- useDataset(\"hsapiens_gene_ensembl\", useMart(\"ensembl\"))\ngene_IDs <- getBM(filters= \"ensembl_gene_id\", attributes= c(\"ensembl_gene_id\",\"hgnc_symbol\"),\n              values = genesST$EnsID, mart= mart, useCache = F)\n\ncolnames(gene_IDs) <- c(\"EnsID\", \"symbolMart\")\ngene_IDs <- gene_IDs[-which(duplicated(gene_IDs$EnsID)),]\n\ngenesST <- genesST %>% left_join(., gene_IDs, by=\"EnsID\") %>% \n  mutate(symbolFin=ifelse(is.na(symbol),ifelse(symbolMart ==\"\", EnsID, symbolMart),symbol))\nrownames(st_data) <- genesST$symbolFin\n\nst_data <- rev_gene(data = st_data,\n                         data_type = \"count\",\n                         species = \"Human\",\n                         geneinfo = geneinfo)\n## coords\nst_meta <- data.frame(spot=colnames(spe),\n                      x=spe@int_colData@listData$spatialCoords[,\"pxl_col_in_fullres\"],\n                     y=-1*(spe@int_colData@listData$spatialCoords[,\"pxl_row_in_fullres\"]))\n\nobj <- createSpaTalk(st_data = as.matrix(st_data),\n                     st_meta = st_meta,\n                     species = \"Human\",\n                     if_st_is_sc = F,\n                     spot_max_cell = 30)\n\n\n\nsave object to run CT on server\n\n\ncelltype decomposition\n\nremove(st_data)\nremove(st_meta)\nremove(mart)\n\nobj <- dec_celltype(object = obj,\n                    sc_data = sc_data,\n                    sc_celltype = sc_celltype,\n                    if_use_hvg = T,\n                    use_n_cores = 6,\n                    iter_num = 100,\n                    if_use_normalize_data = F)\n\n\nsaveRDS(obj, file=paste0(basedir, \"/data/ST/spatalk/spatalkDecompB2_s2.rds\"))"
  },
  {
    "objectID": "analysis/runSpaTalkDecompB2_s2.html#session-info",
    "href": "analysis/runSpaTalkDecompB2_s2.html#session-info",
    "title": "Run spatalk decomposition - s2 batch2",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] parallel  stats4    stats     graphics  grDevices utils     datasets \n[8] methods   base     \n\nother attached packages:\n [1] biomaRt_2.56.1              igraph_2.0.2               \n [3] Seurat_5.0.2                SeuratObject_5.0.1         \n [5] sp_2.1-3                    Matrix_1.6-5               \n [7] SpaTalk_1.0                 doParallel_1.0.17          \n [9] iterators_1.0.14            foreach_1.5.2              \n[11] ggalluvial_0.12.5           pheatmap_1.0.12            \n[13] scran_1.28.2                ggsci_3.0.1                \n[15] scater_1.28.0               scuttle_1.10.3             \n[17] ggspavis_1.6.0              here_1.0.1                 \n[19] SpatialExperiment_1.10.0    SingleCellExperiment_1.22.0\n[21] SummarizedExperiment_1.30.2 Biobase_2.60.0             \n[23] GenomicRanges_1.52.1        GenomeInfoDb_1.36.4        \n[25] IRanges_2.36.0              S4Vectors_0.40.1           \n[27] BiocGenerics_0.48.0         MatrixGenerics_1.12.3      \n[29] matrixStats_1.2.0           lubridate_1.9.3            \n[31] forcats_1.0.0               stringr_1.5.1              \n[33] dplyr_1.1.4                 purrr_1.0.2                \n[35] readr_2.1.5                 tidyr_1.3.1                \n[37] tibble_3.2.1                ggplot2_3.5.0              \n[39] tidyverse_2.0.0            \n\nloaded via a namespace (and not attached):\n  [1] spatstat.sparse_3.0-3     bitops_1.0-7             \n  [3] httr_1.4.7                RColorBrewer_1.1-3       \n  [5] backports_1.4.1           tools_4.3.0              \n  [7] sctransform_0.4.1         utf8_1.2.4               \n  [9] R6_2.5.1                  HDF5Array_1.28.1         \n [11] lazyeval_0.2.2            uwot_0.1.16              \n [13] rhdf5filters_1.12.1       withr_3.0.0              \n [15] prettyunits_1.2.0         gridExtra_2.3            \n [17] progressr_0.14.0          cli_3.6.2                \n [19] spatstat.explore_3.2-6    fastDummies_1.7.3        \n [21] scatterpie_0.2.1          labeling_0.4.3           \n [23] spatstat.data_3.0-4       ggridges_0.5.6           \n [25] pbapply_1.7-2             R.utils_2.12.3           \n [27] parallelly_1.37.1         limma_3.56.2             \n [29] RSQLite_2.3.5             rstudioapi_0.15.0        \n [31] generics_0.1.3            ica_1.0-3                \n [33] spatstat.random_3.2-3     car_3.1-2                \n [35] ggbeeswarm_0.7.2          fansi_1.0.6              \n [37] abind_1.4-5               R.methodsS3_1.8.2        \n [39] lifecycle_1.0.4           yaml_2.3.8               \n [41] edgeR_3.42.4              carData_3.0-5            \n [43] BiocFileCache_2.8.0       rhdf5_2.44.0             \n [45] Rtsne_0.17                blob_1.2.4               \n [47] grid_4.3.0                promises_1.2.1           \n [49] dqrng_0.3.2               crayon_1.5.2             \n [51] miniUI_0.1.1.1            lattice_0.22-5           \n [53] beachmat_2.16.0           cowplot_1.1.3            \n [55] KEGGREST_1.40.1           magick_2.8.3             \n [57] pillar_1.9.0              knitr_1.45               \n [59] metapod_1.8.0             rjson_0.2.21             \n [61] future.apply_1.11.1       codetools_0.2-19         \n [63] leiden_0.4.3.1            glue_1.7.0               \n [65] ggfun_0.1.4               data.table_1.15.2        \n [67] vctrs_0.6.5               png_0.1-8                \n [69] spam_2.10-0               gtable_0.3.4             \n [71] cachem_1.0.8              xfun_0.42                \n [73] S4Arrays_1.0.6            mime_0.12                \n [75] DropletUtils_1.20.0       NNLM_0.4.4               \n [77] ggside_0.3.1              survival_3.5-8           \n [79] statmod_1.5.0             bluster_1.10.0           \n [81] ellipsis_0.3.2            fitdistrplus_1.1-11      \n [83] ROCR_1.0-11               nlme_3.1-164             \n [85] bit64_4.0.5               filelock_1.0.3           \n [87] progress_1.2.3            RcppAnnoy_0.0.22         \n [89] rprojroot_2.0.4           irlba_2.3.5.1            \n [91] vipor_0.4.7               KernSmooth_2.23-22       \n [93] DBI_1.2.2                 colorspace_2.1-0         \n [95] tidyselect_1.2.0          curl_5.2.1               \n [97] bit_4.0.5                 compiler_4.3.0           \n [99] BiocNeighbors_1.18.0      xml2_1.3.6               \n[101] DelayedArray_0.26.7       plotly_4.10.4            \n[103] scales_1.3.0              lmtest_0.9-40            \n[105] rappdirs_0.3.3            digest_0.6.34            \n[107] goftest_1.2-3             spatstat.utils_3.0-4     \n[109] rmarkdown_2.26            XVector_0.40.0           \n[111] htmltools_0.5.7           pkgconfig_2.0.3          \n[113] sparseMatrixStats_1.12.2  dbplyr_2.4.0             \n[115] fastmap_1.1.1             rlang_1.1.3              \n[117] htmlwidgets_1.6.4         shiny_1.8.0              \n[119] DelayedMatrixStats_1.22.6 farver_2.1.1             \n[121] zoo_1.8-12                jsonlite_1.8.8           \n[123] BiocParallel_1.34.2       R.oo_1.26.0              \n[125] BiocSingular_1.16.0       RCurl_1.98-1.14          \n[127] magrittr_2.0.3            GenomeInfoDbData_1.2.10  \n[129] dotCall64_1.1-1           patchwork_1.2.0          \n[131] Rhdf5lib_1.22.1           munsell_0.5.0            \n[133] Rcpp_1.0.12               viridis_0.6.5            \n[135] reticulate_1.35.0         stringi_1.8.3            \n[137] zlibbioc_1.46.0           MASS_7.3-60.0.1          \n[139] plyr_1.8.9                listenv_0.9.1            \n[141] ggrepel_0.9.5             deldir_2.0-4             \n[143] Biostrings_2.68.1         splines_4.3.0            \n[145] tensor_1.5                hms_1.1.3                \n[147] locfit_1.5-9.9            ggpubr_0.6.0             \n[149] spatstat.geom_3.2-9       ggsignif_0.6.4           \n[151] RcppHNSW_0.6.0            reshape2_1.4.4           \n[153] ScaledMatrix_1.8.1        XML_3.99-0.16.1          \n[155] evaluate_0.23             tzdb_0.4.0               \n[157] tweenr_2.0.3              httpuv_1.6.14            \n[159] RANN_2.6.1                polyclip_1.10-6          \n[161] future_1.33.1             scattermore_1.2          \n[163] ggforce_0.4.2             ggExtra_0.10.1           \n[165] rsvd_1.0.5                broom_1.0.5              \n[167] xtable_1.8-4              RSpectra_0.16-1          \n[169] rstatix_0.7.2             later_1.3.2              \n[171] viridisLite_0.4.2         memoise_2.0.1            \n[173] AnnotationDbi_1.62.2      beeswarm_0.4.0           \n[175] cluster_2.1.6             timechange_0.3.0         \n[177] globals_0.16.2           \n\ndate()\n\n[1] \"Thu Mar 14 00:23:45 2024\""
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "humanLN24",
    "section": "",
    "text": "Analysis human lymph node FRCs"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Analysis human lymph node FRCs"
  },
  {
    "objectID": "analysis/celltypeEnrichmentGiottoB2_s4.html",
    "href": "analysis/celltypeEnrichmentGiottoB2_s4.html",
    "title": "Visualize celltype decomposition and neighbourhood - s4 batch 2",
    "section": "",
    "text": "library(tidyverse)\nlibrary(SpatialExperiment)\nlibrary(here)\nlibrary(ggspavis)\nlibrary(scater)\nlibrary(ggsci)\nlibrary(scran)\nlibrary(pheatmap)\nlibrary(SpaTalk)\nlibrary(Matrix)\nlibrary(Seurat)\nlibrary(igraph)\nlibrary(biomaRt)\nlibrary(Giotto)"
  },
  {
    "objectID": "analysis/celltypeEnrichmentGiottoB2_s4.html#sample-4",
    "href": "analysis/celltypeEnrichmentGiottoB2_s4.html#sample-4",
    "title": "Visualize celltype decomposition and neighbourhood - s4 batch 2",
    "section": "Sample 4",
    "text": "Sample 4\n\nLoad spatalk object\n\nbasedir &lt;- here()\n\ni &lt;- 4\nobj &lt;- readRDS(file=paste0(basedir, \n                           \"/data/ST/spatalk/spatalkDecompB2_s\", i,\n                           \".rds\"))\n\n\n\nset color palettes\n\ncolLEC &lt;- c(\"#79AF97FF\",\"#B24745FF\",\"#DF8F44FF\")\nnames(colLEC) &lt;- c(\"SCScLEC\", \"SCSfLEC\", \"MedSinusLEC\")\n\ncolBEC &lt;- c(\"#48557e\", \"#e3a616\",\"#9a3038\")\nnames(colBEC) &lt;- c(\"venBEC\", \"capBEC\", \"artBEC\")\n\n\ncolFRC &lt;- c(\"#800000FF\", \"#FFA319FF\",\"#8A9045FF\", \"#155F83FF\",\n            \"#C16622FF\", \"#6692a3\", \"#3b7f60\")\nnames(colFRC) &lt;- c(\"medRCIFRC\", \"TRC\", \"ACTA2+PRC\", \"VSMC\", \"PI16+RC\", \"PRC1\",\n                   \"BRC\")\n\ncolImm &lt;- c(\"#0b6647\", \"#54907e\", \"#94c78a\", \"#6f9568\", \n            \"#8f2810\", \"#d0ac21\",\"#9e9f0b\", \"#486584\",\n            \"#4b5397\", \"#8873d3\", \"#6e3e7a\")\n            \nnames(colImm) &lt;- c(\"naiveB\", \"GCB\", \"MBC\", \"plasmaCell\",\n                   \"CD4T\", \"CD8Tcm\", \"CTL/NKcell\", \"ILC3\", \"pDC\", \"Mph\", \"DC\")\n\ncolAll &lt;- c(colFRC, colBEC, colLEC, colImm) \n\ncolPal &lt;- c(\"#F0027F\", \"#377EB8\", \"#4DAF4A\", \"#984EA3\", \"#FFD700\",\n            \"#FF7F00\", \"#1A1A1A\", \"#666666\", pal_futurama()(10))\n\n\n\nvis sc ST data\n\nplot_st_celltype_all(object = obj, size = 0.5, color = colAll)\n\n\n\n\n\n\ncreate giotto object\n\n## create giotto object from sc spatial data as inferred by SpaTalk\n\ncellLoc &lt;- data.frame(cbind(obj@meta$newmeta$x, obj@meta$newmeta$y))\ncolnames(cellLoc) &lt;- c(\"x\", \"y\")\ngobject = createGiottoObject(raw_exprs=obj@data$newdata, spatial_locs=cellLoc,\n                             cell_metadata = obj@meta$newmeta)\n\nConsider to install these (optional) packages to run all possible Giotto commands for spatial analyses:  MAST smfishHmrf trendsceek SPARK multinet RTriangle FactoMiner\n Giotto does not automatically install all these packages as they are not absolutely required and this reduces the number of dependenciespython:         /Users/mechthildluetge/Library/r-miniconda/envs/giotto_env/bin/pythonw\nlibpython:      /Users/mechthildluetge/Library/r-miniconda/envs/giotto_env/lib/libpython3.6m.dylib\npythonhome:     /Users/mechthildluetge/Library/r-miniconda/envs/giotto_env:/Users/mechthildluetge/Library/r-miniconda/envs/giotto_env\nversion:        3.6.10 |Anaconda, Inc.| (default, Jan  7 2020, 15:01:53)  [GCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final)]\nnumpy:          /Users/mechthildluetge/Library/r-miniconda/envs/giotto_env/lib/python3.6/site-packages/numpy\nnumpy_version:  1.19.5\n\nNOTE: Python version was forced by use_python() function\n\n no external python path was provided, but a giotto python environment was found and will be used \n\nshowGiottoInstructions(gobject)\n\n$python_path\n[1] \"/Users/mechthildluetge/Library/r-miniconda/envs/giotto_env/bin/pythonw\"\n\n$show_plot\n[1] TRUE\n\n$return_plot\n[1] TRUE\n\n$save_plot\n[1] FALSE\n\n$save_dir\n[1] \"/Users/mechthildluetge/Projects/scRNAseq/humanLN24/analysis\"\n\n$plot_format\n[1] \"png\"\n\n$dpi\n[1] 300\n\n$units\n[1] \"in\"\n\n$height\n[1] 9\n\n$width\n[1] 9\n\n$is_docker\n[1] FALSE\n\ngobject &lt;- changeGiottoInstructions(gobject, param = 'save_dir',\n                                    new_value = paste0(basedir, \n                                    \"/data/ST/giottoPlots\"))\n\ngobject &lt;- changeGiottoInstructions(gobject, param = 'plot_format',\n                                    new_value = \"pdf\")\n                               \nshowGiottoInstructions(gobject)\n\n$python_path\n[1] \"/Users/mechthildluetge/Library/r-miniconda/envs/giotto_env/bin/pythonw\"\n\n$show_plot\n[1] TRUE\n\n$return_plot\n[1] TRUE\n\n$save_plot\n[1] FALSE\n\n$save_dir\n[1] \"/Users/mechthildluetge/Projects/scRNAseq/humanLN24/data/ST/giottoPlots\"\n\n$plot_format\n[1] \"pdf\"\n\n$dpi\n[1] 300\n\n$units\n[1] \"in\"\n\n$height\n[1] 9\n\n$width\n[1] 9\n\n$is_docker\n[1] FALSE\n\nmypl &lt;- spatPlot(gobject = gobject, cell_color = 'celltype',\n                cell_color_code = colAll, point_size = 0.7) + \n  theme(panel.background = element_rect(fill ='black'),\n            panel.grid = element_blank()) +\n  guides(fill = guide_legend(override.aes = list(size=5)))\n\n\n\nmypl\n\n\n\n\n\n\nadd image to giotto object\n\n\nspatial network\n\nplotStatDelaunayNetwork(gobject = gobject)\n\n\n\n\n\n\ngobject &lt;- createSpatialNetwork(gobject = gobject, minimum_k = 2)\ngobject &lt;- createSpatialNetwork(gobject = gobject, minimum_k = 2,\n                method = 'kNN', k = 10, verbose=T)\nshowNetworks(gobject)\n\nThe following images are available:  Delaunay_network kNN_network \n\n\n[1] \"Delaunay_network\" \"kNN_network\"     \n\n# visualize the two different spatial networks\nspatPlot(gobject = gobject, show_network = T,\n    network_color = 'blue', spatial_network_name = 'Delaunay_network',\n    point_size = 1, cell_color = 'celltype', point_alpha = 0.5,\n                cell_color_code = colAll)\n\n\n\n\n\n\nspatPlot(gobject = gobject, show_network = T,\n    network_color = 'blue', spatial_network_name = 'kNN_network',\n    point_size = 1, cell_color = 'celltype', point_alpha = 0.5,\n                cell_color_code = colAll)\n\n\n\n\n\n\n\n\n\ncell neighborhoods Delauney\n\nall celltypes barplot\n\n#### ------- all cell types ------------------------ #####\n\ncell_proximities &lt;- cellProximityEnrichment(gobject = gobject,\n                   cluster_column = 'celltype',\n                   spatial_network_name = 'Delaunay_network',\n                   adjust_method = 'fdr',\n                   number_of_simulations = 1000)\n\n# barplot\ng &lt;- cellProximityBarplot(gobject = gobject,\n        CPscore = cell_proximities,\n        min_orig_ints = 5, min_sim_ints = 5)\n\n\n\ng\n\n\n\n# barplot\ng &lt;- cellProximityBarplot_mod(gobject = gobject,\n        CPscore = cell_proximities,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\") +\n  scale_fill_manual(values = colAll)\ng\n\n\n\n\n\n\nsubset celltypes barplot\n\n# barplot\ng &lt;- cellProximityBarplot_mod(gobject = gobject,\n        CPscore = cell_proximities, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T,\n        filter_sender = names(colFRC),\n        filter_receiver = c(names(colBEC), names(colLEC))) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobject,\n        CPscore = cell_proximities, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"receiver\", only_pos = T,\n        filter_sender = c(names(colBEC), names(colLEC)),\n        filter_receiver = names(colFRC)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobject,\n        CPscore = cell_proximities, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T,\n        filter_sender = names(colFRC),\n        filter_receiver = names(colImm)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobject,\n        CPscore = cell_proximities, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"receiver\", only_pos = T,\n        filter_sender = names(colImm),\n        filter_receiver = names(colFRC)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\n\n\n\nall celltypes heatmap\n\n##network\ncellProximityNetwork(gobject = gobject, CPscore = cell_proximities,\n        remove_self_edges = T, only_show_enrichment_edges = T)\n\n\n\n\n\n\n##heatmap\ncellProximityHeatmap(gobject = gobject, CPscore = cell_proximities,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(\"#6876a4\", \"#F7F7F7\", \"#95143a\"))\n\n\n\n\n\n\ncellProximityHeatmap(gobject = gobject, CPscore = cell_proximities,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(\"#00155e\", \"#0000a6\", \"#dca611\"))\n\n\n\n\n\n\n\n\n\nFRC plus immune\n\n##heatmap FRC plus immune\nselCells &lt;- c(names(colImm),names(colFRC))\nselCellIDs &lt;- gobject@cell_ID[which(gobject@cell_metadata$celltype %in% selCells)]\ngobjectSub &lt;- subsetGiotto(gobject, cell_ids = selCellIDs)\n\ngobjectSub@cell_metadata$celltype &lt;- factor(gobjectSub@cell_metadata$celltype,\n                                            levels=selCells)\n\ncell_proximitiesSub &lt;- cellProximityEnrichment(gobject = gobjectSub,\n                   cluster_column = 'celltype',\n                   spatial_network_name = 'Delaunay_network',\n                   adjust_method = 'fdr',\n                   number_of_simulations = 1000)\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = F, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#6876a4\", \"#F7F7F7\", \"#95143a\")))\n\n\n\np          \n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np\n\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#00155e\", \"#0000a6\", \"#dca611\")))\n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\n\np          \n\n\n\n\n\n\nFRC plus sel IMM or EC heatmap\n\n##heatmap FRC plus selected immune\nselImm &lt;- c(\"naiveB\", \"GCB\", \"MBC\", \"plasmaCell\", \"CD4T\", \"DC\", \"Mph\")\nselCells &lt;- c(selImm,names(colFRC))\nselCellIDs &lt;- gobject@cell_ID[which(gobject@cell_metadata$celltype %in% selCells)]\ngobjectSub &lt;- subsetGiotto(gobject, cell_ids = selCellIDs)\n\ngobjectSub@cell_metadata$celltype &lt;- factor(gobjectSub@cell_metadata$celltype,\n                                            levels=selCells)\n\ncell_proximitiesSub &lt;- cellProximityEnrichment(gobject = gobjectSub,\n                   cluster_column = 'celltype',\n                   spatial_network_name = 'Delaunay_network',\n                   adjust_method = 'fdr',\n                   number_of_simulations = 1000)\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#6876a4\", \"#F7F7F7\", \"#95143a\")))\n\n\n\np          \n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np\n\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#00155e\", \"#0000a6\", \"#dca611\")))\n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\n\np          \n\n\n\n### barplot\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T,\n        filter_sender = names(colFRC),\n        filter_receiver = names(colImm)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"receiver\", only_pos = T,\n        filter_sender = names(colImm),\n        filter_receiver = names(colFRC)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\n##heatmap FRC plus endothelial\nselCells &lt;- c(names(colLEC),names(colBEC),names(colFRC))\nselCellIDs &lt;- gobject@cell_ID[which(gobject@cell_metadata$celltype %in% selCells)]\ngobjectSub &lt;- subsetGiotto(gobject, cell_ids = selCellIDs)\n\ngobjectSub@cell_metadata$celltype &lt;- factor(gobjectSub@cell_metadata$celltype,\n                                            levels=selCells)\n\ncell_proximitiesSub &lt;- cellProximityEnrichment(gobject = gobjectSub,\n                   cluster_column = 'celltype',\n                   spatial_network_name = 'Delaunay_network',\n                   adjust_method = 'fdr',\n                   number_of_simulations = 1000)\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#6876a4\", \"#F7F7F7\", \"#95143a\")))\n\n\n\np          \n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np\n\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#00155e\", \"#0000a6\", \"#dca611\")))\n\n\n\np\n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\n\np          \n\n\n\n### barplot\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T,\n        filter_sender = names(colFRC),\n        filter_receiver = c(names(colBEC), names(colLEC))) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"receiver\", only_pos = T,\n        filter_sender = c(names(colBEC), names(colLEC)),\n        filter_receiver = names(colFRC)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\n\n\n\n\ncell neighborhoods kNN\n\nall celltypes barplot\n\n#### ------- all cell types ------------------------ #####\n\ncell_proximities &lt;- cellProximityEnrichment(gobject = gobject,\n                   cluster_column = 'celltype',\n                   spatial_network_name = 'kNN_network',\n                   adjust_method = 'fdr',\n                   number_of_simulations = 1000)\n\n# barplot\ng &lt;- cellProximityBarplot(gobject = gobject,\n        CPscore = cell_proximities,\n        min_orig_ints = 5, min_sim_ints = 5)\n\n\n\ng\n\n\n\n# barplot\ng &lt;- cellProximityBarplot_mod(gobject = gobject,\n        CPscore = cell_proximities,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\") +\n  scale_fill_manual(values = colAll)\ng\n\n\n\n\n\n\nsubset celltypes barplot\n\ng &lt;- cellProximityBarplot_mod(gobject = gobject,\n        CPscore = cell_proximities, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T,\n        filter_sender = names(colFRC),\n        filter_receiver = c(names(colBEC), names(colLEC))) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobject,\n        CPscore = cell_proximities, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"receiver\", only_pos = T,\n        filter_sender = c(names(colBEC), names(colLEC)),\n        filter_receiver = names(colFRC)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobject,\n        CPscore = cell_proximities, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T,\n        filter_sender = names(colFRC),\n        filter_receiver = names(colImm)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobject,\n        CPscore = cell_proximities, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"receiver\", only_pos = T,\n        filter_sender = names(colImm),\n        filter_receiver = names(colFRC)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\n\n\n\nall celltypes heatmap\n\n##network\ncellProximityNetwork(gobject = gobject, CPscore = cell_proximities,\n        remove_self_edges = T, only_show_enrichment_edges = T)\n\n\n\n\n\n\n##heatmap\ncellProximityHeatmap(gobject = gobject, CPscore = cell_proximities,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(\"#6876a4\", \"#F7F7F7\", \"#95143a\"))\n\n\n\n\n\n\ncellProximityHeatmap(gobject = gobject, CPscore = cell_proximities,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(\"#00155e\", \"#0000a6\", \"#dca611\"))\n\n\n\n\n\n\n\n\n\nFRC plus immune\n\n##heatmap FRC plus immune\nselCells &lt;- c(names(colImm),names(colFRC))\nselCellIDs &lt;- gobject@cell_ID[which(gobject@cell_metadata$celltype %in% selCells)]\ngobjectSub &lt;- subsetGiotto(gobject, cell_ids = selCellIDs)\n\ngobjectSub@cell_metadata$celltype &lt;- factor(gobjectSub@cell_metadata$celltype,\n                                            levels=selCells)\n\ncell_proximitiesSub &lt;- cellProximityEnrichment(gobject = gobjectSub,\n                   cluster_column = 'celltype',\n                   spatial_network_name = 'kNN_network',\n                   adjust_method = 'fdr',\n                   number_of_simulations = 1000)\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = F, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#6876a4\", \"#F7F7F7\", \"#95143a\")))\n\n\n\np          \n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np\n\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#00155e\", \"#0000a6\", \"#dca611\")))\n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\n\np          \n\n\n\n\n\n\nFRC plus sel IMM or EC\n\n##heatmap FRC plus selected immune\nselImm &lt;- c(\"naiveB\", \"GCB\", \"MBC\", \"plasmaCell\", \"CD4T\", \"DC\", \"Mph\")\nselCells &lt;- c(selImm,names(colFRC))\nselCellIDs &lt;- gobject@cell_ID[which(gobject@cell_metadata$celltype %in% selCells)]\ngobjectSub &lt;- subsetGiotto(gobject, cell_ids = selCellIDs)\n\ngobjectSub@cell_metadata$celltype &lt;- factor(gobjectSub@cell_metadata$celltype,\n                                            levels=selCells)\n\ncell_proximitiesSub &lt;- cellProximityEnrichment(gobject = gobjectSub,\n                   cluster_column = 'celltype',\n                   spatial_network_name = 'kNN_network',\n                   adjust_method = 'fdr',\n                   number_of_simulations = 1000)\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#6876a4\", \"#F7F7F7\", \"#95143a\")))\n\n\n\np          \n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np\n\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#00155e\", \"#0000a6\", \"#dca611\")))\n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\n\np          \n\n\n\n### barplot\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T,\n        filter_sender = names(colFRC),\n        filter_receiver = names(colImm)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"receiver\", only_pos = T,\n        filter_sender = names(colImm),\n        filter_receiver = names(colFRC)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\n##heatmap FRC plus endothelial\nselCells &lt;- c(names(colLEC),names(colBEC),names(colFRC))\nselCellIDs &lt;- gobject@cell_ID[which(gobject@cell_metadata$celltype %in% selCells)]\ngobjectSub &lt;- subsetGiotto(gobject, cell_ids = selCellIDs)\n\ngobjectSub@cell_metadata$celltype &lt;- factor(gobjectSub@cell_metadata$celltype,\n                                            levels=selCells)\n\ncell_proximitiesSub &lt;- cellProximityEnrichment(gobject = gobjectSub,\n                   cluster_column = 'celltype',\n                   spatial_network_name = 'kNN_network',\n                   adjust_method = 'fdr',\n                   number_of_simulations = 1000)\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#6876a4\", \"#F7F7F7\", \"#95143a\")))\n\n\n\np          \n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np\n\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#00155e\", \"#0000a6\", \"#dca611\")))\n\n\n\np\n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\n\np          \n\n\n\n### barplot\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T,\n        filter_sender = names(colFRC),\n        filter_receiver = c(names(colBEC), names(colLEC))) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"receiver\", only_pos = T,\n        filter_sender = c(names(colBEC), names(colLEC)),\n        filter_receiver = names(colFRC)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\n\n\n\nPRC plus sel EC\n\n##heatmap FRC plus endothelial\nselCells &lt;- c(names(colLEC),names(colBEC),\n              c(\"ACTA2+PRC\", \"PRC1\", \"VSMC\", \"PI16+RC\"))\nselCellIDs &lt;- gobject@cell_ID[which(gobject@cell_metadata$celltype %in% selCells)]\ngobjectSub &lt;- subsetGiotto(gobject, cell_ids = selCellIDs)\n\ngobjectSub@cell_metadata$celltype &lt;- factor(gobjectSub@cell_metadata$celltype,\n                                            levels=selCells)\n\ncell_proximitiesSub &lt;- cellProximityEnrichment(gobject = gobjectSub,\n                   cluster_column = 'celltype',\n                   spatial_network_name = 'kNN_network',\n                   adjust_method = 'fdr',\n                   number_of_simulations = 1000)\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#6876a4\", \"#F7F7F7\", \"#95143a\")))\n\n\n\np          \n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np\n\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#00155e\", \"#0000a6\", \"#dca611\")))\n\n\n\np\n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\n\np          \n\n\n\n### barplot\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T,\n        filter_sender = names(colFRC),\n        filter_receiver = c(names(colBEC), names(colLEC))) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"receiver\", only_pos = T,\n        filter_sender = c(names(colBEC), names(colLEC)),\n        filter_receiver = names(colFRC)) +\n  scale_fill_manual(values = colAll)\ng"
  },
  {
    "objectID": "analysis/celltypeEnrichmentGiottoB2_s4.html#session-info",
    "href": "analysis/celltypeEnrichmentGiottoB2_s4.html#session-info",
    "title": "Visualize celltype decomposition and neighbourhood - s4 batch 2",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] parallel  stats4    stats     graphics  grDevices utils     datasets \n[8] methods   base     \n\nother attached packages:\n [1] Giotto_1.1.2                biomaRt_2.56.1             \n [3] igraph_2.0.2                Seurat_5.0.2               \n [5] SeuratObject_5.0.1          sp_2.1-3                   \n [7] Matrix_1.6-5                SpaTalk_1.0                \n [9] doParallel_1.0.17           iterators_1.0.14           \n[11] foreach_1.5.2               ggalluvial_0.12.5          \n[13] pheatmap_1.0.12             scran_1.28.2               \n[15] ggsci_3.0.1                 scater_1.28.0              \n[17] scuttle_1.10.3              ggspavis_1.6.0             \n[19] here_1.0.1                  SpatialExperiment_1.10.0   \n[21] SingleCellExperiment_1.22.0 SummarizedExperiment_1.30.2\n[23] Biobase_2.60.0              GenomicRanges_1.52.1       \n[25] GenomeInfoDb_1.36.4         IRanges_2.36.0             \n[27] S4Vectors_0.40.1            BiocGenerics_0.48.0        \n[29] MatrixGenerics_1.12.3       matrixStats_1.2.0          \n[31] lubridate_1.9.3             forcats_1.0.0              \n[33] stringr_1.5.1               dplyr_1.1.4                \n[35] purrr_1.0.2                 readr_2.1.5                \n[37] tidyr_1.3.1                 tibble_3.2.1               \n[39] ggplot2_3.5.0               tidyverse_2.0.0            \n\nloaded via a namespace (and not attached):\n  [1] R.methodsS3_1.8.2         progress_1.2.3           \n  [3] goftest_1.2-3             Biostrings_2.68.1        \n  [5] HDF5Array_1.28.1          vctrs_0.6.5              \n  [7] spatstat.random_3.2-3     digest_0.6.34            \n  [9] png_0.1-8                 shape_1.4.6.1            \n [11] ggrepel_0.9.5             deldir_2.0-4             \n [13] parallelly_1.37.1         magick_2.8.3             \n [15] MASS_7.3-60.0.1           reshape2_1.4.4           \n [17] httpuv_1.6.14             withr_3.0.0              \n [19] xfun_0.42                 ggfun_0.1.4              \n [21] ggpubr_0.6.0              ellipsis_0.3.2           \n [23] survival_3.5-8            memoise_2.0.1            \n [25] ggbeeswarm_0.7.2          zoo_1.8-12               \n [27] GlobalOptions_0.1.2       pbapply_1.7-2            \n [29] R.oo_1.26.0               prettyunits_1.2.0        \n [31] KEGGREST_1.40.1           promises_1.2.1           \n [33] httr_1.4.7                rstatix_0.7.2            \n [35] globals_0.16.2            fitdistrplus_1.1-11      \n [37] rhdf5filters_1.12.1       rhdf5_2.44.0             \n [39] rstudioapi_0.15.0         miniUI_0.1.1.1           \n [41] generics_0.1.3            curl_5.2.1               \n [43] zlibbioc_1.46.0           ScaledMatrix_1.8.1       \n [45] ggraph_2.2.0              polyclip_1.10-6          \n [47] GenomeInfoDbData_1.2.10   xtable_1.8-4             \n [49] evaluate_0.23             S4Arrays_1.0.6           \n [51] BiocFileCache_2.8.0       hms_1.1.3                \n [53] irlba_2.3.5.1             colorspace_2.1-0         \n [55] filelock_1.0.3            ROCR_1.0-11              \n [57] reticulate_1.35.0         spatstat.data_3.0-4      \n [59] magrittr_2.0.3            lmtest_0.9-40            \n [61] later_1.3.2               viridis_0.6.5            \n [63] lattice_0.22-5            spatstat.geom_3.2-9      \n [65] future.apply_1.11.1       scattermore_1.2          \n [67] XML_3.99-0.16.1           cowplot_1.1.3            \n [69] RcppAnnoy_0.0.22          pillar_1.9.0             \n [71] nlme_3.1-164              compiler_4.3.0           \n [73] beachmat_2.16.0           RSpectra_0.16-1          \n [75] stringi_1.8.3             tensor_1.5               \n [77] plyr_1.8.9                crayon_1.5.2             \n [79] abind_1.4-5               locfit_1.5-9.9           \n [81] graphlayouts_1.1.0        bit_4.0.5                \n [83] codetools_0.2-19          BiocSingular_1.16.0      \n [85] ggExtra_0.10.1            GetoptLong_1.0.5         \n [87] plotly_4.10.4             mime_0.12                \n [89] NNLM_0.4.4                splines_4.3.0            \n [91] circlize_0.4.16           Rcpp_1.0.12              \n [93] fastDummies_1.7.3         dbplyr_2.4.0             \n [95] sparseMatrixStats_1.12.2  knitr_1.45               \n [97] blob_1.2.4                utf8_1.2.4               \n [99] clue_0.3-65               listenv_0.9.1            \n[101] DelayedMatrixStats_1.22.6 ggsignif_0.6.4           \n[103] statmod_1.5.0             tzdb_0.4.0               \n[105] tweenr_2.0.3              pkgconfig_2.0.3          \n[107] tools_4.3.0               cachem_1.0.8             \n[109] RSQLite_2.3.5             viridisLite_0.4.2        \n[111] DBI_1.2.2                 fastmap_1.1.1            \n[113] rmarkdown_2.26            scales_1.3.0             \n[115] grid_4.3.0                ica_1.0-3                \n[117] broom_1.0.5               patchwork_1.2.0          \n[119] dotCall64_1.1-1           carData_3.0-5            \n[121] RANN_2.6.1                farver_2.1.1             \n[123] tidygraph_1.3.1           scatterpie_0.2.1         \n[125] yaml_2.3.8                cli_3.6.2                \n[127] leiden_0.4.3.1            lifecycle_1.0.4          \n[129] dbscan_1.1-12             uwot_0.1.16              \n[131] bluster_1.10.0            backports_1.4.1          \n[133] DropletUtils_1.20.0       BiocParallel_1.34.2      \n[135] timechange_0.3.0          gtable_0.3.4             \n[137] rjson_0.2.21              ggridges_0.5.6           \n[139] progressr_0.14.0          limma_3.56.2             \n[141] jsonlite_1.8.8            edgeR_3.42.4             \n[143] RcppHNSW_0.6.0            bitops_1.0-7             \n[145] bit64_4.0.5               Rtsne_0.17               \n[147] spatstat.utils_3.0-4      BiocNeighbors_1.18.0     \n[149] ggside_0.3.1              metapod_1.8.0            \n[151] dqrng_0.3.2               R.utils_2.12.3           \n[153] lazyeval_0.2.2            shiny_1.8.0              \n[155] htmltools_0.5.7           sctransform_0.4.1        \n[157] rappdirs_0.3.3            glue_1.7.0               \n[159] spam_2.10-0               XVector_0.40.0           \n[161] RCurl_1.98-1.14           rprojroot_2.0.4          \n[163] gridExtra_2.3             R6_2.5.1                 \n[165] labeling_0.4.3            cluster_2.1.6            \n[167] Rhdf5lib_1.22.1           DelayedArray_0.26.7      \n[169] tidyselect_1.2.0          vipor_0.4.7              \n[171] ggforce_0.4.2             xml2_1.3.6               \n[173] car_3.1-2                 AnnotationDbi_1.62.2     \n[175] future_1.33.1             rsvd_1.0.5               \n[177] munsell_0.5.0             KernSmooth_2.23-22       \n[179] data.table_1.15.2         htmlwidgets_1.6.4        \n[181] ComplexHeatmap_2.16.0     RColorBrewer_1.1-3       \n[183] rlang_1.1.3               spatstat.sparse_3.0-3    \n[185] spatstat.explore_3.2-6    Cairo_1.6-2              \n[187] fansi_1.0.6               beeswarm_0.4.0           \n\ndate()\n\n[1] \"Thu Mar 14 13:39:38 2024\""
  },
  {
    "objectID": "analysis/visColocalSpaTalkB2_s4.html",
    "href": "analysis/visColocalSpaTalkB2_s4.html",
    "title": "visualise spatalk decomposition - s4 batch 2",
    "section": "",
    "text": "library(tidyverse)\nlibrary(SpatialExperiment)\nlibrary(here)\nlibrary(ggspavis)\nlibrary(scater)\nlibrary(ggsci)\nlibrary(scran)\nlibrary(pheatmap)\nlibrary(SpaTalk)\nlibrary(Matrix)\nlibrary(Seurat)\nlibrary(igraph)\nlibrary(biomaRt)"
  },
  {
    "objectID": "analysis/visColocalSpaTalkB2_s4.html#adapted-plotting-functions",
    "href": "analysis/visColocalSpaTalkB2_s4.html#adapted-plotting-functions",
    "title": "visualise spatalk decomposition - s4 batch 2",
    "section": "adapted plotting functions",
    "text": "adapted plotting functions\n\nplot_st_celltype_mod &lt;- function (object, celltype1, celltype2,\n                                  size = 1, color_celltype1 = \"blue\",\n                                  color_celltype2 = \"red\",\n                                  color_others = \"grey\", alphaOthers = 1) \n{\n    if (!is(object, \"SpaTalk\")) {\n        stop(\"Invalid class for object: must be 'SpaTalk'!\")\n    }\n    st_type &lt;- object@para$st_type\n    if_skip_dec_celltype &lt;- object@para$if_skip_dec_celltype\n    if (st_type == \"single-cell\") {\n        st_meta &lt;- object@meta$rawmeta\n    }\n    if (st_type == \"spot\") {\n        if (if_skip_dec_celltype) {\n            st_meta &lt;- object@meta$rawmeta\n        }\n        else {\n            st_meta &lt;- object@meta$newmeta\n        }\n    }\n    if (length(celltype1) &gt; 1) {\n        stop(\"Please provide a single cell type name each time!\")\n    }\n    if (length(celltype2) &gt; 1) {\n        stop(\"Please provide a single cell type name each time!\")\n    }\n    if (!celltype1 %in% st_meta$celltype) {\n        stop(paste0(celltype1, \" is not in the st_meta!\"))\n    }\n    if (is.null(celltype2)) {\n      st_meta[!st_meta$celltype %in% c(celltype1), ]$celltype &lt;- \"others\"\n      st_meta$celltype &lt;- factor(st_meta$celltype,\n                               levels = c(celltype1, \"others\"))\n      ggplot2::ggplot() + ggplot2::geom_point(ggplot2::aes(st_meta$x, \n        st_meta$y, color = st_meta$celltype), size = size) + \n        ggplot2::scale_color_manual(values = c(color_celltype1, \n            alpha(color_others, alphaOthers))) + ggplot2::theme_bw() +\n        ggplot2::theme(panel.grid = ggplot2::element_blank()) + \n        ggplot2::labs(x = \"x\", y = \"y\", color = \"celltype\")\n\n    }else{\n          st_meta[!st_meta$celltype %in% c(celltype1, celltype2), ]$celltype &lt;- \"others\"\n          st_meta$celltype &lt;- factor(st_meta$celltype,\n                               levels = c(celltype1, celltype2, \"others\"))\n          ggplot2::ggplot() + ggplot2::geom_point(ggplot2::aes(st_meta$x, \n          st_meta$y, color = st_meta$celltype), size = size) + \n          ggplot2::scale_color_manual(values = c(color_celltype1, color_celltype2, \n            alpha(color_others, alphaOthers))) + ggplot2::theme_bw() +\n          ggplot2::theme(panel.grid = ggplot2::element_blank()) + \n          ggplot2::labs(x = \"x\", y = \"y\", color = \"celltype\")\n    }\n}\n\n\nplot_st_celltype_percent_mod &lt;- function (object, celltype, size = 1,\n                                          color_low = NULL, color_mid = NULL, \n                                          color_high = NULL, color_midpoint = NULL,\n                                          upper_lim = NULL) \n{\n    if (!is(object, \"SpaTalk\")) {\n        stop(\"Invalid class for object: must be 'SpaTalk'!\")\n    }\n    if_skip_dec_celltype &lt;- object@para$if_skip_dec_celltype\n    if (if_skip_dec_celltype) {\n        stop(\"Not availible when skiping dec_celltype()!\")\n    }\n    st_meta &lt;- object@meta$rawmeta\n    if (length(celltype) &gt; 1) {\n        stop(\"Please provide a single cell type name each time!\")\n    }\n    if (!celltype %in% colnames(st_meta)) {\n        stop(paste0(celltype, \" is not in the st_meta!\"))\n    }\n    st_meta$celltype_percent &lt;- as.numeric(st_meta[, celltype])\n    if (!is.null(upper_lim)) {\n        st_meta$celltype_percent[which(st_meta$celltype_percent &gt; upper_lim)] &lt;- upper_lim\n    }\n    if (is.null(color_low)) {\n        color_low &lt;- \"grey\"\n    }\n    if (is.null(color_high)) {\n        color_high &lt;- \"blue\"\n    }\n    if (is.null(color_mid)) {\n        ggplot2::ggplot() + ggplot2::geom_point(ggplot2::aes(st_meta$x, \n            st_meta$y, color = st_meta$celltype_percent), size = size) + \n            ggplot2::scale_color_gradient(low = color_low, high = color_high) + \n            ggplot2::theme_bw() + ggplot2::theme(panel.grid = ggplot2::element_blank()) + \n            ggplot2::labs(x = \"x\", y = \"y\", color = substr(celltype, 1, 6) )\n    }\n    else {\n        if (is.null(color_midpoint)) {\n            color_midpoint &lt;- stats::median(st_meta$celltype_percent)\n        }\n        ggplot2::ggplot() + ggplot2::geom_point(ggplot2::aes(st_meta$x, \n            st_meta$y, color = st_meta$celltype_percent), size = size) + \n            ggplot2::scale_color_gradient2(low = color_low, mid = color_mid, \n                high = color_high, midpoint = color_midpoint) + \n            ggplot2::theme_bw() + ggplot2::theme(panel.grid = ggplot2::element_blank()) + \n            ggplot2::labs(x = \"x\", y = \"y\", color = substr(celltype, 1, 6) )\n    }\n}"
  },
  {
    "objectID": "analysis/visColocalSpaTalkB2_s4.html#sample-1",
    "href": "analysis/visColocalSpaTalkB2_s4.html#sample-1",
    "title": "visualise spatalk decomposition - s4 batch 2",
    "section": "Sample 1",
    "text": "Sample 1\n\nLoad spatalk object\n\nbasedir &lt;- here()\n\nspeAll &lt;- readRDS(paste0(basedir, \"/data/speAllLNB2.rds\"))\n\ni &lt;- 2\nsid &lt;- names(speAll[i])\nspe &lt;- speAll[[i]]\n\nobj &lt;- readRDS(file=paste0(basedir, \n                           \"/data/ST/spatalk/spatalkDecompB2_s\", i,\n                           \".rds\"))\n\n\n\nset color palettes\n\ncolLEC &lt;- c(\"#79AF97FF\",\"#B24745FF\",\"#DF8F44FF\")\nnames(colLEC) &lt;- c(\"SCScLEC\", \"SCSfLEC\", \"MedSinusLEC\")\n\ncolBEC &lt;- c(\"#48557e\", \"#e3a616\",\"#9a3038\")\nnames(colBEC) &lt;- c(\"venBEC\", \"capBEC\", \"artBEC\")\n\n\ncolFRC &lt;- c(\"#800000FF\", \"#FFA319FF\",\"#8A9045FF\", \"#155F83FF\",\n            \"#C16622FF\", \"#6692a3\", \"#3b7f60\")\nnames(colFRC) &lt;- c(\"medRCIFRC\", \"TRC\", \"ACTA2+PRC\", \"VSMC\", \"PI16+RC\", \"PRC1\",\n                   \"BRC\")\n\n\ncolImm &lt;- c(\"#0b6647\", \"#54907e\", \"#94c78a\", \"#6f9568\", \n            \"#8f2810\", \"#d0ac21\",\"#9e9f0b\", \"#486584\",\n            \"#4b5397\", \"#8873d3\", \"#6e3e7a\")\n            \nnames(colImm) &lt;- c(\"naiveB\", \"GCB\", \"MBC\", \"plasmaCell\",\n                   \"CD4T\", \"CD8Tcm\", \"CTL/NKcell\", \"ILC3\", \"pDC\", \"Mph\", \"DC\")\n\ncolAll &lt;- c(colFRC, colBEC, colLEC, colImm) \n\ncolPal &lt;- c(\"#F0027F\", \"#377EB8\", \"#4DAF4A\", \"#984EA3\", \"#FFD700\",\n            \"#FF7F00\", \"#1A1A1A\", \"#666666\", pal_futurama()(10))\n\n\nvis ST data\n\nplotSpots(spe, annotate = \"label\", \n          palette = colPal, size = 1.5) + \n    ggtitle(sid)\n\n\n\n\n\n\n\nvis predicted celltypes\n\nplot_st_pie(object = obj, pie_scale = 1.3, xy_ratio = 1.8, color = colAll)\n\n\n\nlapply(names(colAll), function(ct){\n  plot_st_celltype_percent(object = obj, celltype = ct,size = 2,\n                           color_low =\"#00155e\", color_mid= \"#0000a6\",\n                         color_high = \"#dca611\")\n})\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n[[5]]\n\n\n\n\n\n\n[[6]]\n\n\n\n\n\n\n[[7]]\n\n\n\n\n\n\n[[8]]\n\n\n\n\n\n\n[[9]]\n\n\n\n\n\n\n[[10]]\n\n\n\n\n\n\n[[11]]\n\n\n\n\n\n\n[[12]]\n\n\n\n\n\n\n[[13]]\n\n\n\n\n\n\n[[14]]\n\n\n\n\n\n\n[[15]]\n\n\n\n\n\n\n[[16]]\n\n\n\n\n\n\n[[17]]\n\n\n\n\n\n\n[[18]]\n\n\n\n\n\n\n[[19]]\n\n\n\n\n\n\n[[20]]\n\n\n\n\n\n\n[[21]]\n\n\n\n\n\n\n[[22]]\n\n\n\n\n\n\n[[23]]\n\n\n\n\n\n\n[[24]]\n\n\n\n\n## set 95% quantile as upper limit for color scale (less effected by outlier)\nlapply(names(colAll), function(ct){\n  lim &lt;- quantile(as.numeric(obj@meta$rawmeta[, ct]),probs=c(.95))\n  plot_st_celltype_percent_mod(object = obj, celltype = ct,size = 2,\n                           color_low =\"#00155e\", color_mid= \"#0000a6\",\n                         color_high = \"#dca611\", upper_lim = lim)\n})\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n[[5]]\n\n\n\n\n\n\n[[6]]\n\n\n\n\n\n\n[[7]]\n\n\n\n\n\n\n[[8]]\n\n\n\n\n\n\n[[9]]\n\n\n\n\n\n\n[[10]]\n\n\n\n\n\n\n[[11]]\n\n\n\n\n\n\n[[12]]\n\n\n\n\n\n\n[[13]]\n\n\n\n\n\n\n[[14]]\n\n\n\n\n\n\n[[15]]\n\n\n\n\n\n\n[[16]]\n\n\n\n\n\n\n[[17]]\n\n\n\n\n\n\n[[18]]\n\n\n\n\n\n\n[[19]]\n\n\n\n\n\n\n[[20]]\n\n\n\n\n\n\n[[21]]\n\n\n\n\n\n\n[[22]]\n\n\n\n\n\n\n[[23]]\n\n\n\n\n\n\n[[24]]\n\n\n\n\nlapply(names(colAll), function(ct){\n  lim &lt;- quantile(as.numeric(obj@meta$rawmeta[, ct]),probs=c(.95))\n  plot_st_celltype_percent_mod(object = obj, celltype = ct,size = 2,\n                           color_low =\"#0000a6\", \n                         color_high = \"#dca611\", upper_lim = lim)\n})\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n[[5]]\n\n\n\n\n\n\n[[6]]\n\n\n\n\n\n\n[[7]]\n\n\n\n\n\n\n[[8]]\n\n\n\n\n\n\n[[9]]\n\n\n\n\n\n\n[[10]]\n\n\n\n\n\n\n[[11]]\n\n\n\n\n\n\n[[12]]\n\n\n\n\n\n\n[[13]]\n\n\n\n\n\n\n[[14]]\n\n\n\n\n\n\n[[15]]\n\n\n\n\n\n\n[[16]]\n\n\n\n\n\n\n[[17]]\n\n\n\n\n\n\n[[18]]\n\n\n\n\n\n\n[[19]]\n\n\n\n\n\n\n[[20]]\n\n\n\n\n\n\n[[21]]\n\n\n\n\n\n\n[[22]]\n\n\n\n\n\n\n[[23]]\n\n\n\n\n\n\n[[24]]\n\n\n\n\nlapply(names(colAll), function(ct){\n  lim &lt;- quantile(as.numeric(obj@meta$rawmeta[, ct]),probs=c(.98))\n  plot_st_celltype_percent_mod(object = obj, celltype = ct,size = 2,\n                           color_low =\"#ffffff\", \n                         color_high = colAll[ct], upper_lim = lim)\n})\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n[[5]]\n\n\n\n\n\n\n[[6]]\n\n\n\n\n\n\n[[7]]\n\n\n\n\n\n\n[[8]]\n\n\n\n\n\n\n[[9]]\n\n\n\n\n\n\n[[10]]\n\n\n\n\n\n\n[[11]]\n\n\n\n\n\n\n[[12]]\n\n\n\n\n\n\n[[13]]\n\n\n\n\n\n\n[[14]]\n\n\n\n\n\n\n[[15]]\n\n\n\n\n\n\n[[16]]\n\n\n\n\n\n\n[[17]]\n\n\n\n\n\n\n[[18]]\n\n\n\n\n\n\n[[19]]\n\n\n\n\n\n\n[[20]]\n\n\n\n\n\n\n[[21]]\n\n\n\n\n\n\n[[22]]\n\n\n\n\n\n\n[[23]]\n\n\n\n\n\n\n[[24]]\n\n\n\n\nlapply(names(colAll), function(ct){\n  plot_st_celltype(object = obj, celltype = ct,size = 1,\n                         color_celltype = \"#a6062c\") \n})\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n[[5]]\n\n\n\n\n\n\n[[6]]\n\n\n\n\n\n\n[[7]]\n\n\n\n\n\n\n[[8]]\n\n\n\n\n\n\n[[9]]\n\n\n\n\n\n\n[[10]]\n\n\n\n\n\n\n[[11]]\n\n\n\n\n\n\n[[12]]\n\n\n\n\n\n\n[[13]]\n\n\n\n\n\n\n[[14]]\n\n\n\n\n\n\n[[15]]\n\n\n\n\n\n\n[[16]]\n\n\n\n\n\n\n[[17]]\n\n\n\n\n\n\n[[18]]\n\n\n\n\n\n\n[[19]]\n\n\n\n\n\n\n[[20]]\n\n\n\n\n\n\n[[21]]\n\n\n\n\n\n\n[[22]]\n\n\n\n\n\n\n[[23]]\n\n\n\n\n\n\n[[24]]\n\n\n\n\nlapply(names(colAll), function(ct){\n  plot_st_celltype_mod(object = obj, celltype1 = ct,size = 1,\n                       celltype2 = NULL,\n                       color_celltype1 = as.character(colAll[ct]),\n                       color_others = \"white\", alphaOthers=0) \n})\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n[[5]]\n\n\n\n\n\n\n[[6]]\n\n\n\n\n\n\n[[7]]\n\n\n\n\n\n\n[[8]]\n\n\n\n\n\n\n[[9]]\n\n\n\n\n\n\n[[10]]\n\n\n\n\n\n\n[[11]]\n\n\n\n\n\n\n[[12]]\n\n\n\n\n\n\n[[13]]\n\n\n\n\n\n\n[[14]]\n\n\n\n\n\n\n[[15]]\n\n\n\n\n\n\n[[16]]\n\n\n\n\n\n\n[[17]]\n\n\n\n\n\n\n[[18]]\n\n\n\n\n\n\n[[19]]\n\n\n\n\n\n\n[[20]]\n\n\n\n\n\n\n[[21]]\n\n\n\n\n\n\n[[22]]\n\n\n\n\n\n\n[[23]]\n\n\n\n\n\n\n[[24]]\n\n\n\n\nfrc &lt;- names(colFRC)\nother &lt;- c(names(colLEC), names(colBEC), names(colImm))\nallComb &lt;- tidyr::crossing(frc, other) \n\nlapply(seq(1:nrow(allComb)), function(i){\n  ct1 &lt;- as.character(allComb[i,1])\n  ct2 &lt;- as.character(allComb[i,2])\n  plot_st_celltype_mod(object = obj, celltype1 = ct1, celltype2 = ct2,\n                       size = 1, color_celltype1 = as.character(colAll[ct1]),\n                       color_celltype2 = as.character(colAll[ct2]),\n                       color_others = \"white\",\n                       alphaOthers=0\n                       ) \n})\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n[[5]]\n\n\n\n\n\n\n[[6]]\n\n\n\n\n\n\n[[7]]\n\n\n\n\n\n\n[[8]]\n\n\n\n\n\n\n[[9]]\n\n\n\n\n\n\n[[10]]\n\n\n\n\n\n\n[[11]]\n\n\n\n\n\n\n[[12]]\n\n\n\n\n\n\n[[13]]\n\n\n\n\n\n\n[[14]]\n\n\n\n\n\n\n[[15]]\n\n\n\n\n\n\n[[16]]\n\n\n\n\n\n\n[[17]]\n\n\n\n\n\n\n[[18]]\n\n\n\n\n\n\n[[19]]\n\n\n\n\n\n\n[[20]]\n\n\n\n\n\n\n[[21]]\n\n\n\n\n\n\n[[22]]\n\n\n\n\n\n\n[[23]]\n\n\n\n\n\n\n[[24]]\n\n\n\n\n\n\n[[25]]\n\n\n\n\n\n\n[[26]]\n\n\n\n\n\n\n[[27]]\n\n\n\n\n\n\n[[28]]\n\n\n\n\n\n\n[[29]]\n\n\n\n\n\n\n[[30]]\n\n\n\n\n\n\n[[31]]\n\n\n\n\n\n\n[[32]]\n\n\n\n\n\n\n[[33]]\n\n\n\n\n\n\n[[34]]\n\n\n\n\n\n\n[[35]]\n\n\n\n\n\n\n[[36]]\n\n\n\n\n\n\n[[37]]\n\n\n\n\n\n\n[[38]]\n\n\n\n\n\n\n[[39]]\n\n\n\n\n\n\n[[40]]\n\n\n\n\n\n\n[[41]]\n\n\n\n\n\n\n[[42]]\n\n\n\n\n\n\n[[43]]\n\n\n\n\n\n\n[[44]]\n\n\n\n\n\n\n[[45]]\n\n\n\n\n\n\n[[46]]\n\n\n\n\n\n\n[[47]]\n\n\n\n\n\n\n[[48]]\n\n\n\n\n\n\n[[49]]\n\n\n\n\n\n\n[[50]]\n\n\n\n\n\n\n[[51]]\n\n\n\n\n\n\n[[52]]\n\n\n\n\n\n\n[[53]]\n\n\n\n\n\n\n[[54]]\n\n\n\n\n\n\n[[55]]\n\n\n\n\n\n\n[[56]]\n\n\n\n\n\n\n[[57]]\n\n\n\n\n\n\n[[58]]\n\n\n\n\n\n\n[[59]]\n\n\n\n\n\n\n[[60]]\n\n\n\n\n\n\n[[61]]\n\n\n\n\n\n\n[[62]]\n\n\n\n\n\n\n[[63]]\n\n\n\n\n\n\n[[64]]\n\n\n\n\n\n\n[[65]]\n\n\n\n\n\n\n[[66]]\n\n\n\n\n\n\n[[67]]\n\n\n\n\n\n\n[[68]]\n\n\n\n\n\n\n[[69]]\n\n\n\n\n\n\n[[70]]\n\n\n\n\n\n\n[[71]]\n\n\n\n\n\n\n[[72]]\n\n\n\n\n\n\n[[73]]\n\n\n\n\n\n\n[[74]]\n\n\n\n\n\n\n[[75]]\n\n\n\n\n\n\n[[76]]\n\n\n\n\n\n\n[[77]]\n\n\n\n\n\n\n[[78]]\n\n\n\n\n\n\n[[79]]\n\n\n\n\n\n\n[[80]]\n\n\n\n\n\n\n[[81]]\n\n\n\n\n\n\n[[82]]\n\n\n\n\n\n\n[[83]]\n\n\n\n\n\n\n[[84]]\n\n\n\n\n\n\n[[85]]\n\n\n\n\n\n\n[[86]]\n\n\n\n\n\n\n[[87]]\n\n\n\n\n\n\n[[88]]\n\n\n\n\n\n\n[[89]]\n\n\n\n\n\n\n[[90]]\n\n\n\n\n\n\n[[91]]\n\n\n\n\n\n\n[[92]]\n\n\n\n\n\n\n[[93]]\n\n\n\n\n\n\n[[94]]\n\n\n\n\n\n\n[[95]]\n\n\n\n\n\n\n[[96]]\n\n\n\n\n\n\n[[97]]\n\n\n\n\n\n\n[[98]]\n\n\n\n\n\n\n[[99]]\n\n\n\n\n\n\n[[100]]\n\n\n\n\n\n\n[[101]]\n\n\n\n\n\n\n[[102]]\n\n\n\n\n\n\n[[103]]\n\n\n\n\n\n\n[[104]]\n\n\n\n\n\n\n[[105]]\n\n\n\n\n\n\n[[106]]\n\n\n\n\n\n\n[[107]]\n\n\n\n\n\n\n[[108]]\n\n\n\n\n\n\n[[109]]\n\n\n\n\n\n\n[[110]]\n\n\n\n\n\n\n[[111]]\n\n\n\n\n\n\n[[112]]\n\n\n\n\n\n\n[[113]]\n\n\n\n\n\n\n[[114]]\n\n\n\n\n\n\n[[115]]\n\n\n\n\n\n\n[[116]]\n\n\n\n\n\n\n[[117]]\n\n\n\n\n\n\n[[118]]\n\n\n\n\n\n\n[[119]]"
  },
  {
    "objectID": "analysis/visColocalSpaTalkB2_s4.html#session-info",
    "href": "analysis/visColocalSpaTalkB2_s4.html#session-info",
    "title": "visualise spatalk decomposition - s4 batch 2",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] parallel  stats4    stats     graphics  grDevices utils     datasets \n[8] methods   base     \n\nother attached packages:\n [1] biomaRt_2.56.1              igraph_2.0.2               \n [3] Seurat_5.0.2                SeuratObject_5.0.1         \n [5] sp_2.1-3                    Matrix_1.6-5               \n [7] SpaTalk_1.0                 doParallel_1.0.17          \n [9] iterators_1.0.14            foreach_1.5.2              \n[11] ggalluvial_0.12.5           pheatmap_1.0.12            \n[13] scran_1.28.2                ggsci_3.0.1                \n[15] scater_1.28.0               scuttle_1.10.3             \n[17] ggspavis_1.6.0              here_1.0.1                 \n[19] SpatialExperiment_1.10.0    SingleCellExperiment_1.22.0\n[21] SummarizedExperiment_1.30.2 Biobase_2.60.0             \n[23] GenomicRanges_1.52.1        GenomeInfoDb_1.36.4        \n[25] IRanges_2.36.0              S4Vectors_0.40.1           \n[27] BiocGenerics_0.48.0         MatrixGenerics_1.12.3      \n[29] matrixStats_1.2.0           lubridate_1.9.3            \n[31] forcats_1.0.0               stringr_1.5.1              \n[33] dplyr_1.1.4                 purrr_1.0.2                \n[35] readr_2.1.5                 tidyr_1.3.1                \n[37] tibble_3.2.1                ggplot2_3.5.0              \n[39] tidyverse_2.0.0            \n\nloaded via a namespace (and not attached):\n  [1] spatstat.sparse_3.0-3     bitops_1.0-7             \n  [3] httr_1.4.7                RColorBrewer_1.1-3       \n  [5] backports_1.4.1           tools_4.3.0              \n  [7] sctransform_0.4.1         utf8_1.2.4               \n  [9] R6_2.5.1                  HDF5Array_1.28.1         \n [11] lazyeval_0.2.2            uwot_0.1.16              \n [13] rhdf5filters_1.12.1       withr_3.0.0              \n [15] prettyunits_1.2.0         gridExtra_2.3            \n [17] progressr_0.14.0          cli_3.6.2                \n [19] spatstat.explore_3.2-6    fastDummies_1.7.3        \n [21] scatterpie_0.2.1          labeling_0.4.3           \n [23] spatstat.data_3.0-4       ggridges_0.5.6           \n [25] pbapply_1.7-2             R.utils_2.12.3           \n [27] parallelly_1.37.1         limma_3.56.2             \n [29] RSQLite_2.3.5             rstudioapi_0.15.0        \n [31] generics_0.1.3            ica_1.0-3                \n [33] spatstat.random_3.2-3     car_3.1-2                \n [35] ggbeeswarm_0.7.2          fansi_1.0.6              \n [37] abind_1.4-5               R.methodsS3_1.8.2        \n [39] lifecycle_1.0.4           yaml_2.3.8               \n [41] edgeR_3.42.4              carData_3.0-5            \n [43] BiocFileCache_2.8.0       rhdf5_2.44.0             \n [45] Rtsne_0.17                blob_1.2.4               \n [47] grid_4.3.0                promises_1.2.1           \n [49] dqrng_0.3.2               crayon_1.5.2             \n [51] miniUI_0.1.1.1            lattice_0.22-5           \n [53] beachmat_2.16.0           cowplot_1.1.3            \n [55] KEGGREST_1.40.1           magick_2.8.3             \n [57] pillar_1.9.0              knitr_1.45               \n [59] metapod_1.8.0             rjson_0.2.21             \n [61] future.apply_1.11.1       codetools_0.2-19         \n [63] leiden_0.4.3.1            glue_1.7.0               \n [65] ggfun_0.1.4               data.table_1.15.2        \n [67] vctrs_0.6.5               png_0.1-8                \n [69] spam_2.10-0               gtable_0.3.4             \n [71] cachem_1.0.8              xfun_0.42                \n [73] S4Arrays_1.0.6            mime_0.12                \n [75] DropletUtils_1.20.0       NNLM_0.4.4               \n [77] ggside_0.3.1              survival_3.5-8           \n [79] statmod_1.5.0             bluster_1.10.0           \n [81] ellipsis_0.3.2            fitdistrplus_1.1-11      \n [83] ROCR_1.0-11               nlme_3.1-164             \n [85] bit64_4.0.5               filelock_1.0.3           \n [87] progress_1.2.3            RcppAnnoy_0.0.22         \n [89] rprojroot_2.0.4           irlba_2.3.5.1            \n [91] vipor_0.4.7               KernSmooth_2.23-22       \n [93] DBI_1.2.2                 colorspace_2.1-0         \n [95] tidyselect_1.2.0          curl_5.2.1               \n [97] bit_4.0.5                 compiler_4.3.0           \n [99] BiocNeighbors_1.18.0      xml2_1.3.6               \n[101] DelayedArray_0.26.7       plotly_4.10.4            \n[103] scales_1.3.0              lmtest_0.9-40            \n[105] rappdirs_0.3.3            digest_0.6.34            \n[107] goftest_1.2-3             spatstat.utils_3.0-4     \n[109] rmarkdown_2.26            XVector_0.40.0           \n[111] htmltools_0.5.7           pkgconfig_2.0.3          \n[113] sparseMatrixStats_1.12.2  dbplyr_2.4.0             \n[115] fastmap_1.1.1             rlang_1.1.3              \n[117] htmlwidgets_1.6.4         shiny_1.8.0              \n[119] DelayedMatrixStats_1.22.6 farver_2.1.1             \n[121] zoo_1.8-12                jsonlite_1.8.8           \n[123] BiocParallel_1.34.2       R.oo_1.26.0              \n[125] BiocSingular_1.16.0       RCurl_1.98-1.14          \n[127] magrittr_2.0.3            GenomeInfoDbData_1.2.10  \n[129] dotCall64_1.1-1           patchwork_1.2.0          \n[131] Rhdf5lib_1.22.1           munsell_0.5.0            \n[133] Rcpp_1.0.12               viridis_0.6.5            \n[135] reticulate_1.35.0         stringi_1.8.3            \n[137] zlibbioc_1.46.0           MASS_7.3-60.0.1          \n[139] plyr_1.8.9                listenv_0.9.1            \n[141] ggrepel_0.9.5             deldir_2.0-4             \n[143] Biostrings_2.68.1         splines_4.3.0            \n[145] tensor_1.5                hms_1.1.3                \n[147] locfit_1.5-9.9            ggpubr_0.6.0             \n[149] spatstat.geom_3.2-9       ggsignif_0.6.4           \n[151] RcppHNSW_0.6.0            reshape2_1.4.4           \n[153] ScaledMatrix_1.8.1        XML_3.99-0.16.1          \n[155] evaluate_0.23             tzdb_0.4.0               \n[157] tweenr_2.0.3              httpuv_1.6.14            \n[159] RANN_2.6.1                polyclip_1.10-6          \n[161] future_1.33.1             scattermore_1.2          \n[163] ggforce_0.4.2             ggExtra_0.10.1           \n[165] rsvd_1.0.5                broom_1.0.5              \n[167] xtable_1.8-4              RSpectra_0.16-1          \n[169] rstatix_0.7.2             later_1.3.2              \n[171] viridisLite_0.4.2         memoise_2.0.1            \n[173] AnnotationDbi_1.62.2      beeswarm_0.4.0           \n[175] cluster_2.1.6             timechange_0.3.0         \n[177] globals_0.16.2           \n\ndate()\n\n[1] \"Thu Mar 14 14:26:04 2024\""
  },
  {
    "objectID": "analysis/celltypeEnrichmentGiottoB2_s2.html",
    "href": "analysis/celltypeEnrichmentGiottoB2_s2.html",
    "title": "Visualize celltype decomposition and neighbourhood - s2 batch 2",
    "section": "",
    "text": "library(tidyverse)\nlibrary(SpatialExperiment)\nlibrary(here)\nlibrary(ggspavis)\nlibrary(scater)\nlibrary(ggsci)\nlibrary(scran)\nlibrary(pheatmap)\nlibrary(SpaTalk)\nlibrary(Matrix)\nlibrary(Seurat)\nlibrary(igraph)\nlibrary(biomaRt)\nlibrary(Giotto)"
  },
  {
    "objectID": "analysis/celltypeEnrichmentGiottoB2_s2.html#sample-4",
    "href": "analysis/celltypeEnrichmentGiottoB2_s2.html#sample-4",
    "title": "Visualize celltype decomposition and neighbourhood - s2 batch 2",
    "section": "Sample 4",
    "text": "Sample 4\n\nLoad spatalk object\n\nbasedir &lt;- here()\n\ni &lt;- 2\nobj &lt;- readRDS(file=paste0(basedir, \n                           \"/data/ST/spatalk/spatalkDecompB2_s\", i,\n                           \".rds\"))\n\n\n\nset color palettes\n\ncolLEC &lt;- c(\"#79AF97FF\",\"#B24745FF\",\"#DF8F44FF\")\nnames(colLEC) &lt;- c(\"SCScLEC\", \"SCSfLEC\", \"MedSinusLEC\")\n\ncolBEC &lt;- c(\"#48557e\", \"#e3a616\",\"#9a3038\")\nnames(colBEC) &lt;- c(\"venBEC\", \"capBEC\", \"artBEC\")\n\n\ncolFRC &lt;- c(\"#800000FF\", \"#FFA319FF\",\"#8A9045FF\", \"#155F83FF\",\n            \"#C16622FF\", \"#6692a3\", \"#3b7f60\")\nnames(colFRC) &lt;- c(\"medRCIFRC\", \"TRC\", \"ACTA2+PRC\", \"VSMC\", \"PI16+RC\", \"PRC1\",\n                   \"BRC\")\n\ncolImm &lt;- c(\"#0b6647\", \"#54907e\", \"#94c78a\", \"#6f9568\", \n            \"#8f2810\", \"#d0ac21\",\"#9e9f0b\", \"#486584\",\n            \"#4b5397\", \"#8873d3\", \"#6e3e7a\")\n            \nnames(colImm) &lt;- c(\"naiveB\", \"GCB\", \"MBC\", \"plasmaCell\",\n                   \"CD4T\", \"CD8Tcm\", \"CTL/NKcell\", \"ILC3\", \"pDC\", \"Mph\", \"DC\")\n\ncolAll &lt;- c(colFRC, colBEC, colLEC, colImm) \n\ncolPal &lt;- c(\"#F0027F\", \"#377EB8\", \"#4DAF4A\", \"#984EA3\", \"#FFD700\",\n            \"#FF7F00\", \"#1A1A1A\", \"#666666\", pal_futurama()(10))\n\n\n\nvis sc ST data\n\nplot_st_celltype_all(object = obj, size = 0.5, color = colAll)\n\n\n\n\n\n\ncreate giotto object\n\n## create giotto object from sc spatial data as inferred by SpaTalk\n\ncellLoc &lt;- data.frame(cbind(obj@meta$newmeta$x, obj@meta$newmeta$y))\ncolnames(cellLoc) &lt;- c(\"x\", \"y\")\ngobject = createGiottoObject(raw_exprs=obj@data$newdata, spatial_locs=cellLoc,\n                             cell_metadata = obj@meta$newmeta)\n\nConsider to install these (optional) packages to run all possible Giotto commands for spatial analyses:  MAST smfishHmrf trendsceek SPARK multinet RTriangle FactoMiner\n Giotto does not automatically install all these packages as they are not absolutely required and this reduces the number of dependenciespython:         /Users/mechthildluetge/Library/r-miniconda/envs/giotto_env/bin/pythonw\nlibpython:      /Users/mechthildluetge/Library/r-miniconda/envs/giotto_env/lib/libpython3.6m.dylib\npythonhome:     /Users/mechthildluetge/Library/r-miniconda/envs/giotto_env:/Users/mechthildluetge/Library/r-miniconda/envs/giotto_env\nversion:        3.6.10 |Anaconda, Inc.| (default, Jan  7 2020, 15:01:53)  [GCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final)]\nnumpy:          /Users/mechthildluetge/Library/r-miniconda/envs/giotto_env/lib/python3.6/site-packages/numpy\nnumpy_version:  1.19.5\n\nNOTE: Python version was forced by use_python() function\n\n no external python path was provided, but a giotto python environment was found and will be used \n\nshowGiottoInstructions(gobject)\n\n$python_path\n[1] \"/Users/mechthildluetge/Library/r-miniconda/envs/giotto_env/bin/pythonw\"\n\n$show_plot\n[1] TRUE\n\n$return_plot\n[1] TRUE\n\n$save_plot\n[1] FALSE\n\n$save_dir\n[1] \"/Users/mechthildluetge/Projects/scRNAseq/humanLN24/analysis\"\n\n$plot_format\n[1] \"png\"\n\n$dpi\n[1] 300\n\n$units\n[1] \"in\"\n\n$height\n[1] 9\n\n$width\n[1] 9\n\n$is_docker\n[1] FALSE\n\ngobject &lt;- changeGiottoInstructions(gobject, param = 'save_dir',\n                                    new_value = paste0(basedir, \n                                    \"/data/ST/giottoPlots\"))\n\ngobject &lt;- changeGiottoInstructions(gobject, param = 'plot_format',\n                                    new_value = \"pdf\")\n                               \nshowGiottoInstructions(gobject)\n\n$python_path\n[1] \"/Users/mechthildluetge/Library/r-miniconda/envs/giotto_env/bin/pythonw\"\n\n$show_plot\n[1] TRUE\n\n$return_plot\n[1] TRUE\n\n$save_plot\n[1] FALSE\n\n$save_dir\n[1] \"/Users/mechthildluetge/Projects/scRNAseq/humanLN24/data/ST/giottoPlots\"\n\n$plot_format\n[1] \"pdf\"\n\n$dpi\n[1] 300\n\n$units\n[1] \"in\"\n\n$height\n[1] 9\n\n$width\n[1] 9\n\n$is_docker\n[1] FALSE\n\nmypl &lt;- spatPlot(gobject = gobject, cell_color = 'celltype',\n                cell_color_code = colAll, point_size = 0.7) + \n  theme(panel.background = element_rect(fill ='black'),\n            panel.grid = element_blank()) +\n  guides(fill = guide_legend(override.aes = list(size=5)))\n\n\n\nmypl\n\n\n\n\n\n\nadd image to giotto object\n\n\nspatial network\n\nplotStatDelaunayNetwork(gobject = gobject)\n\n\n\n\n\n\ngobject &lt;- createSpatialNetwork(gobject = gobject, minimum_k = 2)\ngobject &lt;- createSpatialNetwork(gobject = gobject, minimum_k = 2,\n                method = 'kNN', k = 10, verbose=T)\nshowNetworks(gobject)\n\nThe following images are available:  Delaunay_network kNN_network \n\n\n[1] \"Delaunay_network\" \"kNN_network\"     \n\n# visualize the two different spatial networks\nspatPlot(gobject = gobject, show_network = T,\n    network_color = 'blue', spatial_network_name = 'Delaunay_network',\n    point_size = 1, cell_color = 'celltype', point_alpha = 0.5,\n                cell_color_code = colAll)\n\n\n\n\n\n\nspatPlot(gobject = gobject, show_network = T,\n    network_color = 'blue', spatial_network_name = 'kNN_network',\n    point_size = 1, cell_color = 'celltype', point_alpha = 0.5,\n                cell_color_code = colAll)\n\n\n\n\n\n\n\n\n\ncell neighborhoods Delauney\n\nall celltypes barplot\n\n#### ------- all cell types ------------------------ #####\n\ncell_proximities &lt;- cellProximityEnrichment(gobject = gobject,\n                   cluster_column = 'celltype',\n                   spatial_network_name = 'Delaunay_network',\n                   adjust_method = 'fdr',\n                   number_of_simulations = 1000)\n\n# barplot\ng &lt;- cellProximityBarplot(gobject = gobject,\n        CPscore = cell_proximities,\n        min_orig_ints = 5, min_sim_ints = 5)\n\n\n\ng\n\n\n\n# barplot\ng &lt;- cellProximityBarplot_mod(gobject = gobject,\n        CPscore = cell_proximities,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\") +\n  scale_fill_manual(values = colAll)\ng\n\n\n\n\n\n\nsubset celltypes barplot\n\n# barplot\ng &lt;- cellProximityBarplot_mod(gobject = gobject,\n        CPscore = cell_proximities, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T,\n        filter_sender = names(colFRC),\n        filter_receiver = c(names(colBEC), names(colLEC))) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobject,\n        CPscore = cell_proximities, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"receiver\", only_pos = T,\n        filter_sender = c(names(colBEC), names(colLEC)),\n        filter_receiver = names(colFRC)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobject,\n        CPscore = cell_proximities, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T,\n        filter_sender = names(colFRC),\n        filter_receiver = names(colImm)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobject,\n        CPscore = cell_proximities, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"receiver\", only_pos = T,\n        filter_sender = names(colImm),\n        filter_receiver = names(colFRC)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\n\n\n\nall celltypes heatmap\n\n##network\ncellProximityNetwork(gobject = gobject, CPscore = cell_proximities,\n        remove_self_edges = T, only_show_enrichment_edges = T)\n\n\n\n\n\n\n##heatmap\ncellProximityHeatmap(gobject = gobject, CPscore = cell_proximities,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(\"#6876a4\", \"#F7F7F7\", \"#95143a\"))\n\n\n\n\n\n\ncellProximityHeatmap(gobject = gobject, CPscore = cell_proximities,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(\"#00155e\", \"#0000a6\", \"#dca611\"))\n\n\n\n\n\n\n\n\n\nFRC plus immune\n\n##heatmap FRC plus immune\n#selCells &lt;- c(names(colImm),names(colFRC))\nselCells &lt;- c(names(colImm),\"medRCIFRC\",\"TRC\", \"VSMC\", \"PI16+RC\", \"PRC1\", \"BRC\") \nselCellIDs &lt;- gobject@cell_ID[which(gobject@cell_metadata$celltype %in% selCells)]\ngobjectSub &lt;- subsetGiotto(gobject, cell_ids = selCellIDs)\n\ngobjectSub@cell_metadata$celltype &lt;- factor(gobjectSub@cell_metadata$celltype,\n                                            levels=selCells)\n\ncell_proximitiesSub &lt;- cellProximityEnrichment(gobject = gobjectSub,\n                   cluster_column = 'celltype',\n                   spatial_network_name = 'Delaunay_network',\n                   adjust_method = 'fdr',\n                   number_of_simulations = 1000)\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = F, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#6876a4\", \"#F7F7F7\", \"#95143a\")))\n\n\n\np          \n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np\n\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#00155e\", \"#0000a6\", \"#dca611\")))\n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\n\np          \n\n\n\n\n\n\nFRC plus sel IMM or EC heatmap\n\n##heatmap FRC plus selected immune\nselImm &lt;- c(\"naiveB\", \"GCB\", \"MBC\", \"plasmaCell\", \"CD4T\", \"DC\", \"Mph\")\n#selCells &lt;- c(selImm,names(colFRC))\nselCells &lt;- c(selImm,\"medRCIFRC\",\"TRC\", \"VSMC\", \"PI16+RC\", \"PRC1\", \"BRC\") \n\nselCellIDs &lt;- gobject@cell_ID[which(gobject@cell_metadata$celltype %in% selCells)]\ngobjectSub &lt;- subsetGiotto(gobject, cell_ids = selCellIDs)\n\ngobjectSub@cell_metadata$celltype &lt;- factor(gobjectSub@cell_metadata$celltype,\n                                            levels=selCells)\n\ncell_proximitiesSub &lt;- cellProximityEnrichment(gobject = gobjectSub,\n                   cluster_column = 'celltype',\n                   spatial_network_name = 'Delaunay_network',\n                   adjust_method = 'fdr',\n                   number_of_simulations = 1000)\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#6876a4\", \"#F7F7F7\", \"#95143a\")))\n\n\n\np          \n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np\n\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#00155e\", \"#0000a6\", \"#dca611\")))\n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\n\np          \n\n\n\n### barplot\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T,\n        filter_sender = names(colFRC),\n        filter_receiver = names(colImm)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"receiver\", only_pos = T,\n        filter_sender = names(colImm),\n        filter_receiver = names(colFRC)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\n##heatmap FRC plus endothelial\n#selCells &lt;- c(names(colLEC),names(colBEC),names(colFRC))\nselCells &lt;- c(names(colLEC),names(colBEC),\"medRCIFRC\",\"TRC\", \"VSMC\", \"PI16+RC\", \n              \"PRC1\", \"BRC\") \n\nselCellIDs &lt;- gobject@cell_ID[which(gobject@cell_metadata$celltype %in% selCells)]\ngobjectSub &lt;- subsetGiotto(gobject, cell_ids = selCellIDs)\n\ngobjectSub@cell_metadata$celltype &lt;- factor(gobjectSub@cell_metadata$celltype,\n                                            levels=selCells)\n\ncell_proximitiesSub &lt;- cellProximityEnrichment(gobject = gobjectSub,\n                   cluster_column = 'celltype',\n                   spatial_network_name = 'Delaunay_network',\n                   adjust_method = 'fdr',\n                   number_of_simulations = 1000)\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#6876a4\", \"#F7F7F7\", \"#95143a\")))\n\n\n\np          \n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np\n\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#00155e\", \"#0000a6\", \"#dca611\")))\n\n\n\np\n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\n\np          \n\n\n\n### barplot\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T,\n        filter_sender = names(colFRC),\n        filter_receiver = c(names(colBEC), names(colLEC))) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"receiver\", only_pos = T,\n        filter_sender = c(names(colBEC), names(colLEC)),\n        filter_receiver = names(colFRC)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\n\n\n\n\ncell neighborhoods kNN\n\nall celltypes barplot\n\n#### ------- all cell types ------------------------ #####\n\ncell_proximities &lt;- cellProximityEnrichment(gobject = gobject,\n                   cluster_column = 'celltype',\n                   spatial_network_name = 'kNN_network',\n                   adjust_method = 'fdr',\n                   number_of_simulations = 100)\n\n# barplot\ng &lt;- cellProximityBarplot(gobject = gobject,\n        CPscore = cell_proximities,\n        min_orig_ints = 5, min_sim_ints = 5)\n\n\n\ng\n\n\n\n# barplot\ng &lt;- cellProximityBarplot_mod(gobject = gobject,\n        CPscore = cell_proximities,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\") +\n  scale_fill_manual(values = colAll)\ng\n\n\n\n\n\n\nsubset celltypes barplot\n\ng &lt;- cellProximityBarplot_mod(gobject = gobject,\n        CPscore = cell_proximities, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T,\n        filter_sender = names(colFRC),\n        filter_receiver = c(names(colBEC), names(colLEC))) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobject,\n        CPscore = cell_proximities, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"receiver\", only_pos = T,\n        filter_sender = c(names(colBEC), names(colLEC)),\n        filter_receiver = names(colFRC)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobject,\n        CPscore = cell_proximities, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T,\n        filter_sender = names(colFRC),\n        filter_receiver = names(colImm)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobject,\n        CPscore = cell_proximities, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"receiver\", only_pos = T,\n        filter_sender = names(colImm),\n        filter_receiver = names(colFRC)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\n\n\n\nall celltypes heatmap\n\n##network\ncellProximityNetwork(gobject = gobject, CPscore = cell_proximities,\n        remove_self_edges = T, only_show_enrichment_edges = T)\n\n\n\n\n\n\n##heatmap\ncellProximityHeatmap(gobject = gobject, CPscore = cell_proximities,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(\"#6876a4\", \"#F7F7F7\", \"#95143a\"))\n\n\n\n\n\n\ncellProximityHeatmap(gobject = gobject, CPscore = cell_proximities,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(\"#00155e\", \"#0000a6\", \"#dca611\"))\n\n\n\n\n\n\n\n\n\nFRC plus immune\n\n##heatmap FRC plus immune\n#selCells &lt;- c(names(colImm),names(colFRC))\nselCells &lt;- c(names(colImm),\"medRCIFRC\",\"TRC\", \"VSMC\", \"PI16+RC\", \"PRC1\", \"BRC\") \n\nselCellIDs &lt;- gobject@cell_ID[which(gobject@cell_metadata$celltype %in% selCells)]\ngobjectSub &lt;- subsetGiotto(gobject, cell_ids = selCellIDs)\n\ngobjectSub@cell_metadata$celltype &lt;- factor(gobjectSub@cell_metadata$celltype,\n                                            levels=selCells)\n\ncell_proximitiesSub &lt;- cellProximityEnrichment(gobject = gobjectSub,\n                   cluster_column = 'celltype',\n                   spatial_network_name = 'kNN_network',\n                   adjust_method = 'fdr',\n                   number_of_simulations = 100)\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = F, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#6876a4\", \"#F7F7F7\", \"#95143a\")))\n\n\n\np          \n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np\n\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#00155e\", \"#0000a6\", \"#dca611\")))\n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\n\np          \n\n\n\n\n\n\nFRC plus sel IMM or EC\n\n##heatmap FRC plus selected immune\nselImm &lt;- c(\"naiveB\", \"GCB\", \"MBC\", \"plasmaCell\", \"CD4T\", \"DC\", \"Mph\")\n#selCells &lt;- c(selImm,names(colFRC))\nselCells &lt;- c(selImm,\"medRCIFRC\",\"TRC\", \"VSMC\", \"PI16+RC\", \"PRC1\", \"BRC\") \n\nselCellIDs &lt;- gobject@cell_ID[which(gobject@cell_metadata$celltype %in% selCells)]\ngobjectSub &lt;- subsetGiotto(gobject, cell_ids = selCellIDs)\n\ngobjectSub@cell_metadata$celltype &lt;- factor(gobjectSub@cell_metadata$celltype,\n                                            levels=selCells)\n\ncell_proximitiesSub &lt;- cellProximityEnrichment(gobject = gobjectSub,\n                   cluster_column = 'celltype',\n                   spatial_network_name = 'kNN_network',\n                   adjust_method = 'fdr',\n                   number_of_simulations = 100)\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#6876a4\", \"#F7F7F7\", \"#95143a\")))\n\n\n\np          \n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np\n\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#00155e\", \"#0000a6\", \"#dca611\")))\n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\n\np          \n\n\n\n### barplot\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T,\n        filter_sender = names(colFRC),\n        filter_receiver = names(colImm)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"receiver\", only_pos = T,\n        filter_sender = names(colImm),\n        filter_receiver = names(colFRC)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\n##heatmap FRC plus endothelial\n#selCells &lt;- c(names(colLEC),names(colBEC),names(colFRC))\nselCells &lt;- c(names(colLEC),names(colBEC),\"medRCIFRC\",\"TRC\", \"VSMC\", \"PI16+RC\",\n              \"PRC1\", \"BRC\") \n\nselCellIDs &lt;- gobject@cell_ID[which(gobject@cell_metadata$celltype %in% selCells)]\ngobjectSub &lt;- subsetGiotto(gobject, cell_ids = selCellIDs)\n\ngobjectSub@cell_metadata$celltype &lt;- factor(gobjectSub@cell_metadata$celltype,\n                                            levels=selCells)\n\ncell_proximitiesSub &lt;- cellProximityEnrichment(gobject = gobjectSub,\n                   cluster_column = 'celltype',\n                   spatial_network_name = 'kNN_network',\n                   adjust_method = 'fdr',\n                   number_of_simulations = 100)\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#6876a4\", \"#F7F7F7\", \"#95143a\")))\n\n\n\np          \n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np\n\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#00155e\", \"#0000a6\", \"#dca611\")))\n\n\n\np\n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\n\np          \n\n\n\n### barplot\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T,\n        filter_sender = names(colFRC),\n        filter_receiver = c(names(colBEC), names(colLEC))) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"receiver\", only_pos = T,\n        filter_sender = c(names(colBEC), names(colLEC)),\n        filter_receiver = names(colFRC)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\n\n\n\nPRC plus sel EC\n\n##heatmap FRC plus endothelial\nselCells &lt;- c(names(colLEC),names(colBEC),\n              c(\"PRC1\", \"VSMC\", \"PI16+RC\"))\nselCellIDs &lt;- gobject@cell_ID[which(gobject@cell_metadata$celltype %in% selCells)]\ngobjectSub &lt;- subsetGiotto(gobject, cell_ids = selCellIDs)\n\ngobjectSub@cell_metadata$celltype &lt;- factor(gobjectSub@cell_metadata$celltype,\n                                            levels=selCells)\n\ncell_proximitiesSub &lt;- cellProximityEnrichment(gobject = gobjectSub,\n                   cluster_column = 'celltype',\n                   spatial_network_name = 'kNN_network',\n                   adjust_method = 'fdr',\n                   number_of_simulations = 500)\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#6876a4\", \"#F7F7F7\", \"#95143a\")))\n\n\n\np          \n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np\n\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#00155e\", \"#0000a6\", \"#dca611\")))\n\n\n\np\n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\n\np          \n\n\n\n### barplot\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T,\n        filter_sender = names(colFRC),\n        filter_receiver = c(names(colBEC), names(colLEC))) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"receiver\", only_pos = T,\n        filter_sender = c(names(colBEC), names(colLEC)),\n        filter_receiver = names(colFRC)) +\n  scale_fill_manual(values = colAll)\ng"
  },
  {
    "objectID": "analysis/celltypeEnrichmentGiottoB2_s2.html#session-info",
    "href": "analysis/celltypeEnrichmentGiottoB2_s2.html#session-info",
    "title": "Visualize celltype decomposition and neighbourhood - s2 batch 2",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] parallel  stats4    stats     graphics  grDevices utils     datasets \n[8] methods   base     \n\nother attached packages:\n [1] Giotto_1.1.2                biomaRt_2.56.1             \n [3] igraph_2.0.2                Seurat_5.0.2               \n [5] SeuratObject_5.0.1          sp_2.1-3                   \n [7] Matrix_1.6-5                SpaTalk_1.0                \n [9] doParallel_1.0.17           iterators_1.0.14           \n[11] foreach_1.5.2               ggalluvial_0.12.5          \n[13] pheatmap_1.0.12             scran_1.28.2               \n[15] ggsci_3.0.1                 scater_1.28.0              \n[17] scuttle_1.10.3              ggspavis_1.6.0             \n[19] here_1.0.1                  SpatialExperiment_1.10.0   \n[21] SingleCellExperiment_1.22.0 SummarizedExperiment_1.30.2\n[23] Biobase_2.60.0              GenomicRanges_1.52.1       \n[25] GenomeInfoDb_1.36.4         IRanges_2.36.0             \n[27] S4Vectors_0.40.1            BiocGenerics_0.48.0        \n[29] MatrixGenerics_1.12.3       matrixStats_1.2.0          \n[31] lubridate_1.9.3             forcats_1.0.0              \n[33] stringr_1.5.1               dplyr_1.1.4                \n[35] purrr_1.0.2                 readr_2.1.5                \n[37] tidyr_1.3.1                 tibble_3.2.1               \n[39] ggplot2_3.5.0               tidyverse_2.0.0            \n\nloaded via a namespace (and not attached):\n  [1] R.methodsS3_1.8.2         progress_1.2.3           \n  [3] goftest_1.2-3             Biostrings_2.68.1        \n  [5] HDF5Array_1.28.1          vctrs_0.6.5              \n  [7] spatstat.random_3.2-3     digest_0.6.34            \n  [9] png_0.1-8                 shape_1.4.6.1            \n [11] ggrepel_0.9.5             deldir_2.0-4             \n [13] parallelly_1.37.1         magick_2.8.3             \n [15] MASS_7.3-60.0.1           reshape2_1.4.4           \n [17] httpuv_1.6.14             withr_3.0.0              \n [19] xfun_0.42                 ggfun_0.1.4              \n [21] ggpubr_0.6.0              ellipsis_0.3.2           \n [23] survival_3.5-8            memoise_2.0.1            \n [25] ggbeeswarm_0.7.2          zoo_1.8-12               \n [27] GlobalOptions_0.1.2       pbapply_1.7-2            \n [29] R.oo_1.26.0               prettyunits_1.2.0        \n [31] KEGGREST_1.40.1           promises_1.2.1           \n [33] httr_1.4.7                rstatix_0.7.2            \n [35] globals_0.16.2            fitdistrplus_1.1-11      \n [37] rhdf5filters_1.12.1       rhdf5_2.44.0             \n [39] rstudioapi_0.15.0         miniUI_0.1.1.1           \n [41] generics_0.1.3            curl_5.2.1               \n [43] zlibbioc_1.46.0           ScaledMatrix_1.8.1       \n [45] ggraph_2.2.0              polyclip_1.10-6          \n [47] GenomeInfoDbData_1.2.10   xtable_1.8-4             \n [49] evaluate_0.23             S4Arrays_1.0.6           \n [51] BiocFileCache_2.8.0       hms_1.1.3                \n [53] irlba_2.3.5.1             colorspace_2.1-0         \n [55] filelock_1.0.3            ROCR_1.0-11              \n [57] reticulate_1.35.0         spatstat.data_3.0-4      \n [59] magrittr_2.0.3            lmtest_0.9-40            \n [61] later_1.3.2               viridis_0.6.5            \n [63] lattice_0.22-5            spatstat.geom_3.2-9      \n [65] future.apply_1.11.1       scattermore_1.2          \n [67] XML_3.99-0.16.1           cowplot_1.1.3            \n [69] RcppAnnoy_0.0.22          pillar_1.9.0             \n [71] nlme_3.1-164              compiler_4.3.0           \n [73] beachmat_2.16.0           RSpectra_0.16-1          \n [75] stringi_1.8.3             tensor_1.5               \n [77] plyr_1.8.9                crayon_1.5.2             \n [79] abind_1.4-5               locfit_1.5-9.9           \n [81] graphlayouts_1.1.0        bit_4.0.5                \n [83] codetools_0.2-19          BiocSingular_1.16.0      \n [85] ggExtra_0.10.1            GetoptLong_1.0.5         \n [87] plotly_4.10.4             mime_0.12                \n [89] NNLM_0.4.4                splines_4.3.0            \n [91] circlize_0.4.16           Rcpp_1.0.12              \n [93] fastDummies_1.7.3         dbplyr_2.4.0             \n [95] sparseMatrixStats_1.12.2  knitr_1.45               \n [97] blob_1.2.4                utf8_1.2.4               \n [99] clue_0.3-65               listenv_0.9.1            \n[101] DelayedMatrixStats_1.22.6 ggsignif_0.6.4           \n[103] statmod_1.5.0             tzdb_0.4.0               \n[105] tweenr_2.0.3              pkgconfig_2.0.3          \n[107] tools_4.3.0               cachem_1.0.8             \n[109] RSQLite_2.3.5             viridisLite_0.4.2        \n[111] DBI_1.2.2                 fastmap_1.1.1            \n[113] rmarkdown_2.26            scales_1.3.0             \n[115] grid_4.3.0                ica_1.0-3                \n[117] broom_1.0.5               patchwork_1.2.0          \n[119] dotCall64_1.1-1           carData_3.0-5            \n[121] RANN_2.6.1                farver_2.1.1             \n[123] tidygraph_1.3.1           scatterpie_0.2.1         \n[125] yaml_2.3.8                cli_3.6.2                \n[127] leiden_0.4.3.1            lifecycle_1.0.4          \n[129] dbscan_1.1-12             uwot_0.1.16              \n[131] bluster_1.10.0            backports_1.4.1          \n[133] DropletUtils_1.20.0       BiocParallel_1.34.2      \n[135] timechange_0.3.0          gtable_0.3.4             \n[137] rjson_0.2.21              ggridges_0.5.6           \n[139] progressr_0.14.0          limma_3.56.2             \n[141] jsonlite_1.8.8            edgeR_3.42.4             \n[143] RcppHNSW_0.6.0            bitops_1.0-7             \n[145] bit64_4.0.5               Rtsne_0.17               \n[147] spatstat.utils_3.0-4      BiocNeighbors_1.18.0     \n[149] ggside_0.3.1              metapod_1.8.0            \n[151] dqrng_0.3.2               R.utils_2.12.3           \n[153] lazyeval_0.2.2            shiny_1.8.0              \n[155] htmltools_0.5.7           sctransform_0.4.1        \n[157] rappdirs_0.3.3            glue_1.7.0               \n[159] spam_2.10-0               XVector_0.40.0           \n[161] RCurl_1.98-1.14           rprojroot_2.0.4          \n[163] gridExtra_2.3             R6_2.5.1                 \n[165] labeling_0.4.3            cluster_2.1.6            \n[167] Rhdf5lib_1.22.1           DelayedArray_0.26.7      \n[169] tidyselect_1.2.0          vipor_0.4.7              \n[171] ggforce_0.4.2             xml2_1.3.6               \n[173] car_3.1-2                 AnnotationDbi_1.62.2     \n[175] future_1.33.1             rsvd_1.0.5               \n[177] munsell_0.5.0             KernSmooth_2.23-22       \n[179] data.table_1.15.2         htmlwidgets_1.6.4        \n[181] ComplexHeatmap_2.16.0     RColorBrewer_1.1-3       \n[183] rlang_1.1.3               spatstat.sparse_3.0-3    \n[185] spatstat.explore_3.2-6    Cairo_1.6-2              \n[187] fansi_1.0.6               beeswarm_0.4.0           \n\ndate()\n\n[1] \"Thu Mar 14 14:43:46 2024\""
  },
  {
    "objectID": "analysis/celltypeEnrichmentGiotto_s4.html",
    "href": "analysis/celltypeEnrichmentGiotto_s4.html",
    "title": "Visualize celltype decomposition and neighbourhood - s4 batch 1",
    "section": "",
    "text": "library(tidyverse)\nlibrary(SpatialExperiment)\nlibrary(here)\nlibrary(ggspavis)\nlibrary(scater)\nlibrary(ggsci)\nlibrary(scran)\nlibrary(pheatmap)\nlibrary(SpaTalk)\nlibrary(Matrix)\nlibrary(Seurat)\nlibrary(igraph)\nlibrary(biomaRt)\nlibrary(Giotto)"
  },
  {
    "objectID": "analysis/celltypeEnrichmentGiotto_s4.html#sample-4",
    "href": "analysis/celltypeEnrichmentGiotto_s4.html#sample-4",
    "title": "Visualize celltype decomposition and neighbourhood - s4 batch 1",
    "section": "Sample 4",
    "text": "Sample 4\n\nLoad spatalk object\n\nbasedir &lt;- here()\n\ni &lt;- 4\nobj &lt;- readRDS(file=paste0(basedir, \n                           \"/data/ST/spatalk/spatalkDecomp_s\", i,\n                           \".rds\"))\n\n\n\nset color palettes\n\ncolLEC &lt;- c(\"#79AF97FF\",\"#B24745FF\",\"#DF8F44FF\")\nnames(colLEC) &lt;- c(\"SCScLEC\", \"SCSfLEC\", \"MedSinusLEC\")\n\ncolBEC &lt;- c(\"#48557e\", \"#e3a616\",\"#9a3038\")\nnames(colBEC) &lt;- c(\"venBEC\", \"capBEC\", \"artBEC\")\n\n\ncolFRC &lt;- c(\"#800000FF\", \"#FFA319FF\",\"#8A9045FF\", \"#155F83FF\",\n            \"#C16622FF\", \"#6692a3\", \"#3b7f60\")\nnames(colFRC) &lt;- c(\"medRCIFRC\", \"TRC\", \"ACTA2+PRC\", \"VSMC\", \"PI16+RC\", \"PRC1\",\n                   \"BRC\")\n\ncolImm &lt;- c(\"#0b6647\", \"#54907e\", \"#94c78a\", \"#6f9568\", \n            \"#8f2810\", \"#d0ac21\",\"#9e9f0b\", \"#486584\",\n            \"#4b5397\", \"#8873d3\", \"#6e3e7a\")\n            \nnames(colImm) &lt;- c(\"naiveB\", \"GCB\", \"MBC\", \"plasmaCell\",\n                   \"CD4T\", \"CD8Tcm\", \"CTL/NKcell\", \"ILC3\", \"pDC\", \"Mph\", \"DC\")\n\ncolAll &lt;- c(colFRC, colBEC, colLEC, colImm) \n\ncolPal &lt;- c(\"#F0027F\", \"#377EB8\", \"#4DAF4A\", \"#984EA3\", \"#FFD700\",\n            \"#FF7F00\", \"#1A1A1A\", \"#666666\", pal_futurama()(10))\n\n\n\nvis sc ST data\n\nplot_st_celltype_all(object = obj, size = 0.5, color = colAll)\n\n\n\n\n\n\ncreate giotto object\n\n## create giotto object from sc spatial data as inferred by SpaTalk\n\ncellLoc &lt;- data.frame(cbind(obj@meta$newmeta$x, obj@meta$newmeta$y))\ncolnames(cellLoc) &lt;- c(\"x\", \"y\")\ngobject = createGiottoObject(raw_exprs=obj@data$newdata, spatial_locs=cellLoc,\n                             cell_metadata = obj@meta$newmeta)\n\nConsider to install these (optional) packages to run all possible Giotto commands for spatial analyses:  MAST smfishHmrf trendsceek SPARK multinet RTriangle FactoMiner\n Giotto does not automatically install all these packages as they are not absolutely required and this reduces the number of dependenciespython:         /Users/mechthildluetge/Library/r-miniconda/envs/giotto_env/bin/pythonw\nlibpython:      /Users/mechthildluetge/Library/r-miniconda/envs/giotto_env/lib/libpython3.6m.dylib\npythonhome:     /Users/mechthildluetge/Library/r-miniconda/envs/giotto_env:/Users/mechthildluetge/Library/r-miniconda/envs/giotto_env\nversion:        3.6.10 |Anaconda, Inc.| (default, Jan  7 2020, 15:01:53)  [GCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final)]\nnumpy:          /Users/mechthildluetge/Library/r-miniconda/envs/giotto_env/lib/python3.6/site-packages/numpy\nnumpy_version:  1.19.5\n\nNOTE: Python version was forced by use_python() function\n\n no external python path was provided, but a giotto python environment was found and will be used \n\nshowGiottoInstructions(gobject)\n\n$python_path\n[1] \"/Users/mechthildluetge/Library/r-miniconda/envs/giotto_env/bin/pythonw\"\n\n$show_plot\n[1] TRUE\n\n$return_plot\n[1] TRUE\n\n$save_plot\n[1] FALSE\n\n$save_dir\n[1] \"/Users/mechthildluetge/Projects/scRNAseq/humanLN24/analysis\"\n\n$plot_format\n[1] \"png\"\n\n$dpi\n[1] 300\n\n$units\n[1] \"in\"\n\n$height\n[1] 9\n\n$width\n[1] 9\n\n$is_docker\n[1] FALSE\n\ngobject &lt;- changeGiottoInstructions(gobject, param = 'save_dir',\n                                    new_value = paste0(basedir, \n                                    \"/data/ST/giottoPlots\"))\n\ngobject &lt;- changeGiottoInstructions(gobject, param = 'plot_format',\n                                    new_value = \"pdf\")\n                               \nshowGiottoInstructions(gobject)\n\n$python_path\n[1] \"/Users/mechthildluetge/Library/r-miniconda/envs/giotto_env/bin/pythonw\"\n\n$show_plot\n[1] TRUE\n\n$return_plot\n[1] TRUE\n\n$save_plot\n[1] FALSE\n\n$save_dir\n[1] \"/Users/mechthildluetge/Projects/scRNAseq/humanLN24/data/ST/giottoPlots\"\n\n$plot_format\n[1] \"pdf\"\n\n$dpi\n[1] 300\n\n$units\n[1] \"in\"\n\n$height\n[1] 9\n\n$width\n[1] 9\n\n$is_docker\n[1] FALSE\n\nmypl &lt;- spatPlot(gobject = gobject, cell_color = 'celltype',\n                cell_color_code = colAll, point_size = 0.7) + \n  theme(panel.background = element_rect(fill ='black'),\n            panel.grid = element_blank()) +\n  guides(fill = guide_legend(override.aes = list(size=5)))\n\n\n\nmypl\n\n\n\n\n\n\nadd image to giotto object\n\npng_path = paste0(basedir, \"/data/ST/giottoPlots/20230531_spatialtrancriptomic\", \n                  \"_humanLNpat55_quaD-Stitching-02_2023-06-06T17-03-11_277.tif\")\nmg_img = magick::image_read(png_path)\nmg_img2 = magick::image_negate(mg_img)\norig_neg_png = createGiottoImage(gobject = gobject, mg_object = mg_img2,\n                                 name = 'image_neg',\n                                 xmax_adj = 760, xmin_adj = 730,\n                                 ymax_adj = 1050, ymin_adj = 500)\nmypl = spatPlot(gobject = gobject, cell_color = 'celltype', point_alpha = 0.5,\n                cell_color_code = colAll, point_size = 1)\n\n\n\nmypl_image = addGiottoImageToSpatPlot(mypl, orig_neg_png)\nmypl_image\n\n\n\norig_neg_png = createGiottoImage(gobject = gobject, mg_object = mg_img,\n                                 name = 'image_pos',\n                                 xmax_adj = 760, xmin_adj = 730,\n                                 ymax_adj = 1050, ymin_adj = 500)\nmypl_image = addGiottoImageToSpatPlot(mypl, orig_neg_png)\nmypl_image\n\n\n\npng_path = paste0(basedir, \"/data/ST/giottoPlots/20230531_spatial trancriptomic_\", \n                  \"human LN pat55_quaD-Stitching-02_2023-06-06T17-03-14.637.tif\")\nmg_img = magick::image_read(png_path)\n\norig_neg_png = createGiottoImage(gobject = gobject, mg_object = mg_img,\n                                 name = 'image_flu',\n                                 xmax_adj = 760, xmin_adj = 730,\n                                 ymax_adj = 1050, ymin_adj = 500)\nmypl_image = addGiottoImageToSpatPlot(mypl, orig_neg_png)\nmypl_image\n\n\n\n\n\n\nspatial network\n\nplotStatDelaunayNetwork(gobject = gobject)\n\n\n\n\n\n\ngobject &lt;- createSpatialNetwork(gobject = gobject, minimum_k = 2)\ngobject &lt;- createSpatialNetwork(gobject = gobject, minimum_k = 2,\n                method = 'kNN', k = 10, verbose=T)\nshowNetworks(gobject)\n\nThe following images are available:  Delaunay_network kNN_network \n\n\n[1] \"Delaunay_network\" \"kNN_network\"     \n\n# visualize the two different spatial networks\nspatPlot(gobject = gobject, show_network = T,\n    network_color = 'blue', spatial_network_name = 'Delaunay_network',\n    point_size = 1, cell_color = 'celltype', point_alpha = 0.5,\n                cell_color_code = colAll)\n\n\n\n\n\n\nspatPlot(gobject = gobject, show_network = T,\n    network_color = 'blue', spatial_network_name = 'kNN_network',\n    point_size = 1, cell_color = 'celltype', point_alpha = 0.5,\n                cell_color_code = colAll)\n\n\n\n\n\n\n\n\n\ncell neighborhoods Delauney\n\nall celltypes barplot\n\n#### ------- all cell types ------------------------ #####\n\ncell_proximities &lt;- cellProximityEnrichment(gobject = gobject,\n                   cluster_column = 'celltype',\n                   spatial_network_name = 'Delaunay_network',\n                   adjust_method = 'fdr',\n                   number_of_simulations = 1000)\n\n# barplot\ng &lt;- cellProximityBarplot(gobject = gobject,\n        CPscore = cell_proximities,\n        min_orig_ints = 5, min_sim_ints = 5)\n\n\n\ng\n\n\n\n# barplot\ng &lt;- cellProximityBarplot_mod(gobject = gobject,\n        CPscore = cell_proximities,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\") +\n  scale_fill_manual(values = colAll)\ng\n\n\n\n\n\n\nsubset celltypes barplot\n\n# barplot\ng &lt;- cellProximityBarplot_mod(gobject = gobject,\n        CPscore = cell_proximities, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T,\n        filter_sender = names(colFRC),\n        filter_receiver = c(names(colBEC), names(colLEC))) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobject,\n        CPscore = cell_proximities, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"receiver\", only_pos = T,\n        filter_sender = c(names(colBEC), names(colLEC)),\n        filter_receiver = names(colFRC)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobject,\n        CPscore = cell_proximities, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T,\n        filter_sender = names(colFRC),\n        filter_receiver = names(colImm)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobject,\n        CPscore = cell_proximities, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"receiver\", only_pos = T,\n        filter_sender = names(colImm),\n        filter_receiver = names(colFRC)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\n\n\n\nall celltypes heatmap\n\n##network\ncellProximityNetwork(gobject = gobject, CPscore = cell_proximities,\n        remove_self_edges = T, only_show_enrichment_edges = T)\n\n\n\n\n\n\n##heatmap\ncellProximityHeatmap(gobject = gobject, CPscore = cell_proximities,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(\"#6876a4\", \"#F7F7F7\", \"#95143a\"))\n\n\n\n\n\n\ncellProximityHeatmap(gobject = gobject, CPscore = cell_proximities,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(\"#00155e\", \"#0000a6\", \"#dca611\"))\n\n\n\n\n\n\n\n\n\nFRC plus immune\n\n##heatmap FRC plus immune\nselCells &lt;- c(names(colImm),names(colFRC))\nselCellIDs &lt;- gobject@cell_ID[which(gobject@cell_metadata$celltype %in% selCells)]\ngobjectSub &lt;- subsetGiotto(gobject, cell_ids = selCellIDs)\n\ngobjectSub@cell_metadata$celltype &lt;- factor(gobjectSub@cell_metadata$celltype,\n                                            levels=selCells)\n\ncell_proximitiesSub &lt;- cellProximityEnrichment(gobject = gobjectSub,\n                   cluster_column = 'celltype',\n                   spatial_network_name = 'Delaunay_network',\n                   adjust_method = 'fdr',\n                   number_of_simulations = 1000)\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = F, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#6876a4\", \"#F7F7F7\", \"#95143a\")))\n\n\n\np          \n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np\n\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#00155e\", \"#0000a6\", \"#dca611\")))\n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\n\np          \n\n\n\n\n\n\nFRC plus sel IMM or EC heatmap\n\n##heatmap FRC plus selected immune\nselImm &lt;- c(\"naiveB\", \"GCB\", \"MBC\", \"plasmaCell\", \"CD4T\", \"DC\", \"Mph\")\nselCells &lt;- c(selImm,names(colFRC))\nselCellIDs &lt;- gobject@cell_ID[which(gobject@cell_metadata$celltype %in% selCells)]\ngobjectSub &lt;- subsetGiotto(gobject, cell_ids = selCellIDs)\n\ngobjectSub@cell_metadata$celltype &lt;- factor(gobjectSub@cell_metadata$celltype,\n                                            levels=selCells)\n\ncell_proximitiesSub &lt;- cellProximityEnrichment(gobject = gobjectSub,\n                   cluster_column = 'celltype',\n                   spatial_network_name = 'Delaunay_network',\n                   adjust_method = 'fdr',\n                   number_of_simulations = 1000)\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#6876a4\", \"#F7F7F7\", \"#95143a\")))\n\n\n\np          \n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np\n\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#00155e\", \"#0000a6\", \"#dca611\")))\n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\n\np          \n\n\n\n### barplot\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T,\n        filter_sender = names(colFRC),\n        filter_receiver = names(colImm)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"receiver\", only_pos = T,\n        filter_sender = names(colImm),\n        filter_receiver = names(colFRC)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\n##heatmap FRC plus endothelial\nselCells &lt;- c(names(colLEC),names(colBEC),names(colFRC))\nselCellIDs &lt;- gobject@cell_ID[which(gobject@cell_metadata$celltype %in% selCells)]\ngobjectSub &lt;- subsetGiotto(gobject, cell_ids = selCellIDs)\n\ngobjectSub@cell_metadata$celltype &lt;- factor(gobjectSub@cell_metadata$celltype,\n                                            levels=selCells)\n\ncell_proximitiesSub &lt;- cellProximityEnrichment(gobject = gobjectSub,\n                   cluster_column = 'celltype',\n                   spatial_network_name = 'Delaunay_network',\n                   adjust_method = 'fdr',\n                   number_of_simulations = 1000)\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#6876a4\", \"#F7F7F7\", \"#95143a\")))\n\n\n\np          \n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np\n\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#00155e\", \"#0000a6\", \"#dca611\")))\n\n\n\np\n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\n\np          \n\n\n\n### barplot\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T,\n        filter_sender = names(colFRC),\n        filter_receiver = c(names(colBEC), names(colLEC))) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"receiver\", only_pos = T,\n        filter_sender = c(names(colBEC), names(colLEC)),\n        filter_receiver = names(colFRC)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\n\n\n\n\ncell neighborhoods kNN\n\nall celltypes barplot\n\n#### ------- all cell types ------------------------ #####\n\ncell_proximities &lt;- cellProximityEnrichment(gobject = gobject,\n                   cluster_column = 'celltype',\n                   spatial_network_name = 'kNN_network',\n                   adjust_method = 'fdr',\n                   number_of_simulations = 1000)\n\n# barplot\ng &lt;- cellProximityBarplot(gobject = gobject,\n        CPscore = cell_proximities,\n        min_orig_ints = 5, min_sim_ints = 5)\n\n\n\ng\n\n\n\n# barplot\ng &lt;- cellProximityBarplot_mod(gobject = gobject,\n        CPscore = cell_proximities,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\") +\n  scale_fill_manual(values = colAll)\ng\n\n\n\n\n\n\nsubset celltypes barplot\n\ng &lt;- cellProximityBarplot_mod(gobject = gobject,\n        CPscore = cell_proximities, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T,\n        filter_sender = names(colFRC),\n        filter_receiver = c(names(colBEC), names(colLEC))) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobject,\n        CPscore = cell_proximities, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"receiver\", only_pos = T,\n        filter_sender = c(names(colBEC), names(colLEC)),\n        filter_receiver = names(colFRC)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobject,\n        CPscore = cell_proximities, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T,\n        filter_sender = names(colFRC),\n        filter_receiver = names(colImm)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobject,\n        CPscore = cell_proximities, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"receiver\", only_pos = T,\n        filter_sender = names(colImm),\n        filter_receiver = names(colFRC)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\n\n\n\nall celltypes heatmap\n\n##network\ncellProximityNetwork(gobject = gobject, CPscore = cell_proximities,\n        remove_self_edges = T, only_show_enrichment_edges = T)\n\n\n\n\n\n\n##heatmap\ncellProximityHeatmap(gobject = gobject, CPscore = cell_proximities,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(\"#6876a4\", \"#F7F7F7\", \"#95143a\"))\n\n\n\n\n\n\ncellProximityHeatmap(gobject = gobject, CPscore = cell_proximities,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(\"#00155e\", \"#0000a6\", \"#dca611\"))\n\n\n\n\n\n\n\n\n\nFRC plus immune\n\n##heatmap FRC plus immune\nselCells &lt;- c(names(colImm),names(colFRC))\nselCellIDs &lt;- gobject@cell_ID[which(gobject@cell_metadata$celltype %in% selCells)]\ngobjectSub &lt;- subsetGiotto(gobject, cell_ids = selCellIDs)\n\ngobjectSub@cell_metadata$celltype &lt;- factor(gobjectSub@cell_metadata$celltype,\n                                            levels=selCells)\n\ncell_proximitiesSub &lt;- cellProximityEnrichment(gobject = gobjectSub,\n                   cluster_column = 'celltype',\n                   spatial_network_name = 'kNN_network',\n                   adjust_method = 'fdr',\n                   number_of_simulations = 1000)\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = F, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#6876a4\", \"#F7F7F7\", \"#95143a\")))\n\n\n\np          \n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np\n\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#00155e\", \"#0000a6\", \"#dca611\")))\n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\n\np          \n\n\n\n\n\n\nFRC plus sel IMM or EC\n\n##heatmap FRC plus selected immune\nselImm &lt;- c(\"naiveB\", \"GCB\", \"MBC\", \"plasmaCell\", \"CD4T\", \"DC\", \"Mph\")\nselCells &lt;- c(selImm,names(colFRC))\nselCellIDs &lt;- gobject@cell_ID[which(gobject@cell_metadata$celltype %in% selCells)]\ngobjectSub &lt;- subsetGiotto(gobject, cell_ids = selCellIDs)\n\ngobjectSub@cell_metadata$celltype &lt;- factor(gobjectSub@cell_metadata$celltype,\n                                            levels=selCells)\n\ncell_proximitiesSub &lt;- cellProximityEnrichment(gobject = gobjectSub,\n                   cluster_column = 'celltype',\n                   spatial_network_name = 'kNN_network',\n                   adjust_method = 'fdr',\n                   number_of_simulations = 1000)\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#6876a4\", \"#F7F7F7\", \"#95143a\")))\n\n\n\np          \n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np\n\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#00155e\", \"#0000a6\", \"#dca611\")))\n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\n\np          \n\n\n\n### barplot\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T,\n        filter_sender = names(colFRC),\n        filter_receiver = names(colImm)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"receiver\", only_pos = T,\n        filter_sender = names(colImm),\n        filter_receiver = names(colFRC)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\n##heatmap FRC plus endothelial\nselCells &lt;- c(names(colLEC),names(colBEC),names(colFRC))\nselCellIDs &lt;- gobject@cell_ID[which(gobject@cell_metadata$celltype %in% selCells)]\ngobjectSub &lt;- subsetGiotto(gobject, cell_ids = selCellIDs)\n\ngobjectSub@cell_metadata$celltype &lt;- factor(gobjectSub@cell_metadata$celltype,\n                                            levels=selCells)\n\ncell_proximitiesSub &lt;- cellProximityEnrichment(gobject = gobjectSub,\n                   cluster_column = 'celltype',\n                   spatial_network_name = 'kNN_network',\n                   adjust_method = 'fdr',\n                   number_of_simulations = 1000)\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#6876a4\", \"#F7F7F7\", \"#95143a\")))\n\n\n\np          \n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np\n\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#00155e\", \"#0000a6\", \"#dca611\")))\n\n\n\np\n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\n\np          \n\n\n\n### barplot\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T,\n        filter_sender = names(colFRC),\n        filter_receiver = c(names(colBEC), names(colLEC))) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"receiver\", only_pos = T,\n        filter_sender = c(names(colBEC), names(colLEC)),\n        filter_receiver = names(colFRC)) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\n\n\n\nPRC plus sel EC\n\n##heatmap FRC plus endothelial\nselCells &lt;- c(names(colLEC),names(colBEC),\n              c(\"ACTA2+PRC\", \"PRC1\", \"VSMC\", \"PI16+RC\"))\nselCellIDs &lt;- gobject@cell_ID[which(gobject@cell_metadata$celltype %in% selCells)]\ngobjectSub &lt;- subsetGiotto(gobject, cell_ids = selCellIDs)\n\ngobjectSub@cell_metadata$celltype &lt;- factor(gobjectSub@cell_metadata$celltype,\n                                            levels=selCells)\n\ncell_proximitiesSub &lt;- cellProximityEnrichment(gobject = gobjectSub,\n                   cluster_column = 'celltype',\n                   spatial_network_name = 'kNN_network',\n                   adjust_method = 'fdr',\n                   number_of_simulations = 1000)\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#6876a4\", \"#F7F7F7\", \"#95143a\")))\n\n\n\np          \n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np\n\n\n\np &lt;-cellProximityHeatmap(gobject = gobjectSub, CPscore = cell_proximitiesSub,\n        order_cell_types = T, scale = T,\n        color_breaks = c(-1.5, 0, 1.5),\n        color_names = c(c(\"#00155e\", \"#0000a6\", \"#dca611\")))\n\n\n\np\n\n\n\np@matrix &lt;- p@matrix[selCells,selCells]\np@column_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\np@row_names_param[[\"anno\"]]@var_env[[\"value\"]] &lt;- selCells\n\np          \n\n\n\n### barplot\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"sender\", only_pos = T,\n        filter_sender = names(colFRC),\n        filter_receiver = c(names(colBEC), names(colLEC))) +\n  scale_fill_manual(values = colAll)\ng\n\n\n\ng &lt;- cellProximityBarplot_mod(gobject = gobjectSub,\n        CPscore = cell_proximitiesSub, p_val = 0.05,\n        min_orig_ints = 5, min_sim_ints = 5,\n        color_by = \"receiver\", only_pos = T,\n        filter_sender = c(names(colBEC), names(colLEC)),\n        filter_receiver = names(colFRC)) +\n  scale_fill_manual(values = colAll)\ng"
  },
  {
    "objectID": "analysis/celltypeEnrichmentGiotto_s4.html#session-info",
    "href": "analysis/celltypeEnrichmentGiotto_s4.html#session-info",
    "title": "Visualize celltype decomposition and neighbourhood - s4 batch 1",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] parallel  stats4    stats     graphics  grDevices utils     datasets \n[8] methods   base     \n\nother attached packages:\n [1] Giotto_1.1.2                biomaRt_2.56.1             \n [3] igraph_2.0.2                Seurat_5.0.2               \n [5] SeuratObject_5.0.1          sp_2.1-3                   \n [7] Matrix_1.6-5                SpaTalk_1.0                \n [9] doParallel_1.0.17           iterators_1.0.14           \n[11] foreach_1.5.2               ggalluvial_0.12.5          \n[13] pheatmap_1.0.12             scran_1.28.2               \n[15] ggsci_3.0.1                 scater_1.28.0              \n[17] scuttle_1.10.3              ggspavis_1.6.0             \n[19] here_1.0.1                  SpatialExperiment_1.10.0   \n[21] SingleCellExperiment_1.22.0 SummarizedExperiment_1.30.2\n[23] Biobase_2.60.0              GenomicRanges_1.52.1       \n[25] GenomeInfoDb_1.36.4         IRanges_2.36.0             \n[27] S4Vectors_0.40.1            BiocGenerics_0.48.0        \n[29] MatrixGenerics_1.12.3       matrixStats_1.2.0          \n[31] lubridate_1.9.3             forcats_1.0.0              \n[33] stringr_1.5.1               dplyr_1.1.4                \n[35] purrr_1.0.2                 readr_2.1.5                \n[37] tidyr_1.3.1                 tibble_3.2.1               \n[39] ggplot2_3.5.0               tidyverse_2.0.0            \n\nloaded via a namespace (and not attached):\n  [1] R.methodsS3_1.8.2         progress_1.2.3           \n  [3] goftest_1.2-3             Biostrings_2.68.1        \n  [5] HDF5Array_1.28.1          vctrs_0.6.5              \n  [7] spatstat.random_3.2-3     digest_0.6.34            \n  [9] png_0.1-8                 shape_1.4.6.1            \n [11] ggrepel_0.9.5             deldir_2.0-4             \n [13] parallelly_1.37.1         magick_2.8.3             \n [15] MASS_7.3-60.0.1           reshape2_1.4.4           \n [17] httpuv_1.6.14             withr_3.0.0              \n [19] xfun_0.42                 ggfun_0.1.4              \n [21] ggpubr_0.6.0              ellipsis_0.3.2           \n [23] survival_3.5-8            memoise_2.0.1            \n [25] ggbeeswarm_0.7.2          zoo_1.8-12               \n [27] GlobalOptions_0.1.2       pbapply_1.7-2            \n [29] R.oo_1.26.0               prettyunits_1.2.0        \n [31] KEGGREST_1.40.1           promises_1.2.1           \n [33] httr_1.4.7                rstatix_0.7.2            \n [35] globals_0.16.2            fitdistrplus_1.1-11      \n [37] rhdf5filters_1.12.1       rhdf5_2.44.0             \n [39] rstudioapi_0.15.0         miniUI_0.1.1.1           \n [41] generics_0.1.3            curl_5.2.1               \n [43] zlibbioc_1.46.0           ScaledMatrix_1.8.1       \n [45] ggraph_2.2.0              polyclip_1.10-6          \n [47] GenomeInfoDbData_1.2.10   xtable_1.8-4             \n [49] evaluate_0.23             S4Arrays_1.0.6           \n [51] BiocFileCache_2.8.0       hms_1.1.3                \n [53] irlba_2.3.5.1             colorspace_2.1-0         \n [55] filelock_1.0.3            ROCR_1.0-11              \n [57] reticulate_1.35.0         spatstat.data_3.0-4      \n [59] magrittr_2.0.3            lmtest_0.9-40            \n [61] later_1.3.2               viridis_0.6.5            \n [63] lattice_0.22-5            spatstat.geom_3.2-9      \n [65] future.apply_1.11.1       scattermore_1.2          \n [67] XML_3.99-0.16.1           cowplot_1.1.3            \n [69] RcppAnnoy_0.0.22          pillar_1.9.0             \n [71] nlme_3.1-164              compiler_4.3.0           \n [73] beachmat_2.16.0           RSpectra_0.16-1          \n [75] stringi_1.8.3             tensor_1.5               \n [77] plyr_1.8.9                crayon_1.5.2             \n [79] abind_1.4-5               locfit_1.5-9.9           \n [81] graphlayouts_1.1.0        bit_4.0.5                \n [83] codetools_0.2-19          BiocSingular_1.16.0      \n [85] ggExtra_0.10.1            GetoptLong_1.0.5         \n [87] plotly_4.10.4             mime_0.12                \n [89] NNLM_0.4.4                splines_4.3.0            \n [91] circlize_0.4.16           Rcpp_1.0.12              \n [93] fastDummies_1.7.3         dbplyr_2.4.0             \n [95] sparseMatrixStats_1.12.2  knitr_1.45               \n [97] blob_1.2.4                utf8_1.2.4               \n [99] clue_0.3-65               listenv_0.9.1            \n[101] DelayedMatrixStats_1.22.6 ggsignif_0.6.4           \n[103] statmod_1.5.0             tzdb_0.4.0               \n[105] tweenr_2.0.3              pkgconfig_2.0.3          \n[107] tools_4.3.0               cachem_1.0.8             \n[109] RSQLite_2.3.5             viridisLite_0.4.2        \n[111] DBI_1.2.2                 fastmap_1.1.1            \n[113] rmarkdown_2.26            scales_1.3.0             \n[115] grid_4.3.0                ica_1.0-3                \n[117] broom_1.0.5               patchwork_1.2.0          \n[119] dotCall64_1.1-1           carData_3.0-5            \n[121] RANN_2.6.1                farver_2.1.1             \n[123] tidygraph_1.3.1           scatterpie_0.2.1         \n[125] yaml_2.3.8                cli_3.6.2                \n[127] leiden_0.4.3.1            lifecycle_1.0.4          \n[129] dbscan_1.1-12             uwot_0.1.16              \n[131] bluster_1.10.0            backports_1.4.1          \n[133] DropletUtils_1.20.0       BiocParallel_1.34.2      \n[135] timechange_0.3.0          gtable_0.3.4             \n[137] rjson_0.2.21              ggridges_0.5.6           \n[139] progressr_0.14.0          limma_3.56.2             \n[141] jsonlite_1.8.8            edgeR_3.42.4             \n[143] RcppHNSW_0.6.0            bitops_1.0-7             \n[145] bit64_4.0.5               Rtsne_0.17               \n[147] spatstat.utils_3.0-4      BiocNeighbors_1.18.0     \n[149] ggside_0.3.1              metapod_1.8.0            \n[151] dqrng_0.3.2               R.utils_2.12.3           \n[153] lazyeval_0.2.2            shiny_1.8.0              \n[155] htmltools_0.5.7           sctransform_0.4.1        \n[157] rappdirs_0.3.3            glue_1.7.0               \n[159] spam_2.10-0               XVector_0.40.0           \n[161] RCurl_1.98-1.14           rprojroot_2.0.4          \n[163] gridExtra_2.3             R6_2.5.1                 \n[165] labeling_0.4.3            cluster_2.1.6            \n[167] Rhdf5lib_1.22.1           DelayedArray_0.26.7      \n[169] tidyselect_1.2.0          vipor_0.4.7              \n[171] ggforce_0.4.2             xml2_1.3.6               \n[173] car_3.1-2                 AnnotationDbi_1.62.2     \n[175] future_1.33.1             rsvd_1.0.5               \n[177] munsell_0.5.0             KernSmooth_2.23-22       \n[179] data.table_1.15.2         htmlwidgets_1.6.4        \n[181] ComplexHeatmap_2.16.0     RColorBrewer_1.1-3       \n[183] rlang_1.1.3               spatstat.sparse_3.0-3    \n[185] spatstat.explore_3.2-6    Cairo_1.6-2              \n[187] fansi_1.0.6               beeswarm_0.4.0           \n\ndate()\n\n[1] \"Thu Mar 14 14:58:57 2024\""
  },
  {
    "objectID": "analysis/visColocalSpaTalkB2_s2.html",
    "href": "analysis/visColocalSpaTalkB2_s2.html",
    "title": "visualise spatalk decomposition - s2 batch 2",
    "section": "",
    "text": "library(tidyverse)\nlibrary(SpatialExperiment)\nlibrary(here)\nlibrary(ggspavis)\nlibrary(scater)\nlibrary(ggsci)\nlibrary(scran)\nlibrary(pheatmap)\nlibrary(SpaTalk)\nlibrary(Matrix)\nlibrary(Seurat)\nlibrary(igraph)\nlibrary(biomaRt)"
  },
  {
    "objectID": "analysis/visColocalSpaTalkB2_s2.html#adapted-plotting-functions",
    "href": "analysis/visColocalSpaTalkB2_s2.html#adapted-plotting-functions",
    "title": "visualise spatalk decomposition - s2 batch 2",
    "section": "adapted plotting functions",
    "text": "adapted plotting functions\n\nplot_st_celltype_mod &lt;- function (object, celltype1, celltype2,\n                                  size = 1, color_celltype1 = \"blue\",\n                                  color_celltype2 = \"red\",\n                                  color_others = \"grey\", alphaOthers = 1) \n{\n    if (!is(object, \"SpaTalk\")) {\n        stop(\"Invalid class for object: must be 'SpaTalk'!\")\n    }\n    st_type &lt;- object@para$st_type\n    if_skip_dec_celltype &lt;- object@para$if_skip_dec_celltype\n    if (st_type == \"single-cell\") {\n        st_meta &lt;- object@meta$rawmeta\n    }\n    if (st_type == \"spot\") {\n        if (if_skip_dec_celltype) {\n            st_meta &lt;- object@meta$rawmeta\n        }\n        else {\n            st_meta &lt;- object@meta$newmeta\n        }\n    }\n    if (length(celltype1) &gt; 1) {\n        stop(\"Please provide a single cell type name each time!\")\n    }\n    if (length(celltype2) &gt; 1) {\n        stop(\"Please provide a single cell type name each time!\")\n    }\n    if (!celltype1 %in% st_meta$celltype) {\n        stop(paste0(celltype1, \" is not in the st_meta!\"))\n    }\n    if (is.null(celltype2)) {\n      st_meta[!st_meta$celltype %in% c(celltype1), ]$celltype &lt;- \"others\"\n      st_meta$celltype &lt;- factor(st_meta$celltype,\n                               levels = c(celltype1, \"others\"))\n      ggplot2::ggplot() + ggplot2::geom_point(ggplot2::aes(st_meta$x, \n        st_meta$y, color = st_meta$celltype), size = size) + \n        ggplot2::scale_color_manual(values = c(color_celltype1, \n            alpha(color_others, alphaOthers))) + ggplot2::theme_bw() +\n        ggplot2::theme(panel.grid = ggplot2::element_blank()) + \n        ggplot2::labs(x = \"x\", y = \"y\", color = \"celltype\")\n\n    }else{\n          st_meta[!st_meta$celltype %in% c(celltype1, celltype2), ]$celltype &lt;- \"others\"\n          st_meta$celltype &lt;- factor(st_meta$celltype,\n                               levels = c(celltype1, celltype2, \"others\"))\n          ggplot2::ggplot() + ggplot2::geom_point(ggplot2::aes(st_meta$x, \n          st_meta$y, color = st_meta$celltype), size = size) + \n          ggplot2::scale_color_manual(values = c(color_celltype1, color_celltype2, \n            alpha(color_others, alphaOthers))) + ggplot2::theme_bw() +\n          ggplot2::theme(panel.grid = ggplot2::element_blank()) + \n          ggplot2::labs(x = \"x\", y = \"y\", color = \"celltype\")\n    }\n}\n\n\nplot_st_celltype_percent_mod &lt;- function (object, celltype, size = 1,\n                                          color_low = NULL, color_mid = NULL, \n                                          color_high = NULL, color_midpoint = NULL,\n                                          upper_lim = NULL) \n{\n    if (!is(object, \"SpaTalk\")) {\n        stop(\"Invalid class for object: must be 'SpaTalk'!\")\n    }\n    if_skip_dec_celltype &lt;- object@para$if_skip_dec_celltype\n    if (if_skip_dec_celltype) {\n        stop(\"Not availible when skiping dec_celltype()!\")\n    }\n    st_meta &lt;- object@meta$rawmeta\n    if (length(celltype) &gt; 1) {\n        stop(\"Please provide a single cell type name each time!\")\n    }\n    if (!celltype %in% colnames(st_meta)) {\n        stop(paste0(celltype, \" is not in the st_meta!\"))\n    }\n    st_meta$celltype_percent &lt;- as.numeric(st_meta[, celltype])\n    if (!is.null(upper_lim)) {\n        st_meta$celltype_percent[which(st_meta$celltype_percent &gt; upper_lim)] &lt;- upper_lim\n    }\n    if (is.null(color_low)) {\n        color_low &lt;- \"grey\"\n    }\n    if (is.null(color_high)) {\n        color_high &lt;- \"blue\"\n    }\n    if (is.null(color_mid)) {\n        ggplot2::ggplot() + ggplot2::geom_point(ggplot2::aes(st_meta$x, \n            st_meta$y, color = st_meta$celltype_percent), size = size) + \n            ggplot2::scale_color_gradient(low = color_low, high = color_high) + \n            ggplot2::theme_bw() + ggplot2::theme(panel.grid = ggplot2::element_blank()) + \n            ggplot2::labs(x = \"x\", y = \"y\", color = substr(celltype, 1, 6) )\n    }\n    else {\n        if (is.null(color_midpoint)) {\n            color_midpoint &lt;- stats::median(st_meta$celltype_percent)\n        }\n        ggplot2::ggplot() + ggplot2::geom_point(ggplot2::aes(st_meta$x, \n            st_meta$y, color = st_meta$celltype_percent), size = size) + \n            ggplot2::scale_color_gradient2(low = color_low, mid = color_mid, \n                high = color_high, midpoint = color_midpoint) + \n            ggplot2::theme_bw() + ggplot2::theme(panel.grid = ggplot2::element_blank()) + \n            ggplot2::labs(x = \"x\", y = \"y\", color = substr(celltype, 1, 6) )\n    }\n}"
  },
  {
    "objectID": "analysis/visColocalSpaTalkB2_s2.html#sample-1",
    "href": "analysis/visColocalSpaTalkB2_s2.html#sample-1",
    "title": "visualise spatalk decomposition - s2 batch 2",
    "section": "Sample 1",
    "text": "Sample 1\n\nLoad spatalk object\n\nbasedir &lt;- here()\n\nspeAll &lt;- readRDS(paste0(basedir, \"/data/speAllLNB2.rds\"))\n\ni &lt;- 2\nsid &lt;- names(speAll[i])\nspe &lt;- speAll[[i]]\n\nobj &lt;- readRDS(file=paste0(basedir, \n                           \"/data/ST/spatalk/spatalkDecompB2_s\", i,\n                           \".rds\"))\n\n\n\nset color palettes\n\ncolLEC &lt;- c(\"#79AF97FF\",\"#B24745FF\",\"#DF8F44FF\")\nnames(colLEC) &lt;- c(\"SCScLEC\", \"SCSfLEC\", \"MedSinusLEC\")\n\ncolBEC &lt;- c(\"#48557e\", \"#e3a616\",\"#9a3038\")\nnames(colBEC) &lt;- c(\"venBEC\", \"capBEC\", \"artBEC\")\n\n\ncolFRC &lt;- c(\"#800000FF\", \"#FFA319FF\",\"#8A9045FF\", \"#155F83FF\",\n            \"#C16622FF\", \"#6692a3\", \"#3b7f60\")\nnames(colFRC) &lt;- c(\"medRCIFRC\", \"TRC\", \"ACTA2+PRC\", \"VSMC\", \"PI16+RC\", \"PRC1\",\n                   \"BRC\")\n\n\ncolImm &lt;- c(\"#0b6647\", \"#54907e\", \"#94c78a\", \"#6f9568\", \n            \"#8f2810\", \"#d0ac21\",\"#9e9f0b\", \"#486584\",\n            \"#4b5397\", \"#8873d3\", \"#6e3e7a\")\n            \nnames(colImm) &lt;- c(\"naiveB\", \"GCB\", \"MBC\", \"plasmaCell\",\n                   \"CD4T\", \"CD8Tcm\", \"CTL/NKcell\", \"ILC3\", \"pDC\", \"Mph\", \"DC\")\n\ncolAll &lt;- c(colFRC, colBEC, colLEC, colImm) \n\ncolPal &lt;- c(\"#F0027F\", \"#377EB8\", \"#4DAF4A\", \"#984EA3\", \"#FFD700\",\n            \"#FF7F00\", \"#1A1A1A\", \"#666666\", pal_futurama()(10))\n\n\nvis ST data\n\nplotSpots(spe, annotate = \"label\", \n          palette = colPal, size = 1.5) + \n    ggtitle(sid)\n\n\n\n\n\n\n\nvis predicted celltypes\n\nplot_st_pie(object = obj, pie_scale = 1.3, xy_ratio = 1.8, color = colAll)\n\n\n\nlapply(names(colAll), function(ct){\n  plot_st_celltype_percent(object = obj, celltype = ct,size = 2,\n                           color_low =\"#00155e\", color_mid= \"#0000a6\",\n                         color_high = \"#dca611\")\n})\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n[[5]]\n\n\n\n\n\n\n[[6]]\n\n\n\n\n\n\n[[7]]\n\n\n\n\n\n\n[[8]]\n\n\n\n\n\n\n[[9]]\n\n\n\n\n\n\n[[10]]\n\n\n\n\n\n\n[[11]]\n\n\n\n\n\n\n[[12]]\n\n\n\n\n\n\n[[13]]\n\n\n\n\n\n\n[[14]]\n\n\n\n\n\n\n[[15]]\n\n\n\n\n\n\n[[16]]\n\n\n\n\n\n\n[[17]]\n\n\n\n\n\n\n[[18]]\n\n\n\n\n\n\n[[19]]\n\n\n\n\n\n\n[[20]]\n\n\n\n\n\n\n[[21]]\n\n\n\n\n\n\n[[22]]\n\n\n\n\n\n\n[[23]]\n\n\n\n\n\n\n[[24]]\n\n\n\n\n## set 95% quantile as upper limit for color scale (less effected by outlier)\nlapply(names(colAll), function(ct){\n  lim &lt;- quantile(as.numeric(obj@meta$rawmeta[, ct]),probs=c(.95))\n  plot_st_celltype_percent_mod(object = obj, celltype = ct,size = 2,\n                           color_low =\"#00155e\", color_mid= \"#0000a6\",\n                         color_high = \"#dca611\", upper_lim = lim)\n})\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n[[5]]\n\n\n\n\n\n\n[[6]]\n\n\n\n\n\n\n[[7]]\n\n\n\n\n\n\n[[8]]\n\n\n\n\n\n\n[[9]]\n\n\n\n\n\n\n[[10]]\n\n\n\n\n\n\n[[11]]\n\n\n\n\n\n\n[[12]]\n\n\n\n\n\n\n[[13]]\n\n\n\n\n\n\n[[14]]\n\n\n\n\n\n\n[[15]]\n\n\n\n\n\n\n[[16]]\n\n\n\n\n\n\n[[17]]\n\n\n\n\n\n\n[[18]]\n\n\n\n\n\n\n[[19]]\n\n\n\n\n\n\n[[20]]\n\n\n\n\n\n\n[[21]]\n\n\n\n\n\n\n[[22]]\n\n\n\n\n\n\n[[23]]\n\n\n\n\n\n\n[[24]]\n\n\n\n\nlapply(names(colAll), function(ct){\n  lim &lt;- quantile(as.numeric(obj@meta$rawmeta[, ct]),probs=c(.95))\n  plot_st_celltype_percent_mod(object = obj, celltype = ct,size = 2,\n                           color_low =\"#0000a6\", \n                         color_high = \"#dca611\", upper_lim = lim)\n})\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n[[5]]\n\n\n\n\n\n\n[[6]]\n\n\n\n\n\n\n[[7]]\n\n\n\n\n\n\n[[8]]\n\n\n\n\n\n\n[[9]]\n\n\n\n\n\n\n[[10]]\n\n\n\n\n\n\n[[11]]\n\n\n\n\n\n\n[[12]]\n\n\n\n\n\n\n[[13]]\n\n\n\n\n\n\n[[14]]\n\n\n\n\n\n\n[[15]]\n\n\n\n\n\n\n[[16]]\n\n\n\n\n\n\n[[17]]\n\n\n\n\n\n\n[[18]]\n\n\n\n\n\n\n[[19]]\n\n\n\n\n\n\n[[20]]\n\n\n\n\n\n\n[[21]]\n\n\n\n\n\n\n[[22]]\n\n\n\n\n\n\n[[23]]\n\n\n\n\n\n\n[[24]]\n\n\n\n\nlapply(names(colAll), function(ct){\n  lim &lt;- quantile(as.numeric(obj@meta$rawmeta[, ct]),probs=c(.98))\n  plot_st_celltype_percent_mod(object = obj, celltype = ct,size = 1.5,\n                           color_low =\"#ffffff\", \n                         color_high = colAll[ct], upper_lim = lim)\n})\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n[[5]]\n\n\n\n\n\n\n[[6]]\n\n\n\n\n\n\n[[7]]\n\n\n\n\n\n\n[[8]]\n\n\n\n\n\n\n[[9]]\n\n\n\n\n\n\n[[10]]\n\n\n\n\n\n\n[[11]]\n\n\n\n\n\n\n[[12]]\n\n\n\n\n\n\n[[13]]\n\n\n\n\n\n\n[[14]]\n\n\n\n\n\n\n[[15]]\n\n\n\n\n\n\n[[16]]\n\n\n\n\n\n\n[[17]]\n\n\n\n\n\n\n[[18]]\n\n\n\n\n\n\n[[19]]\n\n\n\n\n\n\n[[20]]\n\n\n\n\n\n\n[[21]]\n\n\n\n\n\n\n[[22]]\n\n\n\n\n\n\n[[23]]\n\n\n\n\n\n\n[[24]]\n\n\n\n\nlapply(names(colAll), function(ct){\n  plot_st_celltype(object = obj, celltype = ct,size = 1,\n                         color_celltype = \"#a6062c\") \n})\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n[[5]]\n\n\n\n\n\n\n[[6]]\n\n\n\n\n\n\n[[7]]\n\n\n\n\n\n\n[[8]]\n\n\n\n\n\n\n[[9]]\n\n\n\n\n\n\n[[10]]\n\n\n\n\n\n\n[[11]]\n\n\n\n\n\n\n[[12]]\n\n\n\n\n\n\n[[13]]\n\n\n\n\n\n\n[[14]]\n\n\n\n\n\n\n[[15]]\n\n\n\n\n\n\n[[16]]\n\n\n\n\n\n\n[[17]]\n\n\n\n\n\n\n[[18]]\n\n\n\n\n\n\n[[19]]\n\n\n\n\n\n\n[[20]]\n\n\n\n\n\n\n[[21]]\n\n\n\n\n\n\n[[22]]\n\n\n\n\n\n\n[[23]]\n\n\n\n\n\n\n[[24]]\n\n\n\n\nlapply(names(colAll), function(ct){\n  plot_st_celltype_mod(object = obj, celltype1 = ct,size = 1,\n                       celltype2 = NULL,\n                       color_celltype1 = as.character(colAll[ct]),\n                       color_others = \"white\", alphaOthers=0) \n})\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n[[5]]\n\n\n\n\n\n\n[[6]]\n\n\n\n\n\n\n[[7]]\n\n\n\n\n\n\n[[8]]\n\n\n\n\n\n\n[[9]]\n\n\n\n\n\n\n[[10]]\n\n\n\n\n\n\n[[11]]\n\n\n\n\n\n\n[[12]]\n\n\n\n\n\n\n[[13]]\n\n\n\n\n\n\n[[14]]\n\n\n\n\n\n\n[[15]]\n\n\n\n\n\n\n[[16]]\n\n\n\n\n\n\n[[17]]\n\n\n\n\n\n\n[[18]]\n\n\n\n\n\n\n[[19]]\n\n\n\n\n\n\n[[20]]\n\n\n\n\n\n\n[[21]]\n\n\n\n\n\n\n[[22]]\n\n\n\n\n\n\n[[23]]\n\n\n\n\n\n\n[[24]]\n\n\n\n\nfrc &lt;- names(colFRC)\nother &lt;- c(names(colLEC), names(colBEC), names(colImm))\nallComb &lt;- tidyr::crossing(frc, other) \n\nlapply(seq(1:nrow(allComb)), function(i){\n  ct1 &lt;- as.character(allComb[i,1])\n  ct2 &lt;- as.character(allComb[i,2])\n  plot_st_celltype_mod(object = obj, celltype1 = ct1, celltype2 = ct2,\n                       size = 1, color_celltype1 = as.character(colAll[ct1]),\n                       color_celltype2 = as.character(colAll[ct2]),\n                       color_others = \"white\",\n                       alphaOthers=0\n                       ) \n})\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n[[5]]\n\n\n\n\n\n\n[[6]]\n\n\n\n\n\n\n[[7]]\n\n\n\n\n\n\n[[8]]\n\n\n\n\n\n\n[[9]]\n\n\n\n\n\n\n[[10]]\n\n\n\n\n\n\n[[11]]\n\n\n\n\n\n\n[[12]]\n\n\n\n\n\n\n[[13]]\n\n\n\n\n\n\n[[14]]\n\n\n\n\n\n\n[[15]]\n\n\n\n\n\n\n[[16]]\n\n\n\n\n\n\n[[17]]\n\n\n\n\n\n\n[[18]]\n\n\n\n\n\n\n[[19]]\n\n\n\n\n\n\n[[20]]\n\n\n\n\n\n\n[[21]]\n\n\n\n\n\n\n[[22]]\n\n\n\n\n\n\n[[23]]\n\n\n\n\n\n\n[[24]]\n\n\n\n\n\n\n[[25]]\n\n\n\n\n\n\n[[26]]\n\n\n\n\n\n\n[[27]]\n\n\n\n\n\n\n[[28]]\n\n\n\n\n\n\n[[29]]\n\n\n\n\n\n\n[[30]]\n\n\n\n\n\n\n[[31]]\n\n\n\n\n\n\n[[32]]\n\n\n\n\n\n\n[[33]]\n\n\n\n\n\n\n[[34]]\n\n\n\n\n\n\n[[35]]\n\n\n\n\n\n\n[[36]]\n\n\n\n\n\n\n[[37]]\n\n\n\n\n\n\n[[38]]\n\n\n\n\n\n\n[[39]]\n\n\n\n\n\n\n[[40]]\n\n\n\n\n\n\n[[41]]\n\n\n\n\n\n\n[[42]]\n\n\n\n\n\n\n[[43]]\n\n\n\n\n\n\n[[44]]\n\n\n\n\n\n\n[[45]]\n\n\n\n\n\n\n[[46]]\n\n\n\n\n\n\n[[47]]\n\n\n\n\n\n\n[[48]]\n\n\n\n\n\n\n[[49]]\n\n\n\n\n\n\n[[50]]\n\n\n\n\n\n\n[[51]]\n\n\n\n\n\n\n[[52]]\n\n\n\n\n\n\n[[53]]\n\n\n\n\n\n\n[[54]]\n\n\n\n\n\n\n[[55]]\n\n\n\n\n\n\n[[56]]\n\n\n\n\n\n\n[[57]]\n\n\n\n\n\n\n[[58]]\n\n\n\n\n\n\n[[59]]\n\n\n\n\n\n\n[[60]]\n\n\n\n\n\n\n[[61]]\n\n\n\n\n\n\n[[62]]\n\n\n\n\n\n\n[[63]]\n\n\n\n\n\n\n[[64]]\n\n\n\n\n\n\n[[65]]\n\n\n\n\n\n\n[[66]]\n\n\n\n\n\n\n[[67]]\n\n\n\n\n\n\n[[68]]\n\n\n\n\n\n\n[[69]]\n\n\n\n\n\n\n[[70]]\n\n\n\n\n\n\n[[71]]\n\n\n\n\n\n\n[[72]]\n\n\n\n\n\n\n[[73]]\n\n\n\n\n\n\n[[74]]\n\n\n\n\n\n\n[[75]]\n\n\n\n\n\n\n[[76]]\n\n\n\n\n\n\n[[77]]\n\n\n\n\n\n\n[[78]]\n\n\n\n\n\n\n[[79]]\n\n\n\n\n\n\n[[80]]\n\n\n\n\n\n\n[[81]]\n\n\n\n\n\n\n[[82]]\n\n\n\n\n\n\n[[83]]\n\n\n\n\n\n\n[[84]]\n\n\n\n\n\n\n[[85]]\n\n\n\n\n\n\n[[86]]\n\n\n\n\n\n\n[[87]]\n\n\n\n\n\n\n[[88]]\n\n\n\n\n\n\n[[89]]\n\n\n\n\n\n\n[[90]]\n\n\n\n\n\n\n[[91]]\n\n\n\n\n\n\n[[92]]\n\n\n\n\n\n\n[[93]]\n\n\n\n\n\n\n[[94]]\n\n\n\n\n\n\n[[95]]\n\n\n\n\n\n\n[[96]]\n\n\n\n\n\n\n[[97]]\n\n\n\n\n\n\n[[98]]\n\n\n\n\n\n\n[[99]]\n\n\n\n\n\n\n[[100]]\n\n\n\n\n\n\n[[101]]\n\n\n\n\n\n\n[[102]]\n\n\n\n\n\n\n[[103]]\n\n\n\n\n\n\n[[104]]\n\n\n\n\n\n\n[[105]]\n\n\n\n\n\n\n[[106]]\n\n\n\n\n\n\n[[107]]\n\n\n\n\n\n\n[[108]]\n\n\n\n\n\n\n[[109]]\n\n\n\n\n\n\n[[110]]\n\n\n\n\n\n\n[[111]]\n\n\n\n\n\n\n[[112]]\n\n\n\n\n\n\n[[113]]\n\n\n\n\n\n\n[[114]]\n\n\n\n\n\n\n[[115]]\n\n\n\n\n\n\n[[116]]\n\n\n\n\n\n\n[[117]]\n\n\n\n\n\n\n[[118]]\n\n\n\n\n\n\n[[119]]"
  },
  {
    "objectID": "analysis/visColocalSpaTalkB2_s2.html#session-info",
    "href": "analysis/visColocalSpaTalkB2_s2.html#session-info",
    "title": "visualise spatalk decomposition - s2 batch 2",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] parallel  stats4    stats     graphics  grDevices utils     datasets \n[8] methods   base     \n\nother attached packages:\n [1] biomaRt_2.56.1              igraph_2.0.2               \n [3] Seurat_5.0.2                SeuratObject_5.0.1         \n [5] sp_2.1-3                    Matrix_1.6-5               \n [7] SpaTalk_1.0                 doParallel_1.0.17          \n [9] iterators_1.0.14            foreach_1.5.2              \n[11] ggalluvial_0.12.5           pheatmap_1.0.12            \n[13] scran_1.28.2                ggsci_3.0.1                \n[15] scater_1.28.0               scuttle_1.10.3             \n[17] ggspavis_1.6.0              here_1.0.1                 \n[19] SpatialExperiment_1.10.0    SingleCellExperiment_1.22.0\n[21] SummarizedExperiment_1.30.2 Biobase_2.60.0             \n[23] GenomicRanges_1.52.1        GenomeInfoDb_1.36.4        \n[25] IRanges_2.36.0              S4Vectors_0.40.1           \n[27] BiocGenerics_0.48.0         MatrixGenerics_1.12.3      \n[29] matrixStats_1.2.0           lubridate_1.9.3            \n[31] forcats_1.0.0               stringr_1.5.1              \n[33] dplyr_1.1.4                 purrr_1.0.2                \n[35] readr_2.1.5                 tidyr_1.3.1                \n[37] tibble_3.2.1                ggplot2_3.5.0              \n[39] tidyverse_2.0.0            \n\nloaded via a namespace (and not attached):\n  [1] spatstat.sparse_3.0-3     bitops_1.0-7             \n  [3] httr_1.4.7                RColorBrewer_1.1-3       \n  [5] backports_1.4.1           tools_4.3.0              \n  [7] sctransform_0.4.1         utf8_1.2.4               \n  [9] R6_2.5.1                  HDF5Array_1.28.1         \n [11] lazyeval_0.2.2            uwot_0.1.16              \n [13] rhdf5filters_1.12.1       withr_3.0.0              \n [15] prettyunits_1.2.0         gridExtra_2.3            \n [17] progressr_0.14.0          cli_3.6.2                \n [19] spatstat.explore_3.2-6    fastDummies_1.7.3        \n [21] scatterpie_0.2.1          labeling_0.4.3           \n [23] spatstat.data_3.0-4       ggridges_0.5.6           \n [25] pbapply_1.7-2             R.utils_2.12.3           \n [27] parallelly_1.37.1         limma_3.56.2             \n [29] RSQLite_2.3.5             rstudioapi_0.15.0        \n [31] generics_0.1.3            ica_1.0-3                \n [33] spatstat.random_3.2-3     car_3.1-2                \n [35] ggbeeswarm_0.7.2          fansi_1.0.6              \n [37] abind_1.4-5               R.methodsS3_1.8.2        \n [39] lifecycle_1.0.4           yaml_2.3.8               \n [41] edgeR_3.42.4              carData_3.0-5            \n [43] BiocFileCache_2.8.0       rhdf5_2.44.0             \n [45] Rtsne_0.17                blob_1.2.4               \n [47] grid_4.3.0                promises_1.2.1           \n [49] dqrng_0.3.2               crayon_1.5.2             \n [51] miniUI_0.1.1.1            lattice_0.22-5           \n [53] beachmat_2.16.0           cowplot_1.1.3            \n [55] KEGGREST_1.40.1           magick_2.8.3             \n [57] pillar_1.9.0              knitr_1.45               \n [59] metapod_1.8.0             rjson_0.2.21             \n [61] future.apply_1.11.1       codetools_0.2-19         \n [63] leiden_0.4.3.1            glue_1.7.0               \n [65] ggfun_0.1.4               data.table_1.15.2        \n [67] vctrs_0.6.5               png_0.1-8                \n [69] spam_2.10-0               gtable_0.3.4             \n [71] cachem_1.0.8              xfun_0.42                \n [73] S4Arrays_1.0.6            mime_0.12                \n [75] DropletUtils_1.20.0       NNLM_0.4.4               \n [77] ggside_0.3.1              survival_3.5-8           \n [79] statmod_1.5.0             bluster_1.10.0           \n [81] ellipsis_0.3.2            fitdistrplus_1.1-11      \n [83] ROCR_1.0-11               nlme_3.1-164             \n [85] bit64_4.0.5               filelock_1.0.3           \n [87] progress_1.2.3            RcppAnnoy_0.0.22         \n [89] rprojroot_2.0.4           irlba_2.3.5.1            \n [91] vipor_0.4.7               KernSmooth_2.23-22       \n [93] DBI_1.2.2                 colorspace_2.1-0         \n [95] tidyselect_1.2.0          curl_5.2.1               \n [97] bit_4.0.5                 compiler_4.3.0           \n [99] BiocNeighbors_1.18.0      xml2_1.3.6               \n[101] DelayedArray_0.26.7       plotly_4.10.4            \n[103] scales_1.3.0              lmtest_0.9-40            \n[105] rappdirs_0.3.3            digest_0.6.34            \n[107] goftest_1.2-3             spatstat.utils_3.0-4     \n[109] rmarkdown_2.26            XVector_0.40.0           \n[111] htmltools_0.5.7           pkgconfig_2.0.3          \n[113] sparseMatrixStats_1.12.2  dbplyr_2.4.0             \n[115] fastmap_1.1.1             rlang_1.1.3              \n[117] htmlwidgets_1.6.4         shiny_1.8.0              \n[119] DelayedMatrixStats_1.22.6 farver_2.1.1             \n[121] zoo_1.8-12                jsonlite_1.8.8           \n[123] BiocParallel_1.34.2       R.oo_1.26.0              \n[125] BiocSingular_1.16.0       RCurl_1.98-1.14          \n[127] magrittr_2.0.3            GenomeInfoDbData_1.2.10  \n[129] dotCall64_1.1-1           patchwork_1.2.0          \n[131] Rhdf5lib_1.22.1           munsell_0.5.0            \n[133] Rcpp_1.0.12               viridis_0.6.5            \n[135] reticulate_1.35.0         stringi_1.8.3            \n[137] zlibbioc_1.46.0           MASS_7.3-60.0.1          \n[139] plyr_1.8.9                listenv_0.9.1            \n[141] ggrepel_0.9.5             deldir_2.0-4             \n[143] Biostrings_2.68.1         splines_4.3.0            \n[145] tensor_1.5                hms_1.1.3                \n[147] locfit_1.5-9.9            ggpubr_0.6.0             \n[149] spatstat.geom_3.2-9       ggsignif_0.6.4           \n[151] RcppHNSW_0.6.0            reshape2_1.4.4           \n[153] ScaledMatrix_1.8.1        XML_3.99-0.16.1          \n[155] evaluate_0.23             tzdb_0.4.0               \n[157] tweenr_2.0.3              httpuv_1.6.14            \n[159] RANN_2.6.1                polyclip_1.10-6          \n[161] future_1.33.1             scattermore_1.2          \n[163] ggforce_0.4.2             ggExtra_0.10.1           \n[165] rsvd_1.0.5                broom_1.0.5              \n[167] xtable_1.8-4              RSpectra_0.16-1          \n[169] rstatix_0.7.2             later_1.3.2              \n[171] viridisLite_0.4.2         memoise_2.0.1            \n[173] AnnotationDbi_1.62.2      beeswarm_0.4.0           \n[175] cluster_2.1.6             timechange_0.3.0         \n[177] globals_0.16.2           \n\ndate()\n\n[1] \"Thu Mar 14 15:05:34 2024\""
  },
  {
    "objectID": "analysis/visColocalSpaTalk_s4.html",
    "href": "analysis/visColocalSpaTalk_s4.html",
    "title": "visualise spatalk decomposition - s4 batch 1",
    "section": "",
    "text": "library(tidyverse)\nlibrary(SpatialExperiment)\nlibrary(here)\nlibrary(ggspavis)\nlibrary(scater)\nlibrary(ggsci)\nlibrary(scran)\nlibrary(pheatmap)\nlibrary(SpaTalk)\nlibrary(Matrix)\nlibrary(Seurat)\nlibrary(igraph)\nlibrary(biomaRt)"
  },
  {
    "objectID": "analysis/visColocalSpaTalk_s4.html#adapted-plotting-functions",
    "href": "analysis/visColocalSpaTalk_s4.html#adapted-plotting-functions",
    "title": "visualise spatalk decomposition - s4 batch 1",
    "section": "adapted plotting functions",
    "text": "adapted plotting functions\n\nplot_st_celltype_mod &lt;- function (object, celltype1, celltype2,\n                                  size = 1, color_celltype1 = \"blue\",\n                                  color_celltype2 = \"red\",\n                                  color_others = \"grey\", alphaOthers = 1) \n{\n    if (!is(object, \"SpaTalk\")) {\n        stop(\"Invalid class for object: must be 'SpaTalk'!\")\n    }\n    st_type &lt;- object@para$st_type\n    if_skip_dec_celltype &lt;- object@para$if_skip_dec_celltype\n    if (st_type == \"single-cell\") {\n        st_meta &lt;- object@meta$rawmeta\n    }\n    if (st_type == \"spot\") {\n        if (if_skip_dec_celltype) {\n            st_meta &lt;- object@meta$rawmeta\n        }\n        else {\n            st_meta &lt;- object@meta$newmeta\n        }\n    }\n    if (length(celltype1) &gt; 1) {\n        stop(\"Please provide a single cell type name each time!\")\n    }\n    if (length(celltype2) &gt; 1) {\n        stop(\"Please provide a single cell type name each time!\")\n    }\n    if (!celltype1 %in% st_meta$celltype) {\n        stop(paste0(celltype1, \" is not in the st_meta!\"))\n    }\n    if (is.null(celltype2)) {\n      st_meta[!st_meta$celltype %in% c(celltype1), ]$celltype &lt;- \"others\"\n      st_meta$celltype &lt;- factor(st_meta$celltype,\n                               levels = c(celltype1, \"others\"))\n      ggplot2::ggplot() + ggplot2::geom_point(ggplot2::aes(st_meta$x, \n        st_meta$y, color = st_meta$celltype), size = size) + \n        ggplot2::scale_color_manual(values = c(color_celltype1, \n            alpha(color_others, alphaOthers))) + ggplot2::theme_bw() +\n        ggplot2::theme(panel.grid = ggplot2::element_blank()) + \n        ggplot2::labs(x = \"x\", y = \"y\", color = \"celltype\")\n\n    }else{\n          st_meta[!st_meta$celltype %in% c(celltype1, celltype2), ]$celltype &lt;- \"others\"\n          st_meta$celltype &lt;- factor(st_meta$celltype,\n                               levels = c(celltype1, celltype2, \"others\"))\n          ggplot2::ggplot() + ggplot2::geom_point(ggplot2::aes(st_meta$x, \n          st_meta$y, color = st_meta$celltype), size = size) + \n          ggplot2::scale_color_manual(values = c(color_celltype1, color_celltype2, \n            alpha(color_others, alphaOthers))) + ggplot2::theme_bw() +\n          ggplot2::theme(panel.grid = ggplot2::element_blank()) + \n          ggplot2::labs(x = \"x\", y = \"y\", color = \"celltype\")\n    }\n}\n\n\nplot_st_celltype_percent_mod &lt;- function (object, celltype, size = 1,\n                                          color_low = NULL, color_mid = NULL, \n                                          color_high = NULL, color_midpoint = NULL,\n                                          upper_lim = NULL) \n{\n    if (!is(object, \"SpaTalk\")) {\n        stop(\"Invalid class for object: must be 'SpaTalk'!\")\n    }\n    if_skip_dec_celltype &lt;- object@para$if_skip_dec_celltype\n    if (if_skip_dec_celltype) {\n        stop(\"Not availible when skiping dec_celltype()!\")\n    }\n    st_meta &lt;- object@meta$rawmeta\n    if (length(celltype) &gt; 1) {\n        stop(\"Please provide a single cell type name each time!\")\n    }\n    if (!celltype %in% colnames(st_meta)) {\n        stop(paste0(celltype, \" is not in the st_meta!\"))\n    }\n    st_meta$celltype_percent &lt;- as.numeric(st_meta[, celltype])\n    if (!is.null(upper_lim)) {\n        st_meta$celltype_percent[which(st_meta$celltype_percent &gt; upper_lim)] &lt;- upper_lim\n    }\n    if (is.null(color_low)) {\n        color_low &lt;- \"grey\"\n    }\n    if (is.null(color_high)) {\n        color_high &lt;- \"blue\"\n    }\n    if (is.null(color_mid)) {\n        ggplot2::ggplot() + ggplot2::geom_point(ggplot2::aes(st_meta$x, \n            st_meta$y, color = st_meta$celltype_percent), size = size) + \n            ggplot2::scale_color_gradient(low = color_low, high = color_high) + \n            ggplot2::theme_bw() + ggplot2::theme(panel.grid = ggplot2::element_blank()) + \n            ggplot2::labs(x = \"x\", y = \"y\", color = substr(celltype, 1, 6) )\n    }\n    else {\n        if (is.null(color_midpoint)) {\n            color_midpoint &lt;- stats::median(st_meta$celltype_percent)\n        }\n        ggplot2::ggplot() + ggplot2::geom_point(ggplot2::aes(st_meta$x, \n            st_meta$y, color = st_meta$celltype_percent), size = size) + \n            ggplot2::scale_color_gradient2(low = color_low, mid = color_mid, \n                high = color_high, midpoint = color_midpoint) + \n            ggplot2::theme_bw() + ggplot2::theme(panel.grid = ggplot2::element_blank()) + \n            ggplot2::labs(x = \"x\", y = \"y\", color = substr(celltype, 1, 6) )\n    }\n}"
  },
  {
    "objectID": "analysis/visColocalSpaTalk_s4.html#sample-4",
    "href": "analysis/visColocalSpaTalk_s4.html#sample-4",
    "title": "visualise spatalk decomposition - s4 batch 1",
    "section": "Sample 4",
    "text": "Sample 4\n\nLoad spatalk object\n\nbasedir &lt;- here()\n\nspeAll &lt;- readRDS(paste0(basedir, \"/data/speAllLN.rds\"))\n\ni &lt;- 4\nsid &lt;- names(speAll[i])\nspe &lt;- speAll[[i]]\n\nobj &lt;- readRDS(file=paste0(basedir, \n                           \"/data/ST/spatalk/spatalkDecomp_s\", i,\n                           \".rds\"))\n\n\n\nset color palettes\n\ncolLEC &lt;- c(\"#79AF97FF\",\"#B24745FF\",\"#DF8F44FF\")\nnames(colLEC) &lt;- c(\"SCScLEC\", \"SCSfLEC\", \"MedSinusLEC\")\n\ncolBEC &lt;- c(\"#48557e\", \"#e3a616\",\"#9a3038\")\nnames(colBEC) &lt;- c(\"venBEC\", \"capBEC\", \"artBEC\")\n\n\ncolFRC &lt;- c(\"#800000FF\", \"#FFA319FF\",\"#8A9045FF\", \"#155F83FF\",\n            \"#C16622FF\", \"#6692a3\", \"#3b7f60\")\nnames(colFRC) &lt;- c(\"medRCIFRC\", \"TRC\", \"ACTA2+PRC\", \"VSMC\", \"PI16+RC\", \"PRC1\",\n                   \"BRC\")\n\n\ncolImm &lt;- c(\"#0b6647\", \"#54907e\", \"#94c78a\", \"#6f9568\", \n            \"#8f2810\", \"#d0ac21\",\"#9e9f0b\", \"#486584\",\n            \"#4b5397\", \"#8873d3\", \"#6e3e7a\")\n            \nnames(colImm) &lt;- c(\"naiveB\", \"GCB\", \"MBC\", \"plasmaCell\",\n                   \"CD4T\", \"CD8Tcm\", \"CTL/NKcell\", \"ILC3\", \"pDC\", \"Mph\", \"DC\")\n\ncolAll &lt;- c(colFRC, colBEC, colLEC, colImm) \n\ncolPal &lt;- c(\"#F0027F\", \"#377EB8\", \"#4DAF4A\", \"#984EA3\", \"#FFD700\",\n            \"#FF7F00\", \"#1A1A1A\", \"#666666\", pal_futurama()(10))\n\n\nvis ST data\n\nplotSpots(spe, annotate = \"label\", \n          palette = colPal, size = 1.5) + \n    ggtitle(sid)\n\n\n\n\n\n\n\nvis predicted celltypes\n\nplot_st_pie(object = obj, pie_scale = 1.3, xy_ratio = 1.8, color = colAll)\n\n\n\nlapply(names(colAll), function(ct){\n  plot_st_celltype_percent(object = obj, celltype = ct,size = 2,\n                           color_low =\"#00155e\", color_mid= \"#0000a6\",\n                         color_high = \"#dca611\")\n})\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n[[5]]\n\n\n\n\n\n\n[[6]]\n\n\n\n\n\n\n[[7]]\n\n\n\n\n\n\n[[8]]\n\n\n\n\n\n\n[[9]]\n\n\n\n\n\n\n[[10]]\n\n\n\n\n\n\n[[11]]\n\n\n\n\n\n\n[[12]]\n\n\n\n\n\n\n[[13]]\n\n\n\n\n\n\n[[14]]\n\n\n\n\n\n\n[[15]]\n\n\n\n\n\n\n[[16]]\n\n\n\n\n\n\n[[17]]\n\n\n\n\n\n\n[[18]]\n\n\n\n\n\n\n[[19]]\n\n\n\n\n\n\n[[20]]\n\n\n\n\n\n\n[[21]]\n\n\n\n\n\n\n[[22]]\n\n\n\n\n\n\n[[23]]\n\n\n\n\n\n\n[[24]]\n\n\n\n\n## set 95% quantile as upper limit for color scale (less effected by outlier)\nlapply(names(colAll), function(ct){\n  lim &lt;- quantile(as.numeric(obj@meta$rawmeta[, ct]),probs=c(.95))\n  plot_st_celltype_percent_mod(object = obj, celltype = ct,size = 2,\n                           color_low =\"#00155e\", color_mid= \"#0000a6\",\n                         color_high = \"#dca611\", upper_lim = lim)\n})\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n[[5]]\n\n\n\n\n\n\n[[6]]\n\n\n\n\n\n\n[[7]]\n\n\n\n\n\n\n[[8]]\n\n\n\n\n\n\n[[9]]\n\n\n\n\n\n\n[[10]]\n\n\n\n\n\n\n[[11]]\n\n\n\n\n\n\n[[12]]\n\n\n\n\n\n\n[[13]]\n\n\n\n\n\n\n[[14]]\n\n\n\n\n\n\n[[15]]\n\n\n\n\n\n\n[[16]]\n\n\n\n\n\n\n[[17]]\n\n\n\n\n\n\n[[18]]\n\n\n\n\n\n\n[[19]]\n\n\n\n\n\n\n[[20]]\n\n\n\n\n\n\n[[21]]\n\n\n\n\n\n\n[[22]]\n\n\n\n\n\n\n[[23]]\n\n\n\n\n\n\n[[24]]\n\n\n\n\nlapply(names(colAll), function(ct){\n  lim &lt;- quantile(as.numeric(obj@meta$rawmeta[, ct]),probs=c(.95))\n  plot_st_celltype_percent_mod(object = obj, celltype = ct,size = 2,\n                           color_low =\"#0000a6\", \n                         color_high = \"#dca611\", upper_lim = lim)\n})\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n[[5]]\n\n\n\n\n\n\n[[6]]\n\n\n\n\n\n\n[[7]]\n\n\n\n\n\n\n[[8]]\n\n\n\n\n\n\n[[9]]\n\n\n\n\n\n\n[[10]]\n\n\n\n\n\n\n[[11]]\n\n\n\n\n\n\n[[12]]\n\n\n\n\n\n\n[[13]]\n\n\n\n\n\n\n[[14]]\n\n\n\n\n\n\n[[15]]\n\n\n\n\n\n\n[[16]]\n\n\n\n\n\n\n[[17]]\n\n\n\n\n\n\n[[18]]\n\n\n\n\n\n\n[[19]]\n\n\n\n\n\n\n[[20]]\n\n\n\n\n\n\n[[21]]\n\n\n\n\n\n\n[[22]]\n\n\n\n\n\n\n[[23]]\n\n\n\n\n\n\n[[24]]\n\n\n\n\nlapply(names(colAll), function(ct){\n  lim &lt;- quantile(as.numeric(obj@meta$rawmeta[, ct]),probs=c(.98))\n  plot_st_celltype_percent_mod(object = obj, celltype = ct,size = 2,\n                           color_low =\"#ffffff\", \n                         color_high = colAll[ct], upper_lim = lim)\n})\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n[[5]]\n\n\n\n\n\n\n[[6]]\n\n\n\n\n\n\n[[7]]\n\n\n\n\n\n\n[[8]]\n\n\n\n\n\n\n[[9]]\n\n\n\n\n\n\n[[10]]\n\n\n\n\n\n\n[[11]]\n\n\n\n\n\n\n[[12]]\n\n\n\n\n\n\n[[13]]\n\n\n\n\n\n\n[[14]]\n\n\n\n\n\n\n[[15]]\n\n\n\n\n\n\n[[16]]\n\n\n\n\n\n\n[[17]]\n\n\n\n\n\n\n[[18]]\n\n\n\n\n\n\n[[19]]\n\n\n\n\n\n\n[[20]]\n\n\n\n\n\n\n[[21]]\n\n\n\n\n\n\n[[22]]\n\n\n\n\n\n\n[[23]]\n\n\n\n\n\n\n[[24]]\n\n\n\n\nlapply(names(colAll), function(ct){\n  plot_st_celltype(object = obj, celltype = ct,size = 1,\n                         color_celltype = \"#a6062c\") \n})\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n[[5]]\n\n\n\n\n\n\n[[6]]\n\n\n\n\n\n\n[[7]]\n\n\n\n\n\n\n[[8]]\n\n\n\n\n\n\n[[9]]\n\n\n\n\n\n\n[[10]]\n\n\n\n\n\n\n[[11]]\n\n\n\n\n\n\n[[12]]\n\n\n\n\n\n\n[[13]]\n\n\n\n\n\n\n[[14]]\n\n\n\n\n\n\n[[15]]\n\n\n\n\n\n\n[[16]]\n\n\n\n\n\n\n[[17]]\n\n\n\n\n\n\n[[18]]\n\n\n\n\n\n\n[[19]]\n\n\n\n\n\n\n[[20]]\n\n\n\n\n\n\n[[21]]\n\n\n\n\n\n\n[[22]]\n\n\n\n\n\n\n[[23]]\n\n\n\n\n\n\n[[24]]\n\n\n\n\nlapply(names(colAll), function(ct){\n  plot_st_celltype_mod(object = obj, celltype1 = ct,size = 1,\n                       celltype2 = NULL,\n                       color_celltype1 = as.character(colAll[ct]),\n                       color_others = \"white\", alphaOthers=0) \n})\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n[[5]]\n\n\n\n\n\n\n[[6]]\n\n\n\n\n\n\n[[7]]\n\n\n\n\n\n\n[[8]]\n\n\n\n\n\n\n[[9]]\n\n\n\n\n\n\n[[10]]\n\n\n\n\n\n\n[[11]]\n\n\n\n\n\n\n[[12]]\n\n\n\n\n\n\n[[13]]\n\n\n\n\n\n\n[[14]]\n\n\n\n\n\n\n[[15]]\n\n\n\n\n\n\n[[16]]\n\n\n\n\n\n\n[[17]]\n\n\n\n\n\n\n[[18]]\n\n\n\n\n\n\n[[19]]\n\n\n\n\n\n\n[[20]]\n\n\n\n\n\n\n[[21]]\n\n\n\n\n\n\n[[22]]\n\n\n\n\n\n\n[[23]]\n\n\n\n\n\n\n[[24]]\n\n\n\n\nfrc &lt;- names(colFRC)\nother &lt;- c(names(colLEC), names(colBEC), names(colImm))\nallComb &lt;- tidyr::crossing(frc, other) \n\nlapply(seq(1:nrow(allComb)), function(i){\n  ct1 &lt;- as.character(allComb[i,1])\n  ct2 &lt;- as.character(allComb[i,2])\n  plot_st_celltype_mod(object = obj, celltype1 = ct1, celltype2 = ct2,\n                       size = 1, color_celltype1 = as.character(colAll[ct1]),\n                       color_celltype2 = as.character(colAll[ct2]),\n                       color_others = \"white\",\n                       alphaOthers=0\n                       ) \n})\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n[[5]]\n\n\n\n\n\n\n[[6]]\n\n\n\n\n\n\n[[7]]\n\n\n\n\n\n\n[[8]]\n\n\n\n\n\n\n[[9]]\n\n\n\n\n\n\n[[10]]\n\n\n\n\n\n\n[[11]]\n\n\n\n\n\n\n[[12]]\n\n\n\n\n\n\n[[13]]\n\n\n\n\n\n\n[[14]]\n\n\n\n\n\n\n[[15]]\n\n\n\n\n\n\n[[16]]\n\n\n\n\n\n\n[[17]]\n\n\n\n\n\n\n[[18]]\n\n\n\n\n\n\n[[19]]\n\n\n\n\n\n\n[[20]]\n\n\n\n\n\n\n[[21]]\n\n\n\n\n\n\n[[22]]\n\n\n\n\n\n\n[[23]]\n\n\n\n\n\n\n[[24]]\n\n\n\n\n\n\n[[25]]\n\n\n\n\n\n\n[[26]]\n\n\n\n\n\n\n[[27]]\n\n\n\n\n\n\n[[28]]\n\n\n\n\n\n\n[[29]]\n\n\n\n\n\n\n[[30]]\n\n\n\n\n\n\n[[31]]\n\n\n\n\n\n\n[[32]]\n\n\n\n\n\n\n[[33]]\n\n\n\n\n\n\n[[34]]\n\n\n\n\n\n\n[[35]]\n\n\n\n\n\n\n[[36]]\n\n\n\n\n\n\n[[37]]\n\n\n\n\n\n\n[[38]]\n\n\n\n\n\n\n[[39]]\n\n\n\n\n\n\n[[40]]\n\n\n\n\n\n\n[[41]]\n\n\n\n\n\n\n[[42]]\n\n\n\n\n\n\n[[43]]\n\n\n\n\n\n\n[[44]]\n\n\n\n\n\n\n[[45]]\n\n\n\n\n\n\n[[46]]\n\n\n\n\n\n\n[[47]]\n\n\n\n\n\n\n[[48]]\n\n\n\n\n\n\n[[49]]\n\n\n\n\n\n\n[[50]]\n\n\n\n\n\n\n[[51]]\n\n\n\n\n\n\n[[52]]\n\n\n\n\n\n\n[[53]]\n\n\n\n\n\n\n[[54]]\n\n\n\n\n\n\n[[55]]\n\n\n\n\n\n\n[[56]]\n\n\n\n\n\n\n[[57]]\n\n\n\n\n\n\n[[58]]\n\n\n\n\n\n\n[[59]]\n\n\n\n\n\n\n[[60]]\n\n\n\n\n\n\n[[61]]\n\n\n\n\n\n\n[[62]]\n\n\n\n\n\n\n[[63]]\n\n\n\n\n\n\n[[64]]\n\n\n\n\n\n\n[[65]]\n\n\n\n\n\n\n[[66]]\n\n\n\n\n\n\n[[67]]\n\n\n\n\n\n\n[[68]]\n\n\n\n\n\n\n[[69]]\n\n\n\n\n\n\n[[70]]\n\n\n\n\n\n\n[[71]]\n\n\n\n\n\n\n[[72]]\n\n\n\n\n\n\n[[73]]\n\n\n\n\n\n\n[[74]]\n\n\n\n\n\n\n[[75]]\n\n\n\n\n\n\n[[76]]\n\n\n\n\n\n\n[[77]]\n\n\n\n\n\n\n[[78]]\n\n\n\n\n\n\n[[79]]\n\n\n\n\n\n\n[[80]]\n\n\n\n\n\n\n[[81]]\n\n\n\n\n\n\n[[82]]\n\n\n\n\n\n\n[[83]]\n\n\n\n\n\n\n[[84]]\n\n\n\n\n\n\n[[85]]\n\n\n\n\n\n\n[[86]]\n\n\n\n\n\n\n[[87]]\n\n\n\n\n\n\n[[88]]\n\n\n\n\n\n\n[[89]]\n\n\n\n\n\n\n[[90]]\n\n\n\n\n\n\n[[91]]\n\n\n\n\n\n\n[[92]]\n\n\n\n\n\n\n[[93]]\n\n\n\n\n\n\n[[94]]\n\n\n\n\n\n\n[[95]]\n\n\n\n\n\n\n[[96]]\n\n\n\n\n\n\n[[97]]\n\n\n\n\n\n\n[[98]]\n\n\n\n\n\n\n[[99]]\n\n\n\n\n\n\n[[100]]\n\n\n\n\n\n\n[[101]]\n\n\n\n\n\n\n[[102]]\n\n\n\n\n\n\n[[103]]\n\n\n\n\n\n\n[[104]]\n\n\n\n\n\n\n[[105]]\n\n\n\n\n\n\n[[106]]\n\n\n\n\n\n\n[[107]]\n\n\n\n\n\n\n[[108]]\n\n\n\n\n\n\n[[109]]\n\n\n\n\n\n\n[[110]]\n\n\n\n\n\n\n[[111]]\n\n\n\n\n\n\n[[112]]\n\n\n\n\n\n\n[[113]]\n\n\n\n\n\n\n[[114]]\n\n\n\n\n\n\n[[115]]\n\n\n\n\n\n\n[[116]]\n\n\n\n\n\n\n[[117]]\n\n\n\n\n\n\n[[118]]\n\n\n\n\n\n\n[[119]]"
  },
  {
    "objectID": "analysis/visColocalSpaTalk_s4.html#session-info",
    "href": "analysis/visColocalSpaTalk_s4.html#session-info",
    "title": "visualise spatalk decomposition - s4 batch 1",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] parallel  stats4    stats     graphics  grDevices utils     datasets \n[8] methods   base     \n\nother attached packages:\n [1] biomaRt_2.56.1              igraph_2.0.2               \n [3] Seurat_5.0.2                SeuratObject_5.0.1         \n [5] sp_2.1-3                    Matrix_1.6-5               \n [7] SpaTalk_1.0                 doParallel_1.0.17          \n [9] iterators_1.0.14            foreach_1.5.2              \n[11] ggalluvial_0.12.5           pheatmap_1.0.12            \n[13] scran_1.28.2                ggsci_3.0.1                \n[15] scater_1.28.0               scuttle_1.10.3             \n[17] ggspavis_1.6.0              here_1.0.1                 \n[19] SpatialExperiment_1.10.0    SingleCellExperiment_1.22.0\n[21] SummarizedExperiment_1.30.2 Biobase_2.60.0             \n[23] GenomicRanges_1.52.1        GenomeInfoDb_1.36.4        \n[25] IRanges_2.36.0              S4Vectors_0.40.1           \n[27] BiocGenerics_0.48.0         MatrixGenerics_1.12.3      \n[29] matrixStats_1.2.0           lubridate_1.9.3            \n[31] forcats_1.0.0               stringr_1.5.1              \n[33] dplyr_1.1.4                 purrr_1.0.2                \n[35] readr_2.1.5                 tidyr_1.3.1                \n[37] tibble_3.2.1                ggplot2_3.5.0              \n[39] tidyverse_2.0.0            \n\nloaded via a namespace (and not attached):\n  [1] spatstat.sparse_3.0-3     bitops_1.0-7             \n  [3] httr_1.4.7                RColorBrewer_1.1-3       \n  [5] backports_1.4.1           tools_4.3.0              \n  [7] sctransform_0.4.1         utf8_1.2.4               \n  [9] R6_2.5.1                  HDF5Array_1.28.1         \n [11] lazyeval_0.2.2            uwot_0.1.16              \n [13] rhdf5filters_1.12.1       withr_3.0.0              \n [15] prettyunits_1.2.0         gridExtra_2.3            \n [17] progressr_0.14.0          cli_3.6.2                \n [19] spatstat.explore_3.2-6    fastDummies_1.7.3        \n [21] scatterpie_0.2.1          labeling_0.4.3           \n [23] spatstat.data_3.0-4       ggridges_0.5.6           \n [25] pbapply_1.7-2             R.utils_2.12.3           \n [27] parallelly_1.37.1         limma_3.56.2             \n [29] RSQLite_2.3.5             rstudioapi_0.15.0        \n [31] generics_0.1.3            ica_1.0-3                \n [33] spatstat.random_3.2-3     car_3.1-2                \n [35] ggbeeswarm_0.7.2          fansi_1.0.6              \n [37] abind_1.4-5               R.methodsS3_1.8.2        \n [39] lifecycle_1.0.4           yaml_2.3.8               \n [41] edgeR_3.42.4              carData_3.0-5            \n [43] BiocFileCache_2.8.0       rhdf5_2.44.0             \n [45] Rtsne_0.17                blob_1.2.4               \n [47] grid_4.3.0                promises_1.2.1           \n [49] dqrng_0.3.2               crayon_1.5.2             \n [51] miniUI_0.1.1.1            lattice_0.22-5           \n [53] beachmat_2.16.0           cowplot_1.1.3            \n [55] KEGGREST_1.40.1           magick_2.8.3             \n [57] pillar_1.9.0              knitr_1.45               \n [59] metapod_1.8.0             rjson_0.2.21             \n [61] future.apply_1.11.1       codetools_0.2-19         \n [63] leiden_0.4.3.1            glue_1.7.0               \n [65] ggfun_0.1.4               data.table_1.15.2        \n [67] vctrs_0.6.5               png_0.1-8                \n [69] spam_2.10-0               gtable_0.3.4             \n [71] cachem_1.0.8              xfun_0.42                \n [73] S4Arrays_1.0.6            mime_0.12                \n [75] DropletUtils_1.20.0       NNLM_0.4.4               \n [77] ggside_0.3.1              survival_3.5-8           \n [79] statmod_1.5.0             bluster_1.10.0           \n [81] ellipsis_0.3.2            fitdistrplus_1.1-11      \n [83] ROCR_1.0-11               nlme_3.1-164             \n [85] bit64_4.0.5               filelock_1.0.3           \n [87] progress_1.2.3            RcppAnnoy_0.0.22         \n [89] rprojroot_2.0.4           irlba_2.3.5.1            \n [91] vipor_0.4.7               KernSmooth_2.23-22       \n [93] DBI_1.2.2                 colorspace_2.1-0         \n [95] tidyselect_1.2.0          curl_5.2.1               \n [97] bit_4.0.5                 compiler_4.3.0           \n [99] BiocNeighbors_1.18.0      xml2_1.3.6               \n[101] DelayedArray_0.26.7       plotly_4.10.4            \n[103] scales_1.3.0              lmtest_0.9-40            \n[105] rappdirs_0.3.3            digest_0.6.34            \n[107] goftest_1.2-3             spatstat.utils_3.0-4     \n[109] rmarkdown_2.26            XVector_0.40.0           \n[111] htmltools_0.5.7           pkgconfig_2.0.3          \n[113] sparseMatrixStats_1.12.2  dbplyr_2.4.0             \n[115] fastmap_1.1.1             rlang_1.1.3              \n[117] htmlwidgets_1.6.4         shiny_1.8.0              \n[119] DelayedMatrixStats_1.22.6 farver_2.1.1             \n[121] zoo_1.8-12                jsonlite_1.8.8           \n[123] BiocParallel_1.34.2       R.oo_1.26.0              \n[125] BiocSingular_1.16.0       RCurl_1.98-1.14          \n[127] magrittr_2.0.3            GenomeInfoDbData_1.2.10  \n[129] dotCall64_1.1-1           patchwork_1.2.0          \n[131] Rhdf5lib_1.22.1           munsell_0.5.0            \n[133] Rcpp_1.0.12               viridis_0.6.5            \n[135] reticulate_1.35.0         stringi_1.8.3            \n[137] zlibbioc_1.46.0           MASS_7.3-60.0.1          \n[139] plyr_1.8.9                listenv_0.9.1            \n[141] ggrepel_0.9.5             deldir_2.0-4             \n[143] Biostrings_2.68.1         splines_4.3.0            \n[145] tensor_1.5                hms_1.1.3                \n[147] locfit_1.5-9.9            ggpubr_0.6.0             \n[149] spatstat.geom_3.2-9       ggsignif_0.6.4           \n[151] RcppHNSW_0.6.0            reshape2_1.4.4           \n[153] ScaledMatrix_1.8.1        XML_3.99-0.16.1          \n[155] evaluate_0.23             tzdb_0.4.0               \n[157] tweenr_2.0.3              httpuv_1.6.14            \n[159] RANN_2.6.1                polyclip_1.10-6          \n[161] future_1.33.1             scattermore_1.2          \n[163] ggforce_0.4.2             ggExtra_0.10.1           \n[165] rsvd_1.0.5                broom_1.0.5              \n[167] xtable_1.8-4              RSpectra_0.16-1          \n[169] rstatix_0.7.2             later_1.3.2              \n[171] viridisLite_0.4.2         memoise_2.0.1            \n[173] AnnotationDbi_1.62.2      beeswarm_0.4.0           \n[175] cluster_2.1.6             timechange_0.3.0         \n[177] globals_0.16.2           \n\ndate()\n\n[1] \"Thu Mar 14 15:09:39 2024\""
  }
]